{"version":3,"sources":["serviceWorker.ts","store/CryptoWalletConnectionStore.ts","constants/ethereumErrorCodes.ts","cryptoUtils/unitConverter.ts","store/OrbsAccountStore.ts","configs.ts","theme/Theme.tsx","store/storesInitialization.ts","AppWrapper.tsx","services/Services.ts","components/structure/header/logo-white.svg","components/structure/header/links.ts","components/structure/header/MenuPopup.tsx","components/structure/header/Header.tsx","components/structure/Page.tsx","components/structure/ContentFitting.tsx","components/forms/VirtualChainSubscriptionForm.tsx","services/servicesHooks.ts","store/storeHooks.ts","components/modals/ActionConfirmationModal.tsx","constants/routes.ts","pages/NewVCPage.tsx","components/forms/VcIdForm.tsx","components/forms/VirtualChainDetailsForm.tsx","components/forms/VcSubscriptionExtensionForm.tsx","services/subscriptionsServiceHooks.ts","index.tsx","pages/ExistingVCPage.tsx","components/ActionButton/ActionButton.tsx","components/VcGistCard/VcGistCard.tsx","pages/RecoverVcPage.tsx","pages/VcCreationSuccessPage.tsx","pages/VcExtensionSuccessPage.tsx","components/InTextLink.tsx","pages/NoEthereumProviderSection.tsx","App.tsx","pages/NoEthereumProviderPage.tsx"],"names":["Boolean","window","location","hostname","match","CryptoWalletConnectionStore","action","cryptoWalletConnectionService","addressCheckingInterval","undefined","reactionToWalletConnection","this","hasEthereumProvider","hasEventsSupport","reaction","isConnectedToWallet","isConnected","a","readInformationFromConnectedWallet","fireImmediately","onMainAddressChange","address","setMainAddress","readMainAddress","then","setInterval","requestConnectionPermission","permissionGranted","setWalletConnectionRequestApproved","walletConnectionRequestApproved","walletAddress","requestApproved","mainAddress","didUserApproveDappInThePast","observable","computed","JSON_RPC_ERROR_CODES","userRejectedRequest","unauthorized","unsupportedMethod","fullOrbsFromWeiOrbs","weiOrbsString","parseInt","web3","utils","fromWei","weiOrbsFromFullOrbs","fullOrbs","BigInt","toWei","toString","OrbsAccountStore","cryptoWalletIntegrationStore","orbsTokenService","monthlySubscriptionPlanService","subscriptionsService","addressChangeReaction","readContractParameters","console","log","setDoneLoading","reactToConnectedAddressChanged","readMonthlyRateInFullOrbs","monthlyRate","readTier","tier","promievent","name","resetTxIndicators","setTxPending","res","code","setTxCanceled","allowanceForStakingContractInWeiOrbs","mspContractAddress","contractAddress","promivent","approve","handlePromievent","readAndSetMSPContractAllowance","virtualChainSubscriptionPayload","createANewVC","val","recipt","readVcIdFromHistory","blockNumber","vcId","manuallyReadAccountData","virtualChainSubscriptionExtensionPayload","extendSubscription","currentAddress","setDefaultAccountAddress","refreshAccountListeners","readDataForAccount","failLoadingProcess","error","accountAddress","setFromAccount","tierName","monthlyRateInFullOrbs","setMspContractParameters","setContractParametersErrorLoading","catch","e","readAllowance","balanceInWeiOrbs","setMSPContractAllowance","vcCreationEvents","vcCreatedEvent","readVcData","vcData","setVcDataInMap","cancelAllCurrentSubscriptions","vcCreationsEvents","setVcCreationEvents","readDataForAllCreatedVcs","setErrorLoading","setTxHadError","contractParametersDoneLoading","contractParametersErrorLoading","doneLoading","errorLoading","txPending","txCanceled","txHadError","contractAllowance","allowanceToMSPContract","mspContractParameters","readVcDataResponse","vcIdToData","set","map","process","REACT_APP_ETHEREUM_NETWORK","INFURA_KEY","REACT_APP_INFURA_KEY","configs","urlBase","PUBLIC_BASE_PATH","network","minimalSubscriptionAmount","decimals","v2contractsAddressesOverride","ETHEREUM_PROVIDER_WS","termsOfUseUrl","privacyPolicyUrl","baseTheme","responsiveFontSizes","createMuiTheme","palette","type","primary","main","secondary","background","default","paper","typography","overrides","MuiPaper","root","MuiTypography","colorPrimary","MuiLink","configure","enforceActions","useStyles","makeStyles","theme","snackbarInfo","backgroundColor","dark","color","getContrastText","services","ethereumProvider","Web3","providers","WebsocketProvider","cryptoWalletIntegrationService","CryptoWalletConnectionService","SubscriptionsService","subscriptionContract","OrbsTokenService","erc20Contract","MonthlySubscriptionPlanService","monthlySubscriptionPlanDeployedInstance","buildServices","ethereum","stores","subscriptionService","orbsAccountStore","getStores","AppWrapper","React","memo","props","classes","appComponent","children","ReactRouterRoute","Route","StylesProvider","injectFirst","ThemeProvider","maxSnack","variantInfo","CssBaseline","links","translationKey","url","useLinkDescriptors","useMemo","link","label","menuButton","padding","spacing","width","transition","HOVER_COLOR","MenuPopup","linkDescriptors","useBoolean","setFalse","setTrue","value","useState","anchorEl","setAnchorEl","handleClick","useCallback","event","currentTarget","handleClose","menuItemLinks","idx","MenuItem","onClick","Link","component","NavLink","exact","className","activeStyle","underline","to","variant","noWrap","id","IconButton","aria-label","Popover","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","appBar","height","paddingTop","paddingBottom","boxSizing","zIndex","drawer","logo","nav","display","flexWrap","toolbar","paddingRight","paddingLeft","margin","maxWidth","justifyContent","headerButtonsContainer","alignItems","displayInMetamaskButton","marginRight","movedDown","marginLeft","Header","useTheme","smallerThanSmall","useMediaQuery","breakpoints","down","menuLinks","menu","AppBar","position","data-testid","Toolbar","src","alt","page","flexDirection","Page","rest","contentFitter","ContentFitting","others","textField","phaseInstructionLabel","marginBottom","forControlLabel","checkBoxes","typographyAnimated","visibility","typographyAnimatedShow","actionButton","light","VirtualChainSubscriptionForm","subscribeNewVC","disableActionButtons","subscriptionsLengthsOptions","enqueueSnackbar","useSnackbar","setPlanOptionChanged","setName","monthsToPayForInAdvance","setMonthsToPayForInAdvance","runOnCanary","setRunOnCanary","useForm","register","handleSubmit","currentCostOfPlan","errors","hasEnoughAllowance","submit","formData","deploymentSubsets","MONTHLY_SUBSCRIPTION_PLAN_SERVICE_CONSTANTS","amountInFullOrbs","deploymentSubset","canary","isCertified","runOnlyOnCertifiedValidators","preventDuplicate","setAllowance","onSubmit","style","Typography","TextField","autoComplete","InputLabelProps","pointerEvents","title","onChange","target","required","inputRef","fullWidth","select","SelectProps","native","lengthOption","toLocaleString","FormControlLabel","control","Checkbox","checked","LabelWithIconTooltip","text","tooltipText","Button","disabled","startIcon","Tooltip","marginInlineStart","useServices","useContext","MobXProviderContext","Error","useSubscriptionsService","useStores","useCryptoWalletIntegrationStore","useOrbsAccountStore","dialogPaper","border","boxShadow","ActionConfirmationModal","onAccept","onCancel","contentText","acceptText","cancelText","Dialog","fullScreen","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","ROUTES","NewVCPage","observer","history","useHistory","showModal","setShowModal","content","dialogTexts","setDialogTexts","onDialogAccept","setOnDialogAccept","allowanceInFullOrbs","setAllowanceForStakingContract","createNewVc","push","showCreateVcDialog","onCancelMessage","showSetMSPContractAllowanceDialog","VcIdForm","actionButtonText","onActionClick","setVcId","VirtualChainDetailsForm","paidUntil","vcName","textAlign","Moment","unix","format","VcSubscriptionExtensionForm","extendVcSubscription","useVcDataHook","isLoading","setIsLoading","errorFindingVc","setErrorFindingVc","setVcData","genRefTime","owner","rate","payedUntil","expiresAt","useEffect","AppComponent","ExistingVCPage","useQueryParam","StringParam","vcIdToUse","onOpenVcClicked","extendExistingVcSubscription","showSelectVcForm","length","isOwnerOfVc","vcContent","warning","ActionButton","Color","lighten","hex","bullet","transform","fontSize","pos","VcGistCard","onOpenPageClick","hoverTargetRef","useRef","isHovering","useHover","secondaryDarkOrTextSecondary","textMainOrInherit","Card","ref","CardContent","gutterBottom","fontWeight","Date","year","month","day","CardActions","marginTop","size","NO_DATA_VC_RESPONSE","RecoverVCPage","hasError","setHasErrors","isReading","setIsReading","readAndSetVcs","readVcCreatedEvents","createdVcs","setVcCreationEventsAndUpdateVcsData","readAndSetVcsAndState","VC_GIST_CARD_WIDTH_REM","gridTemplateColumns","gridGap","justifyItems","vcCreationEvent","get","VcCreationSuccessPage","useParams","VcExtensionSuccessPage","InTextLink","href","rel","noEthereumProviderSection","borderRadius","NoEthereumProviderSection","walletConnectionPhase","actionFunction","tickerValue","pressedOnInstall","shouldDisplayLegalTicker","buttonIsEnabled","isInstall","titleText","subTitleText","buttonText","innerHtmlForLegalAgreement","renderToString","setValue","dangerouslySetInnerHTML","__html","appMain","headerSeparator","mainWrapper","backgroundRepeat","backgroundImage","backgroundAttachment","backgroundPosition","minHeight","flexShrink","drawerPaper","drawerContainer","overflow","App","appContent","path","askToConnect","NoEthereumProviderPage","hasPressed","installMetaMask","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b01d55b8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { action, computed, observable, reaction } from \"mobx\";\nimport { IReactionDisposer } from \"mobx/lib/core/reaction\";\nimport { ICryptoWalletConnectionService } from \"@orbs-network/contracts-js\";\n\nexport class CryptoWalletConnectionStore {\n  @observable private walletConnectionRequestApproved: boolean = false;\n\n  @observable public hasEthereumProvider: boolean;\n  @observable public hasEventsSupport: boolean;\n\n  @observable public mainAddress: string = \"\";\n\n  private addressCheckingInterval?: NodeJS.Timeout = undefined;\n  reactionToWalletConnection: IReactionDisposer;\n\n  constructor(\n    private cryptoWalletConnectionService: ICryptoWalletConnectionService\n  ) {\n    this.hasEthereumProvider =\n      cryptoWalletConnectionService.hasEthereumProvider;\n    this.hasEventsSupport = cryptoWalletConnectionService.hasEventsSupport;\n\n    this.reactionToWalletConnection = reaction(\n      () => this.isConnectedToWallet,\n      async (isConnected) => {\n        if (isConnected) {\n          this.readInformationFromConnectedWallet();\n        }\n      },\n      {\n        fireImmediately: true,\n      }\n    );\n\n    if (this.hasEthereumProvider) {\n      // We will only detect address change if the Ethereum provider can support it\n      if (this.cryptoWalletConnectionService.hasEventsSupport) {\n        this.cryptoWalletConnectionService.onMainAddressChange((address) =>\n          this.setMainAddress(address)\n        );\n      } else {\n        // Else, we will read it one time + set an interval\n        this.cryptoWalletConnectionService\n          .readMainAddress()\n          .then((address) => this.setMainAddress(address));\n\n        this.addressCheckingInterval = setInterval(\n          () =>\n            this.cryptoWalletConnectionService\n              .readMainAddress()\n              .then((address) => this.setMainAddress(address)),\n          1000\n        );\n      }\n    }\n  }\n\n  @computed\n  public get isConnectedToWallet(): boolean {\n    return (\n      this.hasEthereumProvider &&\n      (this.cryptoWalletConnectionService.didUserApproveDappInThePast ||\n        this.walletConnectionRequestApproved)\n    );\n  }\n\n  public async askToConnect(): Promise<boolean> {\n    if (this.isConnectedToWallet) {\n      return true;\n    } else {\n      const permissionGranted = await this.cryptoWalletConnectionService.requestConnectionPermission();\n      this.setWalletConnectionRequestApproved(permissionGranted);\n\n      return this.walletConnectionRequestApproved;\n    }\n  }\n\n  private async readInformationFromConnectedWallet() {\n    const walletAddress = await this.cryptoWalletConnectionService.readMainAddress();\n\n    this.setMainAddress(walletAddress);\n  }\n\n  @action(\"setWalletConnectionRequestApproved\")\n  private setWalletConnectionRequestApproved(requestApproved: boolean) {\n    this.walletConnectionRequestApproved = requestApproved;\n  }\n\n  @action(\"setMainAddress\")\n  private setMainAddress(mainAddress: string) {\n    this.mainAddress = mainAddress;\n  }\n}\n","// DEV_NOTE : Taken from typeless library 'eth-json-rpc-errors';\nexport const JSON_RPC_ERROR_CODES = {\n  rpc: {\n    invalidInput: -32000,\n    resourceNotFound: -32001,\n    resourceUnavailable: -32002,\n    transactionRejected: -32003,\n    methodNotSupported: -32004,\n    parse: -32700,\n    invalidRequest: -32600,\n    methodNotFound: -32601,\n    invalidParams: -32602,\n    internal: -32603,\n  },\n  provider: {\n    userRejectedRequest: 4001,\n    unauthorized: 4100,\n    unsupportedMethod: 4200,\n  },\n};\n","import web3 from \"web3\";\n\nexport function fullOrbsFromWeiOrbs(weiOrbsString: string): number {\n  return parseInt(web3.utils.fromWei(weiOrbsString, \"ether\"));\n}\n\nexport function weiOrbsFromFullOrbs(fullOrbs: number): bigint {\n  return BigInt(web3.utils.toWei(fullOrbs.toString(), \"ether\"));\n}\n","import {\n  action,\n  computed,\n  IReactionDisposer,\n  observable,\n  reaction,\n} from \"mobx\";\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\nimport { PromiEvent, TransactionReceipt } from \"web3-core\";\nimport { JSON_RPC_ERROR_CODES } from \"../constants/ethereumErrorCodes\";\nimport { fullOrbsFromWeiOrbs } from \"../cryptoUtils/unitConverter\";\nimport {\n  IMonthlySubscriptionPlanService,\n  IOrbsTokenService,\n  ISubscriptionsService,\n  TVirtualChainSubscriptionExtensionPayload,\n  TVirtualChainSubscriptionPayload,\n} from \"@orbs-network/contracts-js\";\nimport {\n  TReadVcDataResponse,\n  TVcCreatedEvent,\n} from \"@orbs-network/contracts-js/src/ethereumContractsServices/subscriptionService/ISubscriptionsService\";\n\ntype TMSPContractParameters = {\n  tierName: string;\n  monthlyRateInFullOrbs: number;\n};\n\nexport class OrbsAccountStore {\n  @observable public contractParametersDoneLoading = false;\n  @observable public contractParametersErrorLoading = false;\n  @observable public doneLoading = false;\n  @observable public errorLoading = false;\n  @observable public txPending = false;\n  @observable public txHadError = false;\n  @observable public txCanceled = false;\n  @observable public isGuardian = false;\n  @observable public mspContractParameters: TMSPContractParameters = {\n    monthlyRateInFullOrbs: 0,\n    tierName: \"\",\n  };\n\n  @observable public vcCreationEvents: TVcCreatedEvent[] = [];\n  @observable public vcIdToData: Map<\n    String,\n    TReadVcDataResponse\n  > = observable.map();\n\n  // TODO : O.L : Move all MSP related data to its own store when starting to work with more than 1.\n  @observable public allowanceToMSPContract = 0;\n\n  private addressChangeReaction: IReactionDisposer;\n\n  constructor(\n    private cryptoWalletIntegrationStore: CryptoWalletConnectionStore,\n    private orbsTokenService: IOrbsTokenService,\n    private monthlySubscriptionPlanService: IMonthlySubscriptionPlanService,\n    private subscriptionsService: ISubscriptionsService\n  ) {\n    this.readContractParameters().then(() =>\n      console.log(\"MSP contract parameters read success\")\n    );\n    this.addressChangeReaction = reaction(\n      () => this.cryptoWalletIntegrationStore.mainAddress,\n      async (address) => {\n        this.setDoneLoading(false);\n        await this.reactToConnectedAddressChanged(address);\n\n        this.monthlySubscriptionPlanService\n          .readMonthlyRateInFullOrbs()\n          .then((monthlyRate) => console.log({ monthlyRate }));\n\n        this.monthlySubscriptionPlanService\n          .readTier()\n          .then((tier) => console.log({ tier }));\n        this.setDoneLoading(true);\n      },\n      {\n        fireImmediately: true,\n      }\n    );\n  }\n\n  // **** Computed values ****\n\n  // **** Contract interactions ****\n  private async handlePromievent(\n    promievent: PromiEvent<TransactionReceipt>,\n    name = \"A promivent\"\n  ): Promise<TransactionReceipt | undefined> {\n    this.resetTxIndicators();\n\n    // Indicate tx is pending\n    this.setTxPending(true);\n    console.log(`Waiting for promievent of ${name}`);\n\n    try {\n      const res = await promievent;\n      console.log(`Got Results for promievent of ${name}`);\n      return res;\n    } catch (e) {\n      if (\n        (e as any).code === JSON_RPC_ERROR_CODES.provider.userRejectedRequest\n      ) {\n        this.setTxCanceled(true);\n      } else {\n        throw e;\n      }\n    } finally {\n      this.setTxPending(false);\n    }\n  }\n\n  public async setAllowanceForStakingContract(\n    allowanceForStakingContractInWeiOrbs: bigint\n  ): Promise<void> {\n    const mspContractAddress = this.monthlySubscriptionPlanService\n      .contractAddress;\n    const promivent = this.orbsTokenService.approve(\n      mspContractAddress,\n      allowanceForStakingContractInWeiOrbs\n    );\n\n    this.handlePromievent(\n      // @ts-ignore\n      promivent,\n      \"setAllowanceForStakingContract\"\n    ).then(() =>\n      this.readAndSetMSPContractAllowance(\n        this.cryptoWalletIntegrationStore.mainAddress\n      )\n    );\n  }\n\n  // TODO : O.L : Move to proper store\n  public async createNewVc(\n    virtualChainSubscriptionPayload: TVirtualChainSubscriptionPayload\n  ): Promise<string> {\n    const mspContractAddress = this.monthlySubscriptionPlanService\n      .contractAddress;\n    const promivent = this.monthlySubscriptionPlanService.createANewVC(\n      virtualChainSubscriptionPayload\n    );\n\n    // @ts-ignore\n    const recipt = await this.handlePromievent(promivent, \"createNewVc\").then(\n      (val) => {\n        console.log(\"Add handling of created vc\");\n        console.log({ val });\n        return val;\n      }\n    );\n\n    const { vcId } = await this.subscriptionsService.readVcIdFromHistory(\n      recipt!.blockNumber,\n      this.cryptoWalletIntegrationStore.mainAddress\n    );\n\n    // DEV_NOTE : O.L : Re-Reading all relevant data, no need to wait\n    this.manuallyReadAccountData();\n\n    return vcId;\n  }\n\n  public async extendExistingVcSubscription(\n    virtualChainSubscriptionExtensionPayload: TVirtualChainSubscriptionExtensionPayload\n  ): Promise<void> {\n    const mspContractAddress = this.monthlySubscriptionPlanService\n      .contractAddress;\n    const promivent = this.monthlySubscriptionPlanService.extendSubscription(\n      virtualChainSubscriptionExtensionPayload\n    );\n\n    const recipt = await this.handlePromievent(\n      // @ts-ignore\n      promivent,\n      \"extendExistingVcSubscription\"\n    ).then((val) => {\n      console.log({ val });\n      return val;\n    });\n\n    // DEV_NOTE : O.L : Re-Reading all relevant data, no need to wait\n    this.manuallyReadAccountData();\n  }\n\n  // **** Current address changed ****\n\n  private async reactToConnectedAddressChanged(currentAddress: string) {\n    if (currentAddress) {\n      this.setDefaultAccountAddress(currentAddress);\n\n      if (this.cryptoWalletIntegrationStore.hasEventsSupport) {\n        this.refreshAccountListeners(currentAddress);\n      }\n\n      try {\n        await this.readDataForAccount(currentAddress);\n      } catch (e) {\n        this.failLoadingProcess(e);\n        console.error(\n          \"Error in reacting to address change in Orbs Account Store\",\n          e\n        );\n      }\n    }\n  }\n\n  private setDefaultAccountAddress(accountAddress: string) {\n    this.monthlySubscriptionPlanService.setFromAccount(accountAddress);\n    this.subscriptionsService.setFromAccount(accountAddress);\n    this.orbsTokenService.setFromAccount(accountAddress);\n  }\n\n  // **** Data reading and setting ****\n\n  private async readContractParameters() {\n    try {\n      const tierName = await this.monthlySubscriptionPlanService.readTier();\n      const monthlyRateInFullOrbs = await this.monthlySubscriptionPlanService.readMonthlyRateInFullOrbs();\n\n      this.setMspContractParameters({ tierName, monthlyRateInFullOrbs });\n    } catch (e) {\n      this.setContractParametersErrorLoading(true);\n      console.error(\"Error loading msp contract parameters\");\n      console.error(e);\n    }\n  }\n\n  public async manuallyReadAccountData() {\n    try {\n      await this.readDataForAccount(\n        this.cryptoWalletIntegrationStore.mainAddress\n      );\n    } catch (e) {\n      this.failLoadingProcess(e);\n      console.error(\n        \"Error in manually reading address data in Orbs Account Store\",\n        e\n      );\n    }\n  }\n\n  private async readDataForAccount(accountAddress: string) {\n    // try {\n    //   await this.readAndSetIsGuardian(accountAddress);\n    // } catch (e) {\n    //   console.error(`Error read-n-set isGuardian ${e}`);\n    // }\n    await this.readAndSetMSPContractAllowance(accountAddress).catch((e) => {\n      console.error(`Error read-n-set MSP contract allowance: ${e}`);\n    });\n  }\n\n  // **** Read and Set ****\n  private async readAndSetMSPContractAllowance(accountAddress: string) {\n    const balanceInWeiOrbs = await this.orbsTokenService.readAllowance(\n      accountAddress,\n      this.monthlySubscriptionPlanService.contractAddress\n    );\n    this.setMSPContractAllowance(\n      fullOrbsFromWeiOrbs(balanceInWeiOrbs.toString())\n    );\n  }\n\n  private async readDataForAllCreatedVcs() {\n    for (let vcCreatedEvent of this.vcCreationEvents) {\n      try {\n        const vcData = await this.subscriptionsService.readVcData(\n          vcCreatedEvent.vcId\n        );\n\n        console.log(`Setting for ${vcCreatedEvent.vcId}`);\n        this.setVcDataInMap(vcCreatedEvent.vcId, vcData);\n      } catch (e) {\n        console.error(\n          `Error trying reading vc data for ${vcCreatedEvent.vcId} : ${e}`\n        );\n      }\n    }\n  }\n\n  // ****  Subscriptions ****\n\n  private async refreshAccountListeners(accountAddress: string) {\n    this.cancelAllCurrentSubscriptions();\n  }\n\n  private cancelAllCurrentSubscriptions() {}\n\n  // ****  Complex setters ****\n  public setVcCreationEventsAndUpdateVcsData(\n    vcCreationsEvents: TVcCreatedEvent[]\n  ) {\n    this.setVcCreationEvents(vcCreationsEvents);\n\n    this.readDataForAllCreatedVcs();\n  }\n\n  private failLoadingProcess(error: Error) {\n    this.setErrorLoading(true);\n    this.setDoneLoading(true);\n  }\n\n  private resetTxIndicators() {\n    this.setTxPending(false);\n    this.setTxHadError(false);\n    this.setTxCanceled(false);\n  }\n\n  // ****  Observables setter actions ****\n  @action(\"setContractParametersDoneLoading\")\n  private setContractParametersDoneLoading(\n    contractParametersDoneLoading: boolean\n  ) {\n    this.contractParametersDoneLoading = contractParametersDoneLoading;\n  }\n\n  @action(\"setContractParametersErrorLoading\")\n  private setContractParametersErrorLoading(\n    contractParametersErrorLoading: boolean\n  ) {\n    this.contractParametersErrorLoading = contractParametersErrorLoading;\n  }\n\n  @action(\"setDoneLoading\")\n  private setDoneLoading(doneLoading: boolean) {\n    this.doneLoading = doneLoading;\n  }\n\n  @action(\"setErrorLoading\")\n  private setErrorLoading(errorLoading: boolean) {\n    this.errorLoading = errorLoading;\n  }\n\n  @action(\"setTxPending\")\n  private setTxPending(txPending: boolean) {\n    this.txPending = txPending;\n  }\n\n  @action(\"setTxCanceled\")\n  private setTxCanceled(txCanceled: boolean) {\n    this.txCanceled = txCanceled;\n  }\n\n  @action(\"setTxHadError\")\n  private setTxHadError(txHadError: boolean) {\n    this.txHadError = txHadError;\n  }\n\n  @action(\"setMSPContractAllowance\")\n  private setMSPContractAllowance(contractAllowance: number) {\n    this.allowanceToMSPContract = contractAllowance;\n  }\n\n  @action(\"setMspContractParameters\")\n  private setMspContractParameters(\n    mspContractParameters: TMSPContractParameters\n  ) {\n    this.mspContractParameters = mspContractParameters;\n  }\n\n  @action(\"setVcCreationEvents\")\n  private setVcCreationEvents(vcCreationsEvents: TVcCreatedEvent[]) {\n    this.vcCreationEvents = vcCreationsEvents;\n  }\n\n  @action(\"setVcDataInMap\")\n  private setVcDataInMap(\n    vcId: string,\n    readVcDataResponse: TReadVcDataResponse\n  ) {\n    this.vcIdToData.set(vcId, readVcDataResponse);\n  }\n}\n","type TSupportedNets = \"local\" | \"ropsten\" | \"mainnet\";\n// @ts-ignore\nconst ethereumNetwork: TSupportedNets = process.env.REACT_APP_ETHEREUM_NETWORK;\nexport const IS_DEV = process.env.NODE_ENV !== \"production\";\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY;\n\nexport interface IConfig {\n  urlBase: string;\n  network: TSupportedNets;\n  minimalSubscriptionAmount: number;\n  decimals: number;\n  v2contractsAddressesOverride: Partial<{\n    subscriptionContract: string;\n    erc20Contract: string;\n    // DEV_NOTE: O.L : For now, we have only one deployed 'Monthly Subscription Plan' instance.\n    // When we will start supporting more, we will need to read their addresses, tier name and price from a registery contract.\n    monthlySubscriptionPlanDeployedInstance: string;\n  }>;\n  ETHEREUM_PROVIDER_WS: string;\n  termsOfUseUrl: string;\n  privacyPolicyUrl: string;\n}\n\n// export const MainnetConfig: IConfig = {\n//     erc20Address: \"0xff56cc6b1e6ded347aa0b7676c85ab0b3d08b0fa\",\n//     subscriptionAddress: \"0x6e79DFB79CD53A2b08bC8c2852DecA7D73cD24fC\",\n//     network: \"mainnet\",\n//     minimalSubscriptionAmount: 6200,\n//     decimals: 18,\n// }\n\n// export const RopstenConfig: IConfig = {\n//     erc20Address: \"0xeD0Aa9A4F9e5ae9092994f4B86F6AAa89944939b\",\n//     subscriptionAddress: \"0xe654ad79a93af035a60c66100aa95dfd2215cc51\",\n//     network: \"ropsten\",\n//     minimalSubscriptionAmount: 100,\n//     decimals: 0,\n// }\n\n// TODO : O.L : Move these to a better place + ensure values are correct. (Maybe read it from the contract)\nconst MAIN_NET_MINIMUM_SUBSCRIPTION_AMOUNT = 6200;\nconst MAIN_NET_DECIMALS = 18;\n\nconst configs: IConfig = {\n  urlBase: process.env.PUBLIC_BASE_PATH || \"\",\n  network: \"mainnet\",\n  minimalSubscriptionAmount: MAIN_NET_MINIMUM_SUBSCRIPTION_AMOUNT,\n  decimals: MAIN_NET_DECIMALS,\n  v2contractsAddressesOverride: {},\n  ETHEREUM_PROVIDER_WS: `wss://mainnet.infura.io/ws/v3/${INFURA_KEY}`,\n  termsOfUseUrl: \"https://www.orbs.com/vc-portal-terms-of-use/\",\n  privacyPolicyUrl: \"https://www.orbs.com/vc-portal-privacy-policy/\",\n};\n\n// Webpack will remove this section on production build //\nif (process.env.NODE_ENV !== \"production\") {\n  if (ethereumNetwork === \"local\") {\n    const addresses = require(\"./local/addresses.json\");\n\n    configs.network = \"local\";\n\n    // Override addresses\n    configs.v2contractsAddressesOverride.subscriptionContract =\n      addresses.subscriptions;\n    configs.v2contractsAddressesOverride.erc20Contract = addresses.erc20;\n    configs.v2contractsAddressesOverride.monthlySubscriptionPlanDeployedInstance =\n      addresses.monthlySubscriptionPlanDeployedInstance;\n  }\n}\n\nexport default configs;\n","import { blue } from \"@material-ui/core/colors\";\nimport responsiveFontSizes from \"@material-ui/core/styles/responsiveFontSizes\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\n\nconst COLOR1 = \"#0D0D0D\"; // dark gray\nconst COLOR2 = \"#6ec6d8\"; // bluish\nconst COLOR3 = \"#03FCF5\"; // bright bluish- Tetra\n\n// const PRIMARY_TEXT = '#dbdbdb';\nconst PRIMARY_TEXT = \"#dbdbdb\";\nconst SECONDARY_TEXT = \"#7B7B7B\";\n\nexport const HEADER_HEIGHT_REM = 6;\n\nexport const baseTheme = responsiveFontSizes(\n  createMuiTheme({\n    palette: {\n      // TODO : Adjust all styles after structure is done\n      type: \"dark\",\n      primary: { main: \"#09142c\" },\n      secondary: { main: \"#74f6fd\" },\n      background: {\n        default: \"#0a0f25\",\n        // paper: \"#192a45\",\n        paper: \"#09142c\",\n      },\n    },\n    typography: {\n      // fontFamily: 'Montserrat',\n    },\n    overrides: {\n      MuiPaper: {\n        root: {\n          // backgroundColor: COLOR1,\n        },\n      },\n      MuiTypography: {\n        colorPrimary: {\n          // color: PRIMARY_TEXT,\n        },\n      },\n      MuiLink: {\n        root: {\n          // color: blue[500],\n        },\n      },\n    },\n  })\n);\n\nexport const AppStyles = {};\n","import { configure } from \"mobx\";\nimport { IStores } from \"./stores\";\n\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\nimport { OrbsAccountStore } from \"./OrbsAccountStore\";\n\n// This import ensures mobx batching\nimport \"mobx-react-lite/batchingForReactDom\";\nimport {\n  ICryptoWalletConnectionService,\n  IMonthlySubscriptionPlanService,\n  IOrbsTokenService,\n  ISubscriptionsService,\n} from \"@orbs-network/contracts-js\";\n\n/**\n * Builds and initializes all of the stores\n */\nexport function getStores(\n  cryptoWalletConnectionService: ICryptoWalletConnectionService,\n  subscriptionService: ISubscriptionsService,\n  orbsTokenService: IOrbsTokenService,\n  monthlySubscriptionPlanService: IMonthlySubscriptionPlanService\n): IStores {\n  // Create stores instances + Hydrate the stores\n  const cryptoWalletIntegrationStore = new CryptoWalletConnectionStore(\n    cryptoWalletConnectionService\n  );\n  const orbsAccountStore = new OrbsAccountStore(\n    cryptoWalletIntegrationStore,\n    orbsTokenService,\n    monthlySubscriptionPlanService,\n    subscriptionService\n  );\n\n  const stores: IStores = {\n    cryptoWalletIntegrationStore,\n    orbsAccountStore,\n  };\n\n  return stores;\n}\n\n/**\n * Configures the mobx library. Should get called at App's initialization.\n */\nexport function configureMobx() {\n  configure({\n    enforceActions: \"observed\",\n  });\n}\n","import React from \"react\";\nimport { configureMobx, getStores } from \"./store/storesInitialization\";\nimport { buildServices } from \"./services/Services\";\nimport { Provider } from \"mobx-react\";\nimport {\n  makeStyles,\n  StylesProvider,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport { baseTheme } from \"./theme/Theme\";\nimport { SnackbarProvider } from \"notistack\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport configs from \"./configs\";\nimport { QueryParamProvider } from \"use-query-params\";\n\ninterface IProps {\n  appComponent: React.ReactNode;\n}\n\nconfigureMobx();\n\nconst useStyles = makeStyles((theme) => ({\n  snackbarInfo: {\n    backgroundColor: baseTheme.palette.primary.dark,\n    color: theme.palette.getContrastText(baseTheme.palette.primary.dark),\n  },\n}));\n\nconst ethereumProvider = (window as any).ethereum;\nconst services = buildServices(ethereumProvider);\nconst stores = getStores(\n  services.cryptoWalletIntegrationService,\n  services.subscriptionsService,\n  services.orbsTokenService,\n  services.monthlySubscriptionPlanService\n);\n\nexport const AppWrapper = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { children, appComponent } = props;\n  return (\n    <>\n      <Router>\n        <QueryParamProvider ReactRouterRoute={Route}>\n          <Provider {...stores} {...services}>\n            <StylesProvider injectFirst>\n              <ThemeProvider theme={baseTheme}>\n                <SnackbarProvider\n                  maxSnack={3}\n                  classes={{ variantInfo: classes.snackbarInfo }}\n                >\n                  {appComponent}\n                  <CssBaseline />\n                </SnackbarProvider>\n              </ThemeProvider>\n            </StylesProvider>\n          </Provider>\n        </QueryParamProvider>\n      </Router>\n    </>\n  );\n});\n","import Web3 from \"web3\";\nimport configs from \"../configs\";\nimport {\n  CryptoWalletConnectionService,\n  ICryptoWalletConnectionService,\n  IEthereumProvider,\n  IMonthlySubscriptionPlanService,\n  IOrbsTokenService,\n  ISubscriptionsService,\n  MonthlySubscriptionPlanService,\n  OrbsTokenService,\n  SubscriptionsService,\n} from \"@orbs-network/contracts-js\";\n\nexport interface IServices {\n  cryptoWalletIntegrationService: ICryptoWalletConnectionService;\n  subscriptionsService: ISubscriptionsService;\n  orbsTokenService: IOrbsTokenService;\n  monthlySubscriptionPlanService: IMonthlySubscriptionPlanService;\n}\n\n// DEV_NOTE : For simplicity of early stage dev, we assume that we have ethereum provider, if not, we will not initialize the services.\nexport function buildServices(ethereumProvider: IEthereumProvider): IServices {\n  let web3: Web3;\n\n  if (ethereumProvider) {\n    web3 = new Web3(ethereumProvider as any);\n  } else {\n    web3 = new Web3(\n      new Web3.providers.WebsocketProvider(configs.ETHEREUM_PROVIDER_WS)\n    );\n  }\n\n  return {\n    cryptoWalletIntegrationService: new CryptoWalletConnectionService(\n      ethereumProvider\n    ),\n    subscriptionsService: new SubscriptionsService(\n      web3,\n      configs.v2contractsAddressesOverride.subscriptionContract\n    ),\n    orbsTokenService: new OrbsTokenService(\n      web3,\n      configs.v2contractsAddressesOverride.erc20Contract\n    ),\n    monthlySubscriptionPlanService: new MonthlySubscriptionPlanService(\n      web3,\n      configs.v2contractsAddressesOverride.monthlySubscriptionPlanDeployedInstance\n    ),\n  };\n}\n","export default __webpack_public_path__ + \"static/media/logo-white.9892bf0f.svg\";","import { useMemo } from \"react\";\n\nconst links = [\n  { translationKey: \"New Virtual Chain\", url: \"/new_vc\" },\n  { translationKey: \"Existing Virtual Chain\", url: \"/existing_vc\" },\n  { translationKey: \"Recover Virtual Chain\", url: \"/recover_vc\" },\n];\n\nexport type TLinkDescriptor = {\n  label: string;\n  url: string;\n};\n\nexport const useLinkDescriptors = () => {\n  const linkDescriptors = useMemo<TLinkDescriptor[]>(() => {\n    return links.map((link) => ({\n      // TODO : O.L : Add translations\n      url: link.url,\n      label: link.translationKey,\n    }));\n  }, []);\n\n  return linkDescriptors;\n};\n","import React, { createRef, useCallback, useMemo, useRef } from \"react\";\nimport {\n  Button,\n  IconButton,\n  Menu,\n  MenuItem,\n  Popover,\n  Typography,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport { NavLink } from \"react-router-dom\";\nimport { HOVER_COLOR } from \"./Header\";\nimport { useLinkDescriptors } from \"./links\";\nimport { useBoolean } from \"react-hanger\";\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    // marginRight: theme.spacing(2),\n  },\n  typography: {\n    padding: theme.spacing(2),\n  },\n  link: {\n    width: \"100%\",\n    color: \"#ffffffb3\",\n    // marginLeft: 30,\n    transition: \"color 0.4s ease-in-out\",\n    \"&:hover\": {\n      color: HOVER_COLOR,\n    },\n  },\n}));\n\nexport const MenuPopup = React.memo((props) => {\n  const classes = useStyles();\n  const linkDescriptors = useLinkDescriptors();\n  console.log(\"Render menu\");\n\n  const { setFalse, setTrue, value } = useBoolean(false);\n\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setTrue();\n      setAnchorEl(event.currentTarget);\n    },\n    [setTrue]\n  );\n\n  const handleClose = useCallback(() => {\n    setFalse();\n    setAnchorEl(null);\n  }, [setFalse]);\n\n  const menuItemLinks = useMemo(() => {\n    return linkDescriptors.map(({ label, url }, idx) => (\n      <MenuItem onClick={() => undefined} key={label + url}>\n        <Link\n          onClick={setFalse}\n          // @ts-ignore\n          component={NavLink}\n          key={idx}\n          exact={true}\n          className={classes.link}\n          activeStyle={{ color: HOVER_COLOR }}\n          underline=\"none\"\n          to={url}\n          variant=\"h6\"\n          noWrap\n        >\n          {label}\n        </Link>\n      </MenuItem>\n    ));\n  }, [classes.link, linkDescriptors, setFalse]);\n\n  const id = value ? \"links-popover-menu\" : undefined;\n\n  return (\n    <div>\n      <IconButton\n        onClick={handleClick}\n        className={classes.menuButton}\n        color=\"inherit\"\n        aria-label=\"menu\"\n      >\n        <MenuIcon />\n      </IconButton>\n      {/* TODO : O.L : Think about using 'Menu' instead of 'Popover' */}\n      <Popover\n        id={id}\n        open={value}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        {menuItemLinks}\n      </Popover>\n    </div>\n  );\n});\n","/**\n * Copyright 2019 the orbs-ethereum-contracts authors\n * This file is part of the orbs-ethereum-contracts library in the Orbs project.\n *\n * This source code is licensed under the MIT license found in the LICENSE file in the root directory of this source tree.\n * The above notice should be included in all copies or substantial portions of the software.\n */\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport logo from \"./logo-white.svg\";\nimport {\n  Button,\n  IconButton,\n  Typography,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { MenuPopup } from \"./MenuPopup\";\nimport { useLinkDescriptors } from \"./links\";\nimport { HEADER_HEIGHT_REM } from \"../../../theme/Theme\";\nimport configs from \"../../../configs\";\n\nexport const HOVER_COLOR = \"#16faff\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    height: `${HEADER_HEIGHT_REM}rem`,\n    paddingTop: \"0.5rem\",\n    paddingBottom: \"0.5rem\",\n    boxSizing: \"border-box\",\n    // height: `${HEADER_HEIGHT_REM}rem`,\n    zIndex: theme.zIndex.drawer + 1,\n    // padding: `${theme.spacing(2)}px ${theme.spacing(8)}px`,\n    padding: theme.spacing(1),\n  },\n  logo: {\n    width: 70,\n  },\n  nav: {\n    display: \"inherit\",\n    flexWrap: \"wrap\",\n  },\n  toolbar: {\n    paddingRight: 0,\n    paddingLeft: 0,\n    // marginRight: 'auto',\n    // marginLeft: 'auto',\n    margin: \"auto\",\n    width: \"90%\",\n    maxWidth: \"90%\",\n    justifyContent: \"space-between\",\n  },\n  headerButtonsContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    margin: \"auto\",\n    width: \"90%\",\n    maxWidth: \"90%\",\n  },\n  displayInMetamaskButton: {\n    marginRight: `${theme.spacing(3)}px`,\n  },\n  movedDown: {\n    paddingTop: 48,\n  },\n  link: {\n    color: \"#ffffffb3\",\n    marginLeft: 30,\n    transition: \"color 0.4s ease-in-out\",\n    \"&:hover\": {\n      color: HOVER_COLOR,\n    },\n  },\n}));\n\n// TODO : O.L : Fix the snackbar hiding the header\nexport const Header = React.memo((props) => {\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const smallerThanSmall = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const linkDescriptors = useLinkDescriptors();\n\n  // C.F.H : add proper menu for smaller screens\n\n  const menuLinks = useMemo(() => {\n    return linkDescriptors.map(({ label, url }, idx) => (\n      <Link\n        // @ts-ignore\n        component={NavLink}\n        key={idx}\n        exact={true}\n        className={classes.link}\n        activeStyle={{ color: HOVER_COLOR }}\n        underline=\"none\"\n        to={url}\n        variant=\"h6\"\n        noWrap\n      >\n        {label}\n      </Link>\n    ));\n  }, [classes.link, linkDescriptors]);\n\n  const menu = useMemo(() => {\n    if (smallerThanSmall) {\n      return <MenuPopup />;\n    } else {\n      return <nav className={classes.nav}>{menuLinks}</nav>;\n    }\n  }, [classes.nav, menuLinks, smallerThanSmall]);\n\n  // TODO : Fix display with title\n  return (\n    <AppBar position=\"fixed\" data-testid=\"header\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <NavLink to=\"/\">\n          <img className={classes.logo} src={logo} alt=\"Orbs\" />\n        </NavLink>\n        {/*<Typography variant={\"h4\"}>VC Console</Typography>*/}\n        {menu}\n      </Toolbar>\n    </AppBar>\n  );\n});\n","import React, { DetailedHTMLProps } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    height: \"100%\",\n    // width: \"fit-content\",\n    width: \"60rem\",\n    maxWidth: \"100%\",\n    boxSizing: \"border-box\",\n    paddingBottom: \"2em\",\n\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n}));\n\nexport const Page = React.memo<\n  IProps &\n    DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\n>((props) => {\n  const classes = useStyles();\n  const { children, ...rest } = props;\n  return (\n    <div className={classes.page} {...rest}>\n      {children}\n    </div>\n  );\n});\n","import React, { DetailedHTMLProps } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {}\nconst useStyles = makeStyles((theme) => ({\n  contentFitter: {\n    height: \"100%\",\n    width: \"fit-content\",\n    maxWidth: \"100%\",\n  },\n}));\n\nexport const ContentFitting = React.memo<\n  IProps &\n    DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\n>((props) => {\n  const classes = useStyles();\n  const { children, ...others } = props;\n  return (\n    <div className={classes.contentFitter} {...others}>\n      {children}\n    </div>\n  );\n});\n","import React, { useCallback, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  TextField,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSnackbar } from \"notistack\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport {\n  MONTHLY_SUBSCRIPTION_PLAN_SERVICE_CONSTANTS,\n  TVirtualChainSubscriptionPayload,\n} from \"@orbs-network/contracts-js\";\n\ninterface IProps {\n  // Form action\n  subscribeNewVC: (\n    virtualChainSubscriptionPayload: TVirtualChainSubscriptionPayload\n  ) => Promise<void>;\n  setMSPContractAllowance: (allowanceInFullOrbs: number) => void;\n\n  // Form parameters\n  monthlyRateInFullOrbs: number;\n\n  // Form options\n  subscriptionsLengthsOptions: number[];\n\n  // Orbs account\n  allowanceToMSPContract: number;\n\n  // Activation flags\n  disableActionButtons?: boolean;\n}\n\ntype TFormData = {\n  name: string;\n  runOnlyOnCertifiedValidators: boolean;\n  runOnCanary: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    \"& label.Mui-focused\": {\n      color: \"#f5f5f5\",\n    },\n  },\n\n  phaseInstructionLabel: {\n    width: \"max-content\",\n    marginBottom: \"0.5rem\",\n    paddingBottom: \"0.1rem\",\n    // textDecoration: \"underline\",\n    // borderBottom: \"1px solid\",\n  },\n\n  // DEV_NOTE : O.L : For now, we give 100% to enusre united width labels with texts and icons,\n  //                  If this breaks, fix this.\n  forControlLabel: {\n    width: \"100%\",\n    \"& .MuiFormControlLabel-label\": {\n      width: \"100%\",\n    },\n  },\n\n  checkBoxes: {},\n\n  typographyAnimated: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: 0,\n    visibility: \"hidden\",\n  },\n\n  typographyAnimatedShow: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: \"100%\",\n    visibility: \"visible\",\n  },\n\n  actionButton: {\n    transition: \"background-color 0.4s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.getContrastText(theme.palette.secondary.light),\n    },\n  },\n}));\n\nexport const VirtualChainSubscriptionForm = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    subscribeNewVC,\n    disableActionButtons,\n    allowanceToMSPContract,\n    setMSPContractAllowance,\n    subscriptionsLengthsOptions,\n  } = props;\n\n  const { monthlyRateInFullOrbs } = props;\n\n  // TODO : O.L : Move this and provide as prop.\n  const { enqueueSnackbar } = useSnackbar();\n  // DEV_NOTE : This flag is used to display a message about sufficient/insufficient allowance.\n  const [planOptionChanged, setPlanOptionChanged] = useState(false);\n  const [name, setName] = useState<string>(\"\");\n  const [monthsToPayForInAdvance, setMonthsToPayForInAdvance] = useState<\n    number\n  >(1);\n  const [runOnCertifiedOnly, setRunOnCertifiedOnly] = useState<boolean>(false);\n  const [runOnCanary, setRunOnCanary] = useState<boolean>(false);\n\n  const { register, handleSubmit, errors } = useForm<TFormData>();\n\n  const currentCostOfPlan = monthsToPayForInAdvance * monthlyRateInFullOrbs;\n  const hasEnoughAllowance = allowanceToMSPContract >= currentCostOfPlan;\n\n  const submit = useCallback(\n    (formData: TFormData) => {\n      if (!hasEnoughAllowance) {\n        enqueueSnackbar(\n          \"Before creating a new VC, please approve usage of your ORBS\",\n          { variant: \"info\", preventDuplicate: true }\n        );\n        return;\n      }\n\n      const { deploymentSubsets } = MONTHLY_SUBSCRIPTION_PLAN_SERVICE_CONSTANTS;\n\n      const virtualChainSubscriptionPayload: TVirtualChainSubscriptionPayload = {\n        name: formData.name,\n        amountInFullOrbs: currentCostOfPlan,\n\n        deploymentSubset: formData.runOnCanary\n          ? deploymentSubsets.canary\n          : deploymentSubsets.main,\n        isCertified: formData.runOnlyOnCertifiedValidators,\n      };\n\n      subscribeNewVC(virtualChainSubscriptionPayload);\n    },\n    [currentCostOfPlan, enqueueSnackbar, hasEnoughAllowance, subscribeNewVC]\n  );\n\n  const setAllowance = useCallback(() => {\n    setMSPContractAllowance(currentCostOfPlan);\n  }, [currentCostOfPlan, setMSPContractAllowance]);\n\n  return (\n    <form\n      onSubmit={handleSubmit((formData) => submit(formData))}\n      style={{\n        maxWidth: \"100%\",\n        // width: \"100%\",\n        width: \"60ch\",\n      }}\n    >\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        1) Fill in your VC details\n      </Typography>\n      {/* Name */}\n      <TextField\n        autoComplete={\"off\"}\n        InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n        name={\"name\"}\n        label={\"VC name\"}\n        title={\"\"}\n        variant={\"outlined\"}\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        required\n        inputRef={register}\n        fullWidth\n        className={classes.textField}\n      />\n      <br />\n      <br />\n      {/* Subscription length */}\n      <TextField\n        select\n        SelectProps={{ native: true }}\n        // InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n        name={\"subscriptionOption\"}\n        label={\"Initial Subscription\"}\n        title={\"\"}\n        variant={\"outlined\"}\n        value={monthsToPayForInAdvance}\n        onChange={(e) => {\n          setPlanOptionChanged(true);\n          setMonthsToPayForInAdvance(parseInt(e.target.value));\n        }}\n        required\n        inputRef={register}\n        fullWidth\n        className={classes.textField}\n      >\n        {subscriptionsLengthsOptions.map((lengthOption) => (\n          <option value={lengthOption} key={lengthOption}>\n            {lengthOption} month{lengthOption !== 1 ? \"s\" : \"\"} -{\" \"}\n            {(monthlyRateInFullOrbs * lengthOption).toLocaleString()} ORBS\n          </option>\n        ))}\n      </TextField>\n      <br />\n      <br />\n\n      {/* DEV_NOTE : O.L : For now we do not allow advanced configurations */}\n      {/*<FormControlLabel*/}\n      {/*  className={classes.forControlLabel}*/}\n      {/*  control={*/}\n      {/*    <>*/}\n      {/*      <Checkbox*/}\n      {/*        className={classes.checkBoxes}*/}\n      {/*        checked={runOnCertifiedOnly}*/}\n      {/*        onChange={(e) => setRunOnCertifiedOnly(e.target.checked)}*/}\n      {/*        name=\"runOnlyOnCertifiedValidators\"*/}\n      {/*        // color=\"primary\"*/}\n      {/*        inputRef={register}*/}\n      {/*      />*/}\n      {/*    </>*/}\n      {/*  }*/}\n      {/*  label={*/}\n      {/*    <LabelWithIconTooltip*/}\n      {/*      text={\"Run only on identified validators\"}*/}\n      {/*      tooltipText={\"Add content\"}*/}\n      {/*    />*/}\n      {/*  }*/}\n      {/*/>*/}\n      {/*<br />*/}\n\n      <FormControlLabel\n        className={classes.forControlLabel}\n        control={\n          <Checkbox\n            className={classes.checkBoxes}\n            checked={runOnCanary}\n            onChange={(e) => setRunOnCanary(e.target.checked)}\n            name=\"runOnCanary\"\n            // color=\"primary\"\n            inputRef={register}\n          />\n        }\n        label={\n          <LabelWithIconTooltip\n            text={\"Run unstable early releases\"}\n            tooltipText={\"\"}\n          />\n        }\n      />\n      <br />\n      <br />\n\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        2) Allow usage of your ORBS\n      </Typography>\n      <Typography variant={\"caption\"}>\n        Current allowance : {allowanceToMSPContract.toLocaleString()} ORBS |\n        Cost : {currentCostOfPlan.toLocaleString()} ORBS\n      </Typography>\n      <Button\n        className={classes.actionButton}\n        variant={\"outlined\"}\n        fullWidth\n        onClick={setAllowance}\n        disabled={disableActionButtons || hasEnoughAllowance}\n        startIcon={hasEnoughAllowance ? <CheckIcon /> : null}\n      >\n        {hasEnoughAllowance\n          ? \"Sufficient allowance\"\n          : \"Approve usage of your ORBS\"}\n      </Button>\n      <br />\n      <br />\n\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        3) Create your new Virtual chain\n      </Typography>\n      <Button\n        className={classes.actionButton}\n        variant={\"outlined\"}\n        fullWidth\n        type={\"submit\"}\n        disabled={disableActionButtons}\n      >\n        Create new VC\n      </Button>\n    </form>\n  );\n});\n\nconst LabelWithIconTooltip = React.memo(\n  (props: { text: String; tooltipText: string }) => {\n    const { text, tooltipText } = props;\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {text}\n        <Tooltip title={tooltipText}>\n          <HelpOutlineIcon style={{ marginInlineStart: \"0.5rem\" }} />\n        </Tooltip>\n      </div>\n    );\n  }\n);\n","import React from \"react\";\nimport { IServices } from \"./Services\";\nimport { MobXProviderContext } from \"mobx-react\";\nimport {\n  ICryptoWalletConnectionService,\n  IMonthlySubscriptionPlanService,\n  ISubscriptionsService,\n} from \"@orbs-network/contracts-js\";\n\nexport function useServices(): IServices {\n  const services = React.useContext(MobXProviderContext) as IServices;\n\n  if (!services) {\n    throw new Error(\"Tried to use services before initialising them\");\n  }\n\n  return services;\n}\n\nexport function useCryptoWalletConnectionService(): ICryptoWalletConnectionService {\n  return useServices().cryptoWalletIntegrationService;\n}\n\nexport function useSubscriptionsService(): ISubscriptionsService {\n  return useServices().subscriptionsService;\n}\n\nexport function useMonthlySubscriptionPlanService(): IMonthlySubscriptionPlanService {\n  return useServices().monthlySubscriptionPlanService;\n}\n","import React from \"react\";\nimport { MobXProviderContext } from \"mobx-react\";\nimport { IStores } from \"./stores\";\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\nimport { OrbsAccountStore } from \"./OrbsAccountStore\";\n\nexport function useStores(): IStores {\n  // @ts-ignore\n  return React.useContext(MobXProviderContext);\n}\n\nexport function useCryptoWalletIntegrationStore(): CryptoWalletConnectionStore {\n  return useStores().cryptoWalletIntegrationStore;\n}\n\nexport function useOrbsAccountStore(): OrbsAccountStore {\n  return useStores().orbsAccountStore;\n}\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\ninterface IProps {\n  // Dialog\n  open: boolean;\n  // handleClose: () => void;\n  onAccept: () => void;\n  onCancel: () => void;\n\n  // Content\n  title: string;\n  contentText: string;\n  acceptText?: string;\n  cancelText?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  dialogPaper: {\n    \"& .MuiDialog-paper\": {\n      border: `4px double ${theme.palette.secondary.main}`,\n      boxShadow: \"none\",\n    },\n  },\n}));\n\nexport const ActionConfirmationModal = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    open,\n    onAccept,\n    onCancel,\n    // handleClose,\n    title,\n    contentText,\n    acceptText,\n    cancelText,\n  } = props;\n  const theme = useTheme();\n  // const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const fullScreen = false;\n\n  return (\n    <Dialog\n      className={classes.dialogPaper}\n      fullScreen={fullScreen}\n      open={open}\n      onClose={onCancel}\n      aria-labelledby=\"action-confirmation-dialog\"\n      maxWidth={\"xs\"}\n      style={{}}\n    >\n      <DialogTitle id=\"action-confirmation-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{contentText}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          autoFocus\n          onClick={onCancel}\n          color=\"secondary\"\n          variant={\"contained\"}\n        >\n          {cancelText || \"Cancel\"}\n        </Button>\n        <Button\n          onClick={onAccept}\n          color=\"secondary\"\n          autoFocus\n          variant={\"contained\"}\n        >\n          {acceptText || \"Accept\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n});\n","export const ROUTES = {\n  newVc: \"/new_vc\",\n  existingVc: \"/existing_vc\",\n  recoverVc: \"/recover_vc\",\n  vcCreated: \"/vc_created\",\n  vcExtended: \"/vc_extended\",\n};\n","import React, { useCallback, useState } from \"react\";\nimport { Page } from \"../components/structure/Page\";\nimport { ContentFitting } from \"../components/structure/ContentFitting\";\nimport { VirtualChainSubscriptionForm } from \"../components/forms/VirtualChainSubscriptionForm\";\nimport { useMonthlySubscriptionPlanService } from \"../services/servicesHooks\";\nimport { useOrbsAccountStore } from \"../store/storeHooks\";\nimport { weiOrbsFromFullOrbs } from \"../cryptoUtils/unitConverter\";\nimport { ActionConfirmationModal } from \"../components/modals/ActionConfirmationModal\";\nimport { useSnackbar } from \"notistack\";\nimport { observer } from \"mobx-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ROUTES } from \"../constants/routes\";\nimport { TVirtualChainSubscriptionPayload } from \"@orbs-network/contracts-js\";\n\ninterface IProps {}\n\nexport const NewVCPage = observer<React.FunctionComponent<IProps>>((props) => {\n  const orbsAccountStore = useOrbsAccountStore();\n  const history = useHistory();\n  const [runningTx, setRunningTx] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [dialogTexts, setDialogTexts] = useState<{\n    title: string;\n    content: string;\n    acceptText?: string;\n    cancelText?: string;\n    onCancelMessage?: string;\n  }>({ title: \"\", content: \"\" });\n  const [onDialogAccept, setOnDialogAccept] = useState(() => () =>\n    console.log(\"Accepted\")\n  );\n\n  const monthlySubscriptionPlanService = useMonthlySubscriptionPlanService();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const setMSPContractAllowance = useCallback(\n    (allowanceInFullOrbs: number) => {\n      orbsAccountStore.setAllowanceForStakingContract(\n        weiOrbsFromFullOrbs(allowanceInFullOrbs)\n      );\n    },\n    [orbsAccountStore]\n  );\n\n  const createNewVc = useCallback(\n    async (\n      virtualChainSubscriptionPayload: TVirtualChainSubscriptionPayload\n    ) => {\n      try {\n        const vcId = await orbsAccountStore.createNewVc(\n          virtualChainSubscriptionPayload\n        );\n        enqueueSnackbar(\"VC Created !\", { variant: \"success\" });\n\n        history.push(`${ROUTES.vcCreated}/${vcId}`);\n      } catch (e) {\n        console.log(e);\n        enqueueSnackbar(`TX Error !`, { variant: \"error\" });\n      }\n    },\n    [enqueueSnackbar, history, orbsAccountStore]\n  );\n\n  const showCreateVcDialog = useCallback(\n    async (\n      virtualChainSubscriptionPayload: TVirtualChainSubscriptionPayload\n    ) => {\n      console.log(virtualChainSubscriptionPayload);\n      setDialogTexts({\n        title: `Create new virtual chain ${virtualChainSubscriptionPayload.name}`,\n        content: 'Please click \"Create\" and accept the transaction.',\n        acceptText: \"Create\",\n        onCancelMessage: \"VC creation canceled\",\n      });\n      setShowModal(true);\n      setOnDialogAccept(() => () =>\n        createNewVc(virtualChainSubscriptionPayload)\n      );\n\n      try {\n        // const res = await monthlySubscriptionPlanService.createANewVC(\n        //   virtualChainSubscriptionPayload\n        // );\n        // console.log(res);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [createNewVc]\n  );\n\n  const showSetMSPContractAllowanceDialog = useCallback(\n    (allowanceInFullOrbs: number) => {\n      setDialogTexts({\n        title: `Set allowance of ${allowanceInFullOrbs} ORBS`,\n        content: 'Please click \"Allow\" and accept the transaction.',\n        acceptText: \"Allow\",\n        onCancelMessage: \"Action canceled\",\n      });\n      setShowModal(true);\n      setOnDialogAccept(() => () =>\n        setMSPContractAllowance(allowanceInFullOrbs)\n      );\n    },\n    [setMSPContractAllowance]\n  );\n\n  return (\n    <Page>\n      <ContentFitting>\n        {/*<VirtualChainSubscription*/}\n        {/*  web3={{} as Web3}*/}\n        {/*  config={configs}*/}\n        {/*  virtualChainId=\"0x0000000000000000000000000000000000000000000000000000000000000001\"*/}\n        {/*  buttonLabel=\"Create\"*/}\n        {/*  subscriptionLabel=\"Initial subscription\"*/}\n        {/*/>*/}\n        <VirtualChainSubscriptionForm\n          subscribeNewVC={showCreateVcDialog}\n          allowanceToMSPContract={orbsAccountStore.allowanceToMSPContract}\n          setMSPContractAllowance={showSetMSPContractAllowanceDialog}\n          monthlyRateInFullOrbs={\n            orbsAccountStore.mspContractParameters.monthlyRateInFullOrbs\n          }\n          subscriptionsLengthsOptions={[6, 12, 18]}\n          disableActionButtons={orbsAccountStore.txPending}\n        />\n        <ActionConfirmationModal\n          open={showModal}\n          onAccept={() => {\n            setShowModal(false);\n            onDialogAccept();\n          }}\n          onCancel={() => {\n            setShowModal(false);\n            if (dialogTexts.onCancelMessage) {\n              enqueueSnackbar(dialogTexts.onCancelMessage, {\n                variant: \"info\",\n                preventDuplicate: true,\n              });\n            }\n          }}\n          title={dialogTexts.title}\n          contentText={dialogTexts.content}\n        />\n      </ContentFitting>\n    </Page>\n  );\n});\n","import React, { useCallback, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\ninterface IProps {\n  // Form action\n  onActionClick: (vcId: string) => void;\n\n  // Texts\n  actionButtonText?: string;\n}\n\ntype TFormData = {\n  vcId: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    \"& label.Mui-focused\": {\n      color: \"#f5f5f5\",\n    },\n  },\n\n  phaseInstructionLabel: {\n    width: \"max-content\",\n    marginBottom: \"0.5rem\",\n    paddingBottom: \"0.1rem\",\n    // textDecoration: \"underline\",\n    // borderBottom: \"1px solid\",\n  },\n\n  // DEV_NOTE : O.L : For now, we give 100% to enusre united width labels with texts and icons,\n  //                  If this breaks, fix this.\n  forControlLabel: {\n    width: \"100%\",\n    \"& .MuiFormControlLabel-label\": {\n      width: \"100%\",\n    },\n  },\n\n  checkBoxes: {},\n\n  typographyAnimated: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: 0,\n    visibility: \"hidden\",\n  },\n\n  typographyAnimatedShow: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: \"100%\",\n    visibility: \"visible\",\n  },\n\n  actionButton: {\n    transition: \"background-color 0.4s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.getContrastText(theme.palette.secondary.light),\n    },\n  },\n}));\n\nexport const VcIdForm = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { actionButtonText, onActionClick } = props;\n\n  const [vcId, setVcId] = useState<string>(\"\");\n\n  const { register, handleSubmit, errors } = useForm<TFormData>();\n\n  const submit = useCallback(\n    (formData: TFormData) => {\n      onActionClick(formData.vcId);\n    },\n    [onActionClick]\n  );\n\n  return (\n    <form\n      onSubmit={handleSubmit((formData) => submit(formData))}\n      style={{\n        maxWidth: \"100%\",\n        // width: \"100%\",\n        width: \"60ch\",\n      }}\n    >\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        Please enter your VC Id\n      </Typography>\n      {/* Name */}\n      <TextField\n        autoComplete={\"off\"}\n        InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n        name={\"vcId\"}\n        label={\"Virtual chain ID\"}\n        title={\"\"}\n        variant={\"outlined\"}\n        value={vcId}\n        onChange={(e) => setVcId(e.target.value)}\n        required\n        inputRef={register}\n        fullWidth\n        className={classes.textField}\n      />\n      <br />\n      <br />\n\n      <Button\n        className={classes.actionButton}\n        variant={\"outlined\"}\n        fullWidth\n        type={\"submit\"}\n      >\n        {actionButtonText}\n      </Button>\n    </form>\n  );\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Moment from \"moment\";\n\ninterface IProps {\n  vcId: string;\n  vcName: string;\n  deploymentSubset: string;\n  paidUntil: number;\n}\n\ntype TFormData = {\n  name: string;\n  runOnlyOnCertifiedValidators: boolean;\n  runOnCanary: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    \"& label.Mui-focused\": {\n      color: \"#f5f5f5\",\n    },\n  },\n\n  phaseInstructionLabel: {\n    width: \"max-content\",\n    marginBottom: \"0.5rem\",\n    paddingBottom: \"0.1rem\",\n    // textDecoration: \"underline\",\n    // borderBottom: \"1px solid\",\n  },\n\n  // DEV_NOTE : O.L : For now, we give 100% to enusre united width labels with texts and icons,\n  //                  If this breaks, fix this.\n  forControlLabel: {\n    width: \"100%\",\n    \"& .MuiFormControlLabel-label\": {\n      width: \"100%\",\n    },\n  },\n\n  checkBoxes: {},\n\n  typographyAnimated: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: 0,\n    visibility: \"hidden\",\n  },\n\n  typographyAnimatedShow: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: \"100%\",\n    visibility: \"visible\",\n  },\n\n  actionButton: {\n    transition: \"background-color 0.4s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.getContrastText(theme.palette.secondary.light),\n    },\n  },\n}));\n\nexport const VirtualChainDetailsForm = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { paidUntil, vcId, vcName, deploymentSubset } = props;\n\n  console.log({ paidUntil });\n  return (\n    <form\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        maxWidth: \"100%\",\n        // width: \"100%\",\n        width: \"60ch\",\n        textAlign: \"center\",\n      }}\n    >\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"h5\"}\n        color={\"secondary\"}\n      >\n        Virtual chain ID\n      </Typography>\n      <Typography className={classes.phaseInstructionLabel} variant={\"h6\"}>\n        {vcId}\n      </Typography>\n\n      {/* Name */}\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"h5\"}\n        color={\"secondary\"}\n      >\n        Virtual chain Name\n      </Typography>\n      <Typography className={classes.phaseInstructionLabel} variant={\"h6\"}>\n        {vcName}\n      </Typography>\n\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"h5\"}\n        color={\"secondary\"}\n      >\n        Deployment Subset\n      </Typography>\n      <Typography className={classes.phaseInstructionLabel} variant={\"h6\"}>\n        {deploymentSubset}\n      </Typography>\n\n      {/* Payment */}\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"h5\"}\n        color={\"secondary\"}\n      >\n        Paid Until\n      </Typography>\n      <Typography className={classes.phaseInstructionLabel} variant={\"h6\"}>\n        {Moment.unix(paidUntil).format(\"MMM DD, YYYY\")}\n      </Typography>\n    </form>\n  );\n});\n","import React, { useCallback, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSnackbar } from \"notistack\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\ninterface IProps {\n  // Form action\n  extendVcSubscription: (amount: number) => Promise<void>;\n  setMSPContractAllowance: (allowanceInFullOrbs: number) => void;\n\n  // Form parameters\n  monthlyRateInFullOrbs: number;\n\n  // Orbs account\n  allowanceToMSPContract: number;\n\n  // Activation flags\n  disableActionButtons?: boolean;\n}\n\ntype TFormData = {\n  name: string;\n  runOnlyOnCertifiedValidators: boolean;\n  runOnCanary: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    \"& label.Mui-focused\": {\n      color: \"#f5f5f5\",\n    },\n  },\n\n  phaseInstructionLabel: {\n    width: \"max-content\",\n    marginBottom: \"0.5rem\",\n    paddingBottom: \"0.1rem\",\n    // textDecoration: \"underline\",\n    // borderBottom: \"1px solid\",\n  },\n\n  // DEV_NOTE : O.L : For now, we give 100% to enusre united width labels with texts and icons,\n  //                  If this breaks, fix this.\n  forControlLabel: {\n    width: \"100%\",\n    \"& .MuiFormControlLabel-label\": {\n      width: \"100%\",\n    },\n  },\n\n  checkBoxes: {},\n\n  typographyAnimated: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: 0,\n    visibility: \"hidden\",\n  },\n\n  typographyAnimatedShow: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: \"100%\",\n    visibility: \"visible\",\n  },\n\n  actionButton: {\n    transition: \"background-color 0.4s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.getContrastText(theme.palette.secondary.light),\n    },\n  },\n}));\n\nexport const VcSubscriptionExtensionForm = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    extendVcSubscription,\n    disableActionButtons,\n    allowanceToMSPContract,\n    setMSPContractAllowance,\n  } = props;\n\n  const { monthlyRateInFullOrbs } = props;\n\n  // TODO : O.L : Move this and provide as prop.\n  const { enqueueSnackbar } = useSnackbar();\n  // DEV_NOTE : This flag is used to display a message about sufficient/insufficient allowance.\n  const [planOptionChanged, setPlanOptionChanged] = useState(false);\n  const [name, setName] = useState<string>(\"\");\n  const [monthsToPayForInAdvance, setMonthsToPayForInAdvance] = useState<\n    number\n  >(1);\n  const [runOnCertifiedOnly, setRunOnCertifiedOnly] = useState<boolean>(false);\n  const [runOnCanary, setRunOnCanary] = useState<boolean>(false);\n\n  const { register, handleSubmit, errors } = useForm<TFormData>();\n\n  const currentCostOfPlan = monthsToPayForInAdvance * monthlyRateInFullOrbs;\n  const hasEnoughAllowance = allowanceToMSPContract >= currentCostOfPlan;\n\n  const submit = useCallback(\n    (formData: TFormData) => {\n      if (!hasEnoughAllowance) {\n        enqueueSnackbar(\n          \"Before extending your VC subscription, please approve usage of your ORBS\",\n          { variant: \"info\", preventDuplicate: true }\n        );\n        return;\n      }\n\n      extendVcSubscription(currentCostOfPlan);\n    },\n    [\n      hasEnoughAllowance,\n      currentCostOfPlan,\n      extendVcSubscription,\n      enqueueSnackbar,\n    ]\n  );\n\n  const setAllowance = useCallback(() => {\n    setMSPContractAllowance(currentCostOfPlan);\n  }, [currentCostOfPlan, setMSPContractAllowance]);\n\n  return (\n    <form\n      onSubmit={handleSubmit((formData) => submit(formData))}\n      style={{\n        maxWidth: \"100%\",\n        // width: \"100%\",\n        width: \"60ch\",\n      }}\n    >\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        1) Select how many months to extend by\n      </Typography>\n      {/* Subscription length */}\n      <TextField\n        select\n        SelectProps={{ native: true }}\n        // InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n        name={\"subscriptionOption\"}\n        label={\"Initial Subscription\"}\n        title={\"\"}\n        variant={\"outlined\"}\n        value={monthsToPayForInAdvance}\n        onChange={(e) => {\n          setPlanOptionChanged(true);\n          setMonthsToPayForInAdvance(parseInt(e.target.value));\n        }}\n        required\n        inputRef={register}\n        fullWidth\n        className={classes.textField}\n      >\n        {/* TODO : Add proper dynamic values when dealing with the real contract */}\n        <option value={1}>\n          1 month extension - {monthlyRateInFullOrbs * 1} ORBS\n        </option>\n        <option value={3}>\n          3 months extension - {monthlyRateInFullOrbs * 3} ORBS\n        </option>\n        <option value={6}>\n          6 months extension - {monthlyRateInFullOrbs * 6} ORBS\n        </option>\n      </TextField>\n\n      <br />\n      <br />\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        2) Allow usage of your ORBS\n      </Typography>\n      <Typography variant={\"caption\"}>\n        Current allowance : {allowanceToMSPContract}/{currentCostOfPlan}\n      </Typography>\n      <Button\n        className={classes.actionButton}\n        variant={\"outlined\"}\n        fullWidth\n        onClick={setAllowance}\n        disabled={disableActionButtons || hasEnoughAllowance}\n        startIcon={hasEnoughAllowance ? <CheckIcon /> : null}\n      >\n        {hasEnoughAllowance\n          ? \"Sufficient allowance\"\n          : \"Approve usage of your ORBS\"}\n      </Button>\n      <br />\n      <br />\n\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        3) Extend your subscription\n      </Typography>\n      <Button\n        className={classes.actionButton}\n        variant={\"outlined\"}\n        fullWidth\n        type={\"submit\"}\n        disabled={disableActionButtons}\n      >\n        Extend VC subscription\n      </Button>\n    </form>\n  );\n});\n\nconst LabelWithIconTooltip = React.memo(\n  (props: { text: String; tooltipText: string }) => {\n    const { text, tooltipText } = props;\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {text}\n        <Tooltip title={tooltipText}>\n          <HelpOutlineIcon style={{ marginInlineStart: \"0.5rem\" }} />\n        </Tooltip>\n      </div>\n    );\n  }\n);\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useSubscriptionsService } from \"./servicesHooks\";\n\ntype TVcData = {\n  id: string;\n  name: string;\n  deploymentSubset: string;\n  payedUntil: number;\n  owner: string;\n  isCertified: boolean;\n  genRefTime: string;\n  rate: string;\n  tier: string;\n};\n\ntype TUseVcDataHookResponse = {\n  vcData: TVcData | null;\n  isLoading: boolean;\n  errorFindingVc: boolean;\n};\n\nexport function useVcDataHook(vcId: string): TUseVcDataHookResponse {\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorFindingVc, setErrorFindingVc] = useState(false);\n  const [vcData, setVcData] = useState<TVcData | null>(null);\n  const subscriptionsService = useSubscriptionsService();\n\n  const readVcData = useCallback(\n    async (id) => {\n      console.log({ id });\n      const readVcDataResponse = await subscriptionsService.readVcData(id);\n\n      // DEV_NOTE : O.L : We will assume that 0 gen ref time means - no such VC\n      if (readVcDataResponse.genRefTime === \"0\") {\n        return null;\n      }\n\n      const vcData: TVcData = {\n        id,\n        owner: readVcDataResponse.owner,\n        isCertified: readVcDataResponse.isCertified,\n        genRefTime: readVcDataResponse.genRefTime,\n        rate: readVcDataResponse.rate,\n        tier: readVcDataResponse.tier,\n\n        name: readVcDataResponse.name,\n        payedUntil: parseInt(readVcDataResponse.expiresAt),\n        deploymentSubset: readVcDataResponse.deploymentSubset,\n      };\n\n      return vcData;\n    },\n    [subscriptionsService]\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n    setErrorFindingVc(false);\n    readVcData(vcId)\n      .then((vcData) => {\n        setIsLoading(false);\n        setVcData(vcData);\n      })\n      .catch(() => {\n        setIsLoading(false);\n        setErrorFindingVc(true);\n      });\n  }, [readVcData, vcId]);\n\n  return {\n    errorFindingVc,\n    isLoading,\n    vcData,\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { AppWrapper } from \"./AppWrapper\";\nimport App from \"./App\";\nimport { NoEthereumProviderPage } from \"./pages/NoEthereumProviderPage\";\n\nconst hasEthereumProvider = !!(window as any).ethereum;\n\nlet AppComponent;\n\nif (hasEthereumProvider) {\n  AppComponent = <App />;\n} else {\n  AppComponent = <NoEthereumProviderPage />;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWrapper appComponent={AppComponent} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { Page } from \"../components/structure/Page\";\nimport { VcIdForm } from \"../components/forms/VcIdForm\";\nimport { Typography } from \"@material-ui/core\";\nimport { observer } from \"mobx-react\";\nimport { VirtualChainDetailsForm } from \"../components/forms/VirtualChainDetailsForm\";\nimport {\n  useCryptoWalletIntegrationStore,\n  useOrbsAccountStore,\n} from \"../store/storeHooks\";\nimport { useSnackbar } from \"notistack\";\nimport { VcSubscriptionExtensionForm } from \"../components/forms/VcSubscriptionExtensionForm\";\nimport { ActionConfirmationModal } from \"../components/modals/ActionConfirmationModal\";\nimport { weiOrbsFromFullOrbs } from \"../cryptoUtils/unitConverter\";\nimport { ROUTES } from \"../constants/routes\";\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\nimport { useVcDataHook } from \"../services/subscriptionsServiceHooks\";\nimport { TVirtualChainSubscriptionExtensionPayload } from \"@orbs-network/contracts-js\";\nimport { createVerify } from \"crypto\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport { useQueryParam, NumberParam, StringParam } from \"use-query-params\";\n\ninterface IProps {}\n\ntype TRouteParams = {\n  vcId: string;\n};\n\nexport const ExistingVCPage = observer<React.FunctionComponent<IProps>>(\n  (props) => {\n    const orbsAccountStore = useOrbsAccountStore();\n    const cryptoWalletIntegrationStore = useCryptoWalletIntegrationStore();\n    // const [vcId, setVcId] = useState(\"\");\n    const { enqueueSnackbar } = useSnackbar();\n\n    const [vcId, setVcId] = useQueryParam(\"vcId\", StringParam);\n    const vcIdToUse = vcId || \"\";\n\n    const { vcData, errorFindingVc, isLoading } = useVcDataHook(vcIdToUse);\n\n    const history = useHistory();\n    const theme = useTheme();\n\n    // TODO : ORL : The whole modal logic is duplicated from 'NewVcPage' - Unite them properly\n    const [showModal, setShowModal] = useState(false);\n    const [onDialogAccept, setOnDialogAccept] = useState(() => () =>\n      console.log(\"Accepted\")\n    );\n    const [dialogTexts, setDialogTexts] = useState<{\n      title: string;\n      content: string;\n      acceptText?: string;\n      cancelText?: string;\n      onCancelMessage?: string;\n    }>({ title: \"\", content: \"\" });\n\n    const onOpenVcClicked = useCallback(\n      (vcId: string) => {\n        setVcId(vcId);\n      },\n      [setVcId]\n    );\n\n    const setMSPContractAllowance = useCallback(\n      (allowanceInFullOrbs: number) => {\n        orbsAccountStore.setAllowanceForStakingContract(\n          weiOrbsFromFullOrbs(allowanceInFullOrbs)\n        );\n      },\n      [orbsAccountStore]\n    );\n\n    const showSetMSPContractAllowanceDialog = useCallback(\n      (allowanceInFullOrbs: number) => {\n        setDialogTexts({\n          title: `Set allowance of ${allowanceInFullOrbs} ORBS`,\n          content: 'Please click \"Allow\" and accept the transaction.',\n          acceptText: \"Allow\",\n          onCancelMessage: \"Action canceled\",\n        });\n        setShowModal(true);\n        setOnDialogAccept(() => () =>\n          setMSPContractAllowance(allowanceInFullOrbs)\n        );\n      },\n      [setMSPContractAllowance]\n    );\n\n    const extendVcSubscription = useCallback(\n      async (amountInFullOrbs: number) => {\n        const virtualChainSubscriptionExtensionPayload: TVirtualChainSubscriptionExtensionPayload = {\n          amountInFullOrbs,\n          vcId: vcIdToUse,\n        };\n\n        try {\n          await orbsAccountStore.extendExistingVcSubscription(\n            virtualChainSubscriptionExtensionPayload\n          );\n          enqueueSnackbar(\"Subscription extended !\", { variant: \"success\" });\n          history.push(`${ROUTES.vcExtended}/${vcId}`);\n        } catch (e) {\n          console.error(e);\n          enqueueSnackbar(`TX Error !`, { variant: \"error\" });\n        }\n      },\n      [enqueueSnackbar, history, orbsAccountStore, vcId, vcIdToUse]\n    );\n\n    const showSelectVcForm = vcIdToUse.length === 0;\n\n    const isOwnerOfVc =\n      vcData !== null &&\n      vcData.owner === cryptoWalletIntegrationStore.mainAddress;\n\n    const vcContent = useMemo(() => {\n      if (showSelectVcForm) {\n        return null;\n      } else if (isLoading) {\n        return <Typography>Loading...</Typography>;\n      } else if (errorFindingVc) {\n        return (\n          <Typography variant={\"h3\"} color=\"error\">\n            Error finding Virtual Chain {vcId}\n          </Typography>\n        );\n      } else if (vcData == null) {\n        return (\n          <>\n            <Typography\n              variant={\"h3\"}\n              style={{ color: theme.palette.warning.main }}\n            >\n              Could not find VC with id {vcId}\n            </Typography>\n          </>\n        );\n      } else {\n        return (\n          <>\n            <br />\n            <VirtualChainDetailsForm\n              paidUntil={vcData.payedUntil}\n              vcName={vcData.name}\n              vcId={vcData.id}\n              deploymentSubset={vcData.deploymentSubset}\n            />\n            <br />\n            <br />\n            {isOwnerOfVc && (\n              <VcSubscriptionExtensionForm\n                monthlyRateInFullOrbs={\n                  orbsAccountStore.mspContractParameters.monthlyRateInFullOrbs\n                }\n                setMSPContractAllowance={showSetMSPContractAllowanceDialog}\n                allowanceToMSPContract={orbsAccountStore.allowanceToMSPContract}\n                extendVcSubscription={extendVcSubscription}\n                disableActionButtons={orbsAccountStore.txPending}\n              />\n            )}\n            {!isOwnerOfVc && (\n              <Typography\n                variant={\"h5\"}\n                style={{ color: theme.palette.warning.main }}\n              >\n                Read-only mode\n              </Typography>\n            )}\n          </>\n        );\n      }\n    }, [\n      errorFindingVc,\n      extendVcSubscription,\n      isLoading,\n      isOwnerOfVc,\n      orbsAccountStore.allowanceToMSPContract,\n      orbsAccountStore.mspContractParameters.monthlyRateInFullOrbs,\n      orbsAccountStore.txPending,\n      showSelectVcForm,\n      showSetMSPContractAllowanceDialog,\n      theme.palette.warning.main,\n      vcData,\n      vcId,\n    ]);\n\n    return (\n      <Page style={{ textAlign: \"center\" }}>\n        {showSelectVcForm && (\n          <VcIdForm onActionClick={onOpenVcClicked} actionButtonText={\"Open\"} />\n        )}\n        {/*<ExistingVirtualChain web3={{} as Web3} config={configs} />*/}\n        {vcContent}\n\n        {/* Modal */}\n        <ActionConfirmationModal\n          open={showModal}\n          onAccept={() => {\n            setShowModal(false);\n            onDialogAccept();\n          }}\n          onCancel={() => {\n            setShowModal(false);\n            if (dialogTexts.onCancelMessage) {\n              enqueueSnackbar(dialogTexts.onCancelMessage, {\n                variant: \"info\",\n                preventDuplicate: true,\n              });\n            }\n          }}\n          title={dialogTexts.title}\n          contentText={dialogTexts.content}\n        />\n      </Page>\n    );\n  }\n);\n","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Button, ButtonProps } from \"@material-ui/core\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  actionButton: {\n    transition: \"background-color 0.4s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.getContrastText(theme.palette.secondary.light),\n    },\n  },\n}));\n\nexport const ActionButton = React.memo<IProps & ButtonProps>((props) => {\n  const { children, fullWidth, ...rest } = props;\n  const classes = useStyles();\n\n  return (\n    <Button\n      className={classes.actionButton}\n      variant={\"outlined\"}\n      fullWidth={fullWidth === undefined ? true : fullWidth}\n      type={\"submit\"}\n      {...rest}\n    >\n      {children}\n    </Button>\n  );\n});\n","import React, { useRef } from \"react\";\nimport { Card, CardActions, CardContent, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ActionButton } from \"../ActionButton/ActionButton\";\nimport { TReadVcDataResponse } from \"@orbs-network/contracts-js/src/ethereumContractsServices/subscriptionService/ISubscriptionsService\";\nimport useHover from \"@react-hook/hover\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Color from \"color\";\nimport { fullOrbsFromWeiOrbs } from \"../../cryptoUtils/unitConverter\";\n\nexport const VC_GIST_CARD_WIDTH_REM = 15;\n\ninterface IProps {\n  vcId: string;\n  vcData: TReadVcDataResponse;\n  onOpenPageClick: (vcId: string) => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // minWidth: 275,\n    width: `${VC_GIST_CARD_WIDTH_REM}rem`,\n    maxWidth: \"100%\",\n\n    transition: \"0.5s\",\n\n    \"&:hover\": {\n      backgroundColor: Color(theme.palette.background.paper).lighten(0.3).hex(),\n    },\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nexport const VcGistCard = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { vcId, vcData, onOpenPageClick } = props;\n\n  const hoverTargetRef = useRef<HTMLElement>();\n  // @ts-ignore\n  const isHovering = useHover(hoverTargetRef);\n  const theme = useTheme();\n\n  const bull = <span className={classes.bullet}>•</span>;\n  const text = `${vcId} - ${vcData?.name} - ${vcData?.expiresAt}`;\n\n  // const textSecondaryOrSecondary = isHovering ? \"secondary\" : \"textSecondary\";\n  const secondaryDarkOrTextSecondary = isHovering\n    ? theme.palette.secondary.dark\n    : theme.palette.text.secondary;\n  const textMainOrInherit = isHovering\n    ? theme.palette.secondary.main\n    : \"inherit\";\n\n  const inheritOrBlack = isHovering ? theme.palette.secondary.dark : \"inherit\";\n\n  return (\n    <Card className={classes.root} ref={hoverTargetRef}>\n      <CardContent>\n        <Typography\n          className={classes.title}\n          gutterBottom\n          style={{ color: secondaryDarkOrTextSecondary }}\n        >\n          {vcId}\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          component=\"h2\"\n          style={{ color: textMainOrInherit }}\n        >\n          {vcData.name}\n        </Typography>\n        {/* TODO : O.L : Add color warning to soon-to-be expired chains */}\n        <Typography\n          variant={\"caption\"}\n          className={classes.pos}\n          style={{ color: secondaryDarkOrTextSecondary }}\n        >\n          <Typography\n            variant={\"caption\"}\n            component={\"span\"}\n            style={{ fontWeight: \"bold\" }}\n          >\n            Paid until :{\" \"}\n          </Typography>{\" \"}\n          {new Date(parseInt(vcData.expiresAt) * 1000).toLocaleString(\n            undefined,\n            { year: \"numeric\", month: \"long\", day: \"numeric\" }\n          )}\n        </Typography>\n        <br />\n        <Typography\n          variant={\"caption\"}\n          className={classes.pos}\n          style={{ color: secondaryDarkOrTextSecondary, fontWeight: \"bold\" }}\n        >\n          {vcData.isCertified ? \"Certified\" : \"Not certified\"}\n        </Typography>\n        <br />\n        <Typography\n          variant={\"caption\"}\n          className={classes.pos}\n          style={{ color: secondaryDarkOrTextSecondary }}\n        >\n          <Typography\n            variant={\"caption\"}\n            component={\"span\"}\n            style={{ fontWeight: \"bold\" }}\n          >\n            Deployment subset :{\" \"}\n          </Typography>{\" \"}\n          {vcData.deploymentSubset}\n        </Typography>\n        <br />\n        <Typography\n          variant={\"caption\"}\n          className={classes.pos}\n          style={{ color: secondaryDarkOrTextSecondary }}\n        >\n          <Typography\n            variant={\"caption\"}\n            component={\"span\"}\n            style={{ fontWeight: \"bold\" }}\n          >\n            rate :{\" \"}\n          </Typography>\n          {fullOrbsFromWeiOrbs(vcData.rate)} ORBS / Month\n        </Typography>\n        <br />\n        <Typography\n          variant={\"caption\"}\n          className={classes.pos}\n          style={{ color: secondaryDarkOrTextSecondary }}\n        >\n          <Typography\n            variant={\"caption\"}\n            component={\"span\"}\n            style={{ fontWeight: \"bold\" }}\n          >\n            tier :{\" \"}\n          </Typography>\n          {vcData.tier}\n        </Typography>\n        {/*<Typography variant=\"body2\" component=\"p\">*/}\n        {/*  well meaning and kindly.*/}\n        {/*  <br />*/}\n        {/*  {'\"a benevolent smile\"'}*/}\n        {/*</Typography>*/}\n      </CardContent>\n      <CardActions style={{ marginTop: \"auto\" }}>\n        <ActionButton\n          style={{ marginTop: \"auto\" }}\n          size=\"small\"\n          onClick={() => onOpenPageClick(vcId)}\n        >\n          Open VC page\n        </ActionButton>\n      </CardActions>\n    </Card>\n  );\n});\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Page } from \"../components/structure/Page\";\nimport { useSubscriptionsService } from \"../services/servicesHooks\";\nimport {\n  useCryptoWalletIntegrationStore,\n  useOrbsAccountStore,\n} from \"../store/storeHooks\";\nimport { observer } from \"mobx-react\";\nimport { ActionButton } from \"../components/ActionButton/ActionButton\";\nimport { InTextLink } from \"../components/InTextLink\";\nimport { ROUTES } from \"../constants/routes\";\nimport { Typography } from \"@material-ui/core\";\nimport {\n  VC_GIST_CARD_WIDTH_REM,\n  VcGistCard,\n} from \"../components/VcGistCard/VcGistCard\";\nimport { TReadVcDataResponse } from \"@orbs-network/contracts-js\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface IProps {}\n\nconst NO_DATA_VC_RESPONSE: TReadVcDataResponse = {\n  tier: \"\",\n  rate: \"\",\n  genRefTime: \"\",\n  isCertified: false,\n  owner: \"\",\n  deploymentSubset: \"\",\n  expiresAt: \"\",\n  name: \"\",\n};\n\nexport const RecoverVCPage = observer<React.FunctionComponent<IProps>>(\n  (props) => {\n    const subscriptionsService = useSubscriptionsService();\n    const cryptoWalletIntegrationStore = useCryptoWalletIntegrationStore();\n    const orbsAccountStore = useOrbsAccountStore();\n\n    const [hasError, setHasErrors] = useState(false);\n    const [isReading, setIsReading] = useState(false);\n    const hasAnyVcs = orbsAccountStore.vcCreationEvents.length > 0;\n\n    const history = useHistory();\n\n    const onOpenPageClick = useCallback(\n      (vcId: string) => {\n        history.push(`${ROUTES.existingVc}?vcId=${vcId}`);\n      },\n      [history]\n    );\n\n    const readAndSetVcs = useCallback(\n      async (address: string) => {\n        console.log(`Looking for vcs for ${address}`);\n\n        const createdVcs = await subscriptionsService.readVcCreatedEvents(\n          address\n        );\n\n        console.log({ createdVcs });\n\n        orbsAccountStore.setVcCreationEventsAndUpdateVcsData(createdVcs);\n      },\n      [orbsAccountStore, subscriptionsService]\n    );\n\n    const readAndSetVcsAndState = useCallback(\n      async (address: string) => {\n        if (!address) {\n          return;\n        }\n\n        setIsReading(true);\n\n        try {\n          await readAndSetVcs(cryptoWalletIntegrationStore.mainAddress);\n        } catch (e) {\n          console.error(`Error while set-n-read vcs \" ${e}`);\n          setHasErrors(true);\n        } finally {\n          setIsReading(false);\n        }\n      },\n      [cryptoWalletIntegrationStore.mainAddress, readAndSetVcs]\n    );\n\n    useEffect(() => {\n      // DEV_NOTE : Prevent re-seraching after already has data.\n      if (orbsAccountStore.vcCreationEvents.length) {\n        return;\n      }\n\n      console.log(\n        `Runn effect for ${cryptoWalletIntegrationStore.mainAddress}`\n      );\n\n      readAndSetVcsAndState(cryptoWalletIntegrationStore.mainAddress);\n    }, [\n      cryptoWalletIntegrationStore.mainAddress,\n      orbsAccountStore.vcCreationEvents.length,\n      readAndSetVcsAndState,\n    ]);\n\n    if (isReading) {\n      return (\n        <Page>\n          <Typography variant={\"h4\"}>Looking for VCs...</Typography>\n        </Page>\n      );\n    } else if (hasError) {\n      return (\n        <Page>\n          <Typography variant={\"h4\"} color={\"error\"}>\n            Error while looking for created VCs\n          </Typography>\n          <br />\n          <br />\n          <ActionButton\n            onClick={() => {\n              console.log(\"Re reading\");\n              readAndSetVcsAndState(cryptoWalletIntegrationStore.mainAddress);\n            }}\n          >\n            Reload VC's\n          </ActionButton>\n        </Page>\n      );\n    }\n\n    return (\n      <Page style={{}}>\n        <Typography variant={\"h2\"}>Recover VC Page</Typography>\n        <br />\n        <Typography variant={\"h4\"}>\n          Found {orbsAccountStore.vcCreationEvents.length} vcs created by you\n        </Typography>\n        <br />\n        <br />\n        <ActionButton\n          fullWidth={false}\n          onClick={() => {\n            console.log(\"Re reading\");\n            readAndSetVcsAndState(cryptoWalletIntegrationStore.mainAddress);\n          }}\n        >\n          Reload VC's\n        </ActionButton>\n        <br />\n\n        <div\n          style={{\n            display: \"grid\",\n            width: `${VC_GIST_CARD_WIDTH_REM * 2 + 2}rem`,\n            maxWidth: \"100%\",\n            gridTemplateColumns: \"repeat(auto-fill, minmax(15rem, 1fr))\",\n            gridGap: \"1rem\",\n            justifyItems: \"center\",\n          }}\n        >\n          {orbsAccountStore.vcCreationEvents.map((vcCreationEvent) => {\n            const vcData = orbsAccountStore.vcIdToData.get(\n              vcCreationEvent.vcId\n            );\n\n            return (\n              // <div\n              //   key={vcCreationEvent.vcId}\n              //   style={{\n              //     alignItems: \"center\",\n              //     display: \"flex\",\n              //     flexDirection: \"column\",\n              //   }}\n              // >\n              <VcGistCard\n                key={vcCreationEvent.vcId}\n                vcId={vcCreationEvent.vcId}\n                vcData={vcData || NO_DATA_VC_RESPONSE}\n                onOpenPageClick={onOpenPageClick}\n              />\n              // </div>\n            );\n          })}\n        </div>\n        <br />\n        <br />\n      </Page>\n    );\n  }\n);\n","import React from \"react\";\nimport { ContentFitting } from \"../components/structure/ContentFitting\";\nimport { Page } from \"../components/structure/Page\";\nimport { VirtualChainDetailsForm } from \"../components/forms/VirtualChainDetailsForm\";\nimport { Typography, useTheme } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport { useVcDataHook } from \"../services/subscriptionsServiceHooks\";\n\ninterface IProps {}\n\ntype TRouteParams = {\n  vcId: string;\n};\n\nexport const VcCreationSuccessPage = React.memo<IProps>((props) => {\n  const theme = useTheme();\n\n  const { vcId } = useParams<TRouteParams>();\n  const { vcData, errorFindingVc, isLoading } = useVcDataHook(vcId);\n\n  if (isLoading) {\n    return (\n      <Page>\n        <ContentFitting\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h3\"}\n            style={{ color: theme.palette.error.main }}\n          >\n            Loading...\n          </Typography>\n        </ContentFitting>\n      </Page>\n    );\n  } else if (vcData === null) {\n    return (\n      <Page>\n        <ContentFitting\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h3\"}\n            style={{ color: theme.palette.warning.main }}\n          >\n            Could Not find VC {vcId}\n          </Typography>\n        </ContentFitting>\n      </Page>\n    );\n  } else if (errorFindingVc) {\n    return (\n      <Page>\n        <ContentFitting\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h3\"}\n            style={{ color: theme.palette.error.main }}\n          >\n            Error finding Virtual chain\n          </Typography>\n          <Typography variant={\"h3\"}>{vcId}</Typography>\n        </ContentFitting>\n      </Page>\n    );\n  }\n\n  // TODO : O.L : Fix the centering of the elements to be more elegant\n\n  return (\n    <Page>\n      <ContentFitting>\n        <div\n          style={{\n            padding: \"0.5rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            textAlign: \"center\",\n            marginRight: \"auto\",\n            marginLeft: \"auto\",\n          }}\n        >\n          <VirtualChainDetailsForm\n            vcId={vcId}\n            vcName={vcData.name}\n            paidUntil={vcData.payedUntil}\n            deploymentSubset={vcData.deploymentSubset}\n          />{\" \"}\n        </div>\n        <div\n          style={{\n            padding: \"0.5rem\",\n            width: \"fit-content\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            textAlign: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h4\"}\n            color={\"secondary\"}\n            style={{ fontWeight: \"bold\" }}\n          >\n            Important:\n          </Typography>\n          <Typography variant={\"h4\"}>\n            Please keep the virtual Chain ID for future use.\n          </Typography>\n        </div>\n      </ContentFitting>\n    </Page>\n  );\n});\n","import React from \"react\";\nimport { ContentFitting } from \"../components/structure/ContentFitting\";\nimport { Page } from \"../components/structure/Page\";\nimport { VirtualChainDetailsForm } from \"../components/forms/VirtualChainDetailsForm\";\nimport { Typography, useTheme } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport { useVcDataHook } from \"../services/subscriptionsServiceHooks\";\n\ninterface IProps {}\n\ntype TRouteParams = {\n  vcId: string;\n};\n\nexport const VcExtensionSuccessPage = React.memo<IProps>((props) => {\n  const theme = useTheme();\n\n  const { vcId } = useParams<TRouteParams>();\n  const { vcData, errorFindingVc, isLoading } = useVcDataHook(vcId);\n\n  if (isLoading) {\n    return (\n      <Page>\n        <ContentFitting\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h3\"}\n            style={{ color: theme.palette.error.main }}\n          >\n            Loading...\n          </Typography>\n        </ContentFitting>\n      </Page>\n    );\n  } else if (vcData == null) {\n    return (\n      <Page>\n        <ContentFitting\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h3\"}\n            style={{ color: theme.palette.warning.main }}\n          >\n            Could Not find VC {vcId}\n          </Typography>\n        </ContentFitting>\n      </Page>\n    );\n  } else if (errorFindingVc) {\n    return (\n      <Page>\n        <ContentFitting\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h3\"}\n            style={{ color: theme.palette.error.main }}\n          >\n            Error finding Virtual chain\n          </Typography>\n          <Typography variant={\"h3\"}>{vcId}</Typography>\n        </ContentFitting>\n      </Page>\n    );\n  }\n\n  // TODO : O.L : Fix the centering of the elements to be more elegant\n\n  return (\n    <Page>\n      <ContentFitting>\n        <div\n          style={{\n            padding: \"0.5rem\",\n            width: \"fit-content\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            textAlign: \"center\",\n          }}\n        >\n          <Typography variant={\"h4\"}>\n            Vc subscription successfully extended !\n          </Typography>\n        </div>\n        <div\n          style={{\n            padding: \"0.5rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            textAlign: \"center\",\n            marginRight: \"auto\",\n            marginLeft: \"auto\",\n          }}\n        >\n          <VirtualChainDetailsForm\n            vcId={vcId}\n            vcName={vcData.name}\n            paidUntil={vcData.payedUntil}\n            deploymentSubset={vcData.deploymentSubset}\n          />\n        </div>\n      </ContentFitting>\n    </Page>\n  );\n});\n","import React, { DetailedHTMLProps } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {\n  text: string;\n  href?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    color: theme.palette.secondary.light,\n    \"&:hover\": {\n      color: theme.palette.secondary.main,\n    },\n  },\n}));\n\nexport const InTextLink = React.memo<\n  IProps &\n    DetailedHTMLProps<\n      React.AnchorHTMLAttributes<HTMLAnchorElement>,\n      HTMLAnchorElement\n    >\n>((props) => {\n  const classes = useStyles();\n  const { text, href, ...others } = props;\n  return (\n    <a\n      className={classes.link}\n      href={href || \"\"}\n      target={\"_blank\"}\n      rel={\"noopener noreferrer\"}\n      // style={{ display: \"inline\" }}\n      {...others}\n    >\n      {text}\n    </a>\n  );\n});\n","import React from \"react\";\nimport {\n  Button,\n  FormControlLabel,\n  Typography,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport { useBoolean } from \"react-hanger\";\nimport { renderToString } from \"react-dom/server\";\nimport configs from \"../configs\";\nimport { InTextLink } from \"../components/InTextLink\";\nimport { baseTheme } from \"../theme/Theme\";\n\ntype TWalletConnectionPhase = \"install\" | \"connect\";\n\ninterface IProps {\n  walletConnectionPhase: TWalletConnectionPhase;\n  actionFunction: () => void;\n  pressedOnInstall?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  noEthereumProviderSection: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    // justifyContent: \"space-between\",\n    padding: \"2em\",\n    backgroundColor: \"rgba(0,0,0, 0.2)\",\n    borderRadius: \"5%\",\n    // width: \"clamp(20%, 40em, 100%)\",\n    width: \"fit-content\",\n    maxWidth: \"100%\",\n    boxSizing: \"border-box\",\n    // height: \"clamp(max(25%, 200px), 8em, 50%)\",\n  },\n}));\n\nexport const NoEthereumProviderSection = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { walletConnectionPhase, actionFunction, pressedOnInstall } = props;\n\n  const tickerValue = useBoolean(false);\n\n  const shouldDisplayLegalTicker = walletConnectionPhase === \"connect\";\n  const buttonIsEnabled = !shouldDisplayLegalTicker || tickerValue.value;\n\n  const isInstall = walletConnectionPhase === \"install\";\n\n  const titleText = isInstall\n    ? \"No Ethereum provider detected\"\n    : \"Please connect\";\n  const subTitleText = isInstall\n    ? \"you should install MetaMask and refresh the page\"\n    : \"To begin, connect your wallet\";\n  const buttonText =\n    walletConnectionPhase === \"install\" ? \"Install\" : \"Connect\";\n\n  const innerHtmlForLegalAgreement = renderToString(\n    <ThemeProvider theme={baseTheme}>\n      <Typography>\n        I agree to the{\" \"}\n        <InTextLink href={configs.termsOfUseUrl} text={\"Terms of Use\"} /> and{\" \"}\n        <InTextLink href={configs.privacyPolicyUrl} text={\"Privacy Policy\"} />\n      </Typography>\n    </ThemeProvider>\n  );\n\n  return (\n    <div className={classes.noEthereumProviderSection}>\n      <Typography style={{ marginBottom: \"0.5rem\" }} variant={\"h4\"}>\n        {titleText}\n      </Typography>\n      <Typography style={{ marginBottom: \"1rem\" }}>{subTitleText}</Typography>\n      <Button\n        variant={\"outlined\"}\n        onClick={actionFunction}\n        disabled={!buttonIsEnabled}\n      >\n        {buttonText}\n      </Button>\n      {shouldDisplayLegalTicker && (\n        <FormControlLabel\n          style={{\n            marginTop: \"0.5rem\",\n          }}\n          control={\n            <Checkbox\n              checked={tickerValue.value}\n              onChange={(e) => tickerValue.setValue(e.target.checked)}\n              name={\"legalTicker\"}\n            />\n          }\n          label={\n            <Typography\n              // onClick={(e) => e.preventDefault()}\n              dangerouslySetInnerHTML={{ __html: innerHtmlForLegalAgreement }}\n            />\n          }\n        />\n      )}\n    </div>\n  );\n});\n","import React, { useMemo } from \"react\";\nimport \"./App.css\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Header } from \"./components/structure/header/Header\";\nimport { HEADER_HEIGHT_REM } from \"./theme/Theme\";\nimport { Route, RouteProps, Switch } from \"react-router-dom\";\nimport { NewVCPage } from \"./pages/NewVCPage\";\nimport { ExistingVCPage } from \"./pages/ExistingVCPage\";\nimport { RecoverVCPage } from \"./pages/RecoverVcPage\";\nimport { ROUTES } from \"./constants/routes\";\nimport { VcCreationSuccessPage } from \"./pages/VcCreationSuccessPage\";\nimport { VcExtensionSuccessPage } from \"./pages/VcExtensionSuccessPage\";\nimport { observer } from \"mobx-react\";\nimport { useCryptoWalletIntegrationStore } from \"./store/storeHooks\";\nimport { Page } from \"./components/structure/Page\";\nimport { ContentFitting } from \"./components/structure/ContentFitting\";\nimport { NoEthereumProviderSection } from \"./pages/NoEthereumProviderSection\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  appMain: {\n    height: \"100%\",\n    maxWidth: \"90%\",\n    boxSizing: \"border-box\",\n    padding: theme.spacing(2),\n  },\n\n  headerSeparator: {\n    height: `${HEADER_HEIGHT_REM}rem`,\n  },\n\n  mainWrapper: {\n    backgroundColor: \"#06142e\",\n    backgroundRepeat: \"repeat-y\",\n    backgroundImage:\n      \"url(https://www.orbs.com/wp-content/uploads/2019/02/technology-background1.png)\",\n    backgroundAttachment: \"scroll\",\n    backgroundPosition: \"top center\",\n    // minHeight: `calc(100% - ${HEADER_HEIGHT_REM}rem)`,\n    minHeight: `calc(100% - ${HEADER_HEIGHT_REM}rem)`,\n\n    // Center the content\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n}));\n\nconst App = observer(() => {\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const cryptoWalletIntegrationStore = useCryptoWalletIntegrationStore();\n\n  const isConnected = cryptoWalletIntegrationStore.isConnectedToWallet;\n\n  const appContent = useMemo(() => {\n    if (!isConnected) {\n      return (\n        <Page>\n          <NoEthereumProviderSection\n            walletConnectionPhase={\"connect\"}\n            actionFunction={() => cryptoWalletIntegrationStore.askToConnect()}\n          />\n        </Page>\n      );\n    } else {\n      return (\n        <Switch>\n          <Route exact path={ROUTES.newVc} component={NewVCPage} />\n          <Route exact path={ROUTES.existingVc} component={ExistingVCPage} />\n          <Route exact path={ROUTES.recoverVc} component={RecoverVCPage} />\n          <Route\n            path={`${ROUTES.vcCreated}/:vcId`}\n            component={VcCreationSuccessPage}\n          />\n          <Route\n            path={`${ROUTES.vcExtended}/:vcId`}\n            component={VcExtensionSuccessPage}\n          />\n          <Route path=\"/\" component={NewVCPage} />\n        </Switch>\n      );\n    }\n  }, [cryptoWalletIntegrationStore, isConnected]);\n\n  return (\n    <>\n      <Header />\n      <div className={classes.headerSeparator} />\n      <div className={classes.mainWrapper}>\n        <main className={classes.appMain}>{appContent}</main>\n      </div>\n    </>\n  );\n});\n\nexport default App;\n","import React, { useCallback } from \"react\";\nimport { CssBaseline, useTheme } from \"@material-ui/core\";\nimport { useBoolean } from \"react-hanger\";\nimport { Page } from \"../components/structure/Page\";\nimport { NoEthereumProviderSection } from \"./NoEthereumProviderSection\";\nimport {\n  makeStyles,\n  StylesProvider,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport { baseTheme, HEADER_HEIGHT_REM } from \"../theme/Theme\";\nimport { Provider } from \"mobx-react\";\nimport { SnackbarProvider } from \"notistack\";\n\ntype TWalletConnectionPhase = \"install\" | \"connect\";\n\ninterface IProps {}\n\n// DEV_NOTE : The style to make this page looks good is copied from the 'App'\n// TODO : O.L : We should encapsulate it better.\n\nconst useStyles = makeStyles((theme) => ({\n  appMain: {\n    height: \"100%\",\n    maxWidth: \"90%\",\n    boxSizing: \"border-box\",\n    padding: theme.spacing(2),\n  },\n  mainWrapper: {\n    backgroundColor: \"#06142e\",\n    backgroundRepeat: \"repeat-y\",\n    backgroundImage:\n      \"url(https://www.orbs.com/wp-content/uploads/2019/02/technology-background1.png)\",\n    backgroundAttachment: \"scroll\",\n    backgroundPosition: \"top center\",\n    // minHeight: `calc(100% - ${HEADER_HEIGHT_REM}rem)`,\n    minHeight: `100%`,\n\n    // Center the content\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n}));\n\nexport const NoEthereumProviderPage = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const hasPressed = useBoolean(false);\n\n  const installMetaMask = useCallback(() => {\n    window.open(\"https://metamask.io/\", \"_blank\");\n    hasPressed.setTrue();\n  }, [hasPressed]);\n\n  return (\n    <div className={classes.mainWrapper}>\n      <main className={classes.appMain}>\n        <Page>\n          <NoEthereumProviderSection\n            actionFunction={installMetaMask}\n            pressedOnInstall={hasPressed.value}\n            walletConnectionPhase={\"install\"}\n          />\n        </Page>\n      </main>\n    </div>\n  );\n});\n"],"sourceRoot":""}