{"version":3,"sources":["components/structure/header/logo-white.svg","serviceWorker.ts","store/CryptoWalletConnectionStore.ts","constants/ethereumErrorCodes.ts","cryptoUtils/unitConverter.ts","store/OrbsAccountStore.ts","configs.ts","theme/Theme.tsx","store/storesInitialization.ts","AppWrapper.tsx","services/Services.ts","components/structure/header/links.ts","components/structure/header/MenuPopup.tsx","components/structure/header/Header.tsx","components/structure/Page.tsx","components/structure/ContentFitting.tsx","components/forms/VirtualChainSubscriptionForm.tsx","services/servicesHooks.ts","store/storeHooks.ts","components/modals/ActionConfirmationModal.tsx","constants/routes.ts","pages/NewVCPage.tsx","components/forms/VcIdForm.tsx","components/forms/VirtualChainDetailsForm.tsx","components/forms/VcSubscriptionExtensionForm.tsx","services/subscriptionsServiceHooks.ts","pages/ExistingVCPage.tsx","index.tsx","pages/RecoverVcPage.tsx","pages/VcCreationSuccessPage.tsx","pages/VcExtensionSuccessPage.tsx","components/InTextLink.tsx","pages/NoEthereumProviderSection.tsx","App.tsx","pages/NoEthereumProviderPage.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","CryptoWalletConnectionStore","action","cryptoWalletConnectionService","addressCheckingInterval","undefined","reactionToWalletConnection","this","hasEthereumProvider","hasEventsSupport","reaction","isConnectedToWallet","isConnected","a","readInformationFromConnectedWallet","fireImmediately","onMainAddressChange","address","setMainAddress","readMainAddress","then","setInterval","requestConnectionPermission","permissionGranted","setWalletConnectionRequestApproved","walletConnectionRequestApproved","walletAddress","requestApproved","mainAddress","didUserApproveDappInThePast","observable","computed","JSON_RPC_ERROR_CODES","userRejectedRequest","unauthorized","unsupportedMethod","weiOrbsFromFullOrbs","fullOrbs","BigInt","web3","utils","toWei","toString","OrbsAccountStore","cryptoWalletIntegrationStore","orbsTokenService","monthlySubscriptionPlanService","subscriptionsService","addressChangeReaction","readContractParameters","console","log","setDoneLoading","reactToConnectedAddressChanged","readMonthlyRateInFullOrbs","monthlyRate","readTier","tier","promievent","name","resetTxIndicators","setTxPending","res","code","setTxCanceled","allowanceForStakingContractInWeiOrbs","mspContractAddress","contractAddress","promivent","approve","handlePromievent","readAndSetMSPContractAllowance","virtualChainSubscriptionPayload","createANewVC","val","recipt","readVcIdFromHistory","blockNumber","vcId","manuallyReadAccountData","virtualChainSubscriptionExtensionPayload","extendSubscription","currentAddress","setDefaultAccountAddress","refreshAccountListeners","readDataForAccount","failLoadingProcess","error","accountAddress","setFromAccount","tierName","monthlyRateInFullOrbs","setMspContractParameters","setContractParametersErrorLoading","catch","e","readAllowance","balanceInWeiOrbs","setMSPContractAllowance","weiOrbsString","parseInt","fromWei","cancelAllCurrentSubscriptions","setErrorLoading","setTxHadError","contractParametersDoneLoading","contractParametersErrorLoading","doneLoading","errorLoading","txPending","txCanceled","txHadError","contractAllowance","allowanceToMSPContract","mspContractParameters","process","REACT_APP_ETHEREUM_NETWORK","INFURA_KEY","REACT_APP_INFURA_KEY","configs","urlBase","PUBLIC_BASE_PATH","network","minimalSubscriptionAmount","decimals","v2contractsAddressesOverride","ETHEREUM_PROVIDER_WS","termsOfUseUrl","privacyPolicyUrl","baseTheme","responsiveFontSizes","createMuiTheme","palette","type","primary","main","secondary","background","default","paper","typography","overrides","MuiPaper","root","MuiTypography","colorPrimary","MuiLink","configure","enforceActions","useStyles","makeStyles","theme","snackbarInfo","backgroundColor","dark","color","getContrastText","services","ethereumProvider","Web3","providers","WebsocketProvider","cryptoWalletIntegrationService","CryptoWalletConnectionService","SubscriptionsService","subscriptionContract","OrbsTokenService","erc20Contract","MonthlySubscriptionPlanService","monthlySubscriptionPlanDeployedInstance","buildServices","ethereum","stores","subscriptionService","orbsAccountStore","getStores","AppWrapper","React","memo","props","classes","appComponent","children","StylesProvider","injectFirst","ThemeProvider","maxSnack","variantInfo","CssBaseline","links","translationKey","url","useLinkDescriptors","useMemo","map","link","label","menuButton","padding","spacing","width","transition","HOVER_COLOR","MenuPopup","linkDescriptors","useBoolean","setFalse","setTrue","value","useState","anchorEl","setAnchorEl","handleClick","useCallback","event","currentTarget","handleClose","menuItemLinks","idx","MenuItem","onClick","key","Link","component","NavLink","exact","className","activeStyle","underline","to","variant","noWrap","id","IconButton","aria-label","Popover","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","appBar","height","paddingTop","paddingBottom","boxSizing","zIndex","drawer","logo","nav","display","flexWrap","toolbar","paddingRight","paddingLeft","margin","maxWidth","justifyContent","headerButtonsContainer","alignItems","displayInMetamaskButton","marginRight","movedDown","marginLeft","Header","useTheme","smallerThanSmall","useMediaQuery","breakpoints","down","menuLinks","menu","AppBar","position","data-testid","Toolbar","src","alt","page","Page","contentFitter","ContentFitting","others","textField","phaseInstructionLabel","marginBottom","forControlLabel","checkBoxes","typographyAnimated","visibility","typographyAnimatedShow","actionButton","light","VirtualChainSubscriptionForm","subscribeNewVC","disableActionButtons","enqueueSnackbar","useSnackbar","setPlanOptionChanged","setName","monthsToPayForInAdvance","setMonthsToPayForInAdvance","runOnCanary","setRunOnCanary","useForm","register","handleSubmit","currentCostOfPlan","errors","hasEnoughAllowance","submit","formData","deploymentSubsets","MONTHLY_SUBSCRIPTION_PLAN_SERVICE_CONSTANTS","amountInFullOrbs","deploymentSubset","canary","isCertified","runOnlyOnCertifiedValidators","preventDuplicate","setAllowance","onSubmit","style","Typography","TextField","autoComplete","InputLabelProps","pointerEvents","title","onChange","target","required","inputRef","fullWidth","select","SelectProps","native","FormControlLabel","control","Checkbox","checked","LabelWithIconTooltip","text","tooltipText","toLocaleString","Button","disabled","startIcon","Tooltip","marginInlineStart","useServices","useContext","MobXProviderContext","Error","useStores","useOrbsAccountStore","dialogPaper","border","boxShadow","ActionConfirmationModal","onAccept","onCancel","contentText","acceptText","cancelText","Dialog","fullScreen","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","ROUTES","NewVCPage","observer","history","useHistory","showModal","setShowModal","content","dialogTexts","setDialogTexts","onDialogAccept","setOnDialogAccept","allowanceInFullOrbs","setAllowanceForStakingContract","createNewVc","push","showCreateVcDialog","onCancelMessage","showSetMSPContractAllowanceDialog","VcIdForm","actionButtonText","onActionClick","setVcId","VirtualChainDetailsForm","paidUntil","vcName","flexDirection","textAlign","Moment","unix","format","VcSubscriptionExtensionForm","extendVcSubscription","useVcDataHook","isLoading","setIsLoading","errorFindingVc","setErrorFindingVc","payedUntil","vcData","setVcData","readVcData","readVcDataResponse","expiresAt","useEffect","AppComponent","ExistingVCPage","onOpenVcClicked","extendExistingVcSubscription","showSelectVcForm","length","vcContent","RecoverVCPage","VcCreationSuccessPage","useParams","fontWeight","VcExtensionSuccessPage","InTextLink","href","rel","noEthereumProviderSection","borderRadius","NoEthereumProviderSection","walletConnectionPhase","actionFunction","tickerValue","pressedOnInstall","shouldDisplayLegalTicker","buttonIsEnabled","isInstall","titleText","subTitleText","buttonText","innerHtmlForLegalAgreement","renderToString","marginTop","setValue","dangerouslySetInnerHTML","__html","appMain","headerSeparator","mainWrapper","backgroundRepeat","backgroundImage","backgroundAttachment","backgroundPosition","minHeight","flexShrink","drawerPaper","drawerContainer","overflow","App","appContent","path","askToConnect","NoEthereumProviderPage","hasPressed","installMetaMask","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1a9fa917.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-white.e59b3ac9.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { action, computed, observable, reaction } from \"mobx\";\nimport { IReactionDisposer } from \"mobx/lib/core/reaction\";\nimport { ICryptoWalletConnectionService } from \"@orbs-network/contracts-js\";\n\nexport class CryptoWalletConnectionStore {\n  @observable private walletConnectionRequestApproved: boolean = false;\n\n  @observable public hasEthereumProvider: boolean;\n  @observable public hasEventsSupport: boolean;\n\n  @observable public mainAddress: string = \"\";\n\n  private addressCheckingInterval?: NodeJS.Timeout = undefined;\n  reactionToWalletConnection: IReactionDisposer;\n\n  constructor(\n    private cryptoWalletConnectionService: ICryptoWalletConnectionService\n  ) {\n    this.hasEthereumProvider =\n      cryptoWalletConnectionService.hasEthereumProvider;\n    this.hasEventsSupport = cryptoWalletConnectionService.hasEventsSupport;\n\n    this.reactionToWalletConnection = reaction(\n      () => this.isConnectedToWallet,\n      async (isConnected) => {\n        if (isConnected) {\n          this.readInformationFromConnectedWallet();\n        }\n      },\n      {\n        fireImmediately: true,\n      }\n    );\n\n    if (this.hasEthereumProvider) {\n      // We will only detect address change if the Ethereum provider can support it\n      if (this.cryptoWalletConnectionService.hasEventsSupport) {\n        this.cryptoWalletConnectionService.onMainAddressChange((address) =>\n          this.setMainAddress(address)\n        );\n      } else {\n        // Else, we will read it one time + set an interval\n        this.cryptoWalletConnectionService\n          .readMainAddress()\n          .then((address) => this.setMainAddress(address));\n\n        this.addressCheckingInterval = setInterval(\n          () =>\n            this.cryptoWalletConnectionService\n              .readMainAddress()\n              .then((address) => this.setMainAddress(address)),\n          1000\n        );\n      }\n    }\n  }\n\n  @computed\n  public get isConnectedToWallet(): boolean {\n    return (\n      this.hasEthereumProvider &&\n      (this.cryptoWalletConnectionService.didUserApproveDappInThePast ||\n        this.walletConnectionRequestApproved)\n    );\n  }\n\n  public async askToConnect(): Promise<boolean> {\n    if (this.isConnectedToWallet) {\n      return true;\n    } else {\n      const permissionGranted = await this.cryptoWalletConnectionService.requestConnectionPermission();\n      this.setWalletConnectionRequestApproved(permissionGranted);\n\n      return this.walletConnectionRequestApproved;\n    }\n  }\n\n  private async readInformationFromConnectedWallet() {\n    const walletAddress = await this.cryptoWalletConnectionService.readMainAddress();\n\n    this.setMainAddress(walletAddress);\n  }\n\n  @action(\"setWalletConnectionRequestApproved\")\n  private setWalletConnectionRequestApproved(requestApproved: boolean) {\n    this.walletConnectionRequestApproved = requestApproved;\n  }\n\n  @action(\"setMainAddress\")\n  private setMainAddress(mainAddress: string) {\n    this.mainAddress = mainAddress;\n  }\n}\n","// DEV_NOTE : Taken from typeless library 'eth-json-rpc-errors';\nexport const JSON_RPC_ERROR_CODES = {\n  rpc: {\n    invalidInput: -32000,\n    resourceNotFound: -32001,\n    resourceUnavailable: -32002,\n    transactionRejected: -32003,\n    methodNotSupported: -32004,\n    parse: -32700,\n    invalidRequest: -32600,\n    methodNotFound: -32601,\n    invalidParams: -32602,\n    internal: -32603,\n  },\n  provider: {\n    userRejectedRequest: 4001,\n    unauthorized: 4100,\n    unsupportedMethod: 4200,\n  },\n};\n","import web3 from \"web3\";\n\nexport function fullOrbsFromWeiOrbs(weiOrbsString: string): number {\n  return parseInt(web3.utils.fromWei(weiOrbsString, \"ether\"));\n}\n\nexport function weiOrbsFromFullOrbs(fullOrbs: number): bigint {\n  return BigInt(web3.utils.toWei(fullOrbs.toString(), \"ether\"));\n}\n","import {\n  action,\n  computed,\n  IReactionDisposer,\n  observable,\n  reaction,\n} from \"mobx\";\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\nimport { PromiEvent, TransactionReceipt } from \"web3-core\";\nimport { JSON_RPC_ERROR_CODES } from \"../constants/ethereumErrorCodes\";\nimport { fullOrbsFromWeiOrbs } from \"../cryptoUtils/unitConverter\";\nimport {\n  IMonthlySubscriptionPlanService,\n  IOrbsTokenService,\n  ISubscriptionsService,\n  TVirtualChainSubscriptionExtensionPayload,\n  TVirtualChainSubscriptionPayload,\n} from \"@orbs-network/contracts-js\";\n\ntype TMSPContractParameters = {\n  tierName: string;\n  monthlyRateInFullOrbs: number;\n};\n\nexport class OrbsAccountStore {\n  @observable public contractParametersDoneLoading = false;\n  @observable public contractParametersErrorLoading = false;\n  @observable public doneLoading = false;\n  @observable public errorLoading = false;\n  @observable public txPending = false;\n  @observable public txHadError = false;\n  @observable public txCanceled = false;\n  @observable public isGuardian = false;\n  @observable public mspContractParameters: TMSPContractParameters = {\n    monthlyRateInFullOrbs: 0,\n    tierName: \"\",\n  };\n\n  // TODO : O.L : Move all MSP related data to its own store when starting to work with more than 1.\n  @observable public allowanceToMSPContract = 0;\n\n  private addressChangeReaction: IReactionDisposer;\n\n  constructor(\n    private cryptoWalletIntegrationStore: CryptoWalletConnectionStore,\n    private orbsTokenService: IOrbsTokenService,\n    private monthlySubscriptionPlanService: IMonthlySubscriptionPlanService,\n    private subscriptionsService: ISubscriptionsService\n  ) {\n    this.readContractParameters().then(() =>\n      console.log(\"MSP contract parameters read success\")\n    );\n    this.addressChangeReaction = reaction(\n      () => this.cryptoWalletIntegrationStore.mainAddress,\n      async (address) => {\n        this.setDoneLoading(false);\n        await this.reactToConnectedAddressChanged(address);\n\n        this.monthlySubscriptionPlanService\n          .readMonthlyRateInFullOrbs()\n          .then((monthlyRate) => console.log({ monthlyRate }));\n\n        this.monthlySubscriptionPlanService\n          .readTier()\n          .then((tier) => console.log({ tier }));\n        this.setDoneLoading(true);\n      },\n      {\n        fireImmediately: true,\n      }\n    );\n  }\n\n  // **** Computed values ****\n\n  // **** Contract interactions ****\n  private async handlePromievent(\n    promievent: PromiEvent<TransactionReceipt>,\n    name = \"A promivent\"\n  ): Promise<TransactionReceipt | undefined> {\n    this.resetTxIndicators();\n\n    // Indicate tx is pending\n    this.setTxPending(true);\n    console.log(`Waiting for promievent of ${name}`);\n\n    try {\n      const res = await promievent;\n      console.log(`Got Results for promievent of ${name}`);\n      return res;\n    } catch (e) {\n      if (\n        (e as any).code === JSON_RPC_ERROR_CODES.provider.userRejectedRequest\n      ) {\n        this.setTxCanceled(true);\n      } else {\n        throw e;\n      }\n    } finally {\n      this.setTxPending(false);\n    }\n  }\n\n  public async setAllowanceForStakingContract(\n    allowanceForStakingContractInWeiOrbs: bigint\n  ): Promise<void> {\n    const mspContractAddress = this.monthlySubscriptionPlanService\n      .contractAddress;\n    const promivent = this.orbsTokenService.approve(\n      mspContractAddress,\n      allowanceForStakingContractInWeiOrbs\n    );\n\n    this.handlePromievent(\n      promivent,\n      \"setAllowanceForStakingContract\"\n    ).then(() =>\n      this.readAndSetMSPContractAllowance(\n        this.cryptoWalletIntegrationStore.mainAddress\n      )\n    );\n  }\n\n  // TODO : O.L : Move to proper store\n  public async createNewVc(\n    virtualChainSubscriptionPayload: TVirtualChainSubscriptionPayload\n  ): Promise<string> {\n    const mspContractAddress = this.monthlySubscriptionPlanService\n      .contractAddress;\n    const promivent = this.monthlySubscriptionPlanService.createANewVC(\n      virtualChainSubscriptionPayload\n    );\n\n    const recipt = await this.handlePromievent(promivent, \"createNewVc\").then(\n      (val) => {\n        console.log(\"Add handling of created vc\");\n        console.log({ val });\n        return val;\n      }\n    );\n\n    const { vcId } = await this.subscriptionsService.readVcIdFromHistory(\n      recipt!.blockNumber,\n      this.cryptoWalletIntegrationStore.mainAddress\n    );\n\n    // DEV_NOTE : O.L : Re-Reading all relevant data, no need to wait\n    this.manuallyReadAccountData();\n\n    return vcId;\n  }\n\n  public async extendExistingVcSubscription(\n    virtualChainSubscriptionExtensionPayload: TVirtualChainSubscriptionExtensionPayload\n  ): Promise<void> {\n    const mspContractAddress = this.monthlySubscriptionPlanService\n      .contractAddress;\n    const promivent = this.monthlySubscriptionPlanService.extendSubscription(\n      virtualChainSubscriptionExtensionPayload\n    );\n\n    const recipt = await this.handlePromievent(\n      promivent,\n      \"extendExistingVcSubscription\"\n    ).then((val) => {\n      console.log({ val });\n      return val;\n    });\n\n    // DEV_NOTE : O.L : Re-Reading all relevant data, no need to wait\n    this.manuallyReadAccountData();\n  }\n\n  // **** Current address changed ****\n\n  private async reactToConnectedAddressChanged(currentAddress: string) {\n    if (currentAddress) {\n      this.setDefaultAccountAddress(currentAddress);\n\n      if (this.cryptoWalletIntegrationStore.hasEventsSupport) {\n        this.refreshAccountListeners(currentAddress);\n      }\n\n      try {\n        await this.readDataForAccount(currentAddress);\n      } catch (e) {\n        this.failLoadingProcess(e);\n        console.error(\n          \"Error in reacting to address change in Orbs Account Store\",\n          e\n        );\n      }\n    }\n  }\n\n  private setDefaultAccountAddress(accountAddress: string) {\n    this.monthlySubscriptionPlanService.setFromAccount(accountAddress);\n    this.subscriptionsService.setFromAccount(accountAddress);\n    this.orbsTokenService.setFromAccount(accountAddress);\n  }\n\n  // **** Data reading and setting ****\n\n  private async readContractParameters() {\n    try {\n      const tierName = await this.monthlySubscriptionPlanService.readTier();\n      const monthlyRateInFullOrbs = await this.monthlySubscriptionPlanService.readMonthlyRateInFullOrbs();\n\n      this.setMspContractParameters({ tierName, monthlyRateInFullOrbs });\n    } catch (e) {\n      this.setContractParametersErrorLoading(true);\n      console.error(\"Error loading msp contract parameters\");\n      console.error(e);\n    }\n  }\n\n  public async manuallyReadAccountData() {\n    try {\n      await this.readDataForAccount(\n        this.cryptoWalletIntegrationStore.mainAddress\n      );\n    } catch (e) {\n      this.failLoadingProcess(e);\n      console.error(\n        \"Error in manually reading address data in Orbs Account Store\",\n        e\n      );\n    }\n  }\n\n  private async readDataForAccount(accountAddress: string) {\n    // try {\n    //   await this.readAndSetIsGuardian(accountAddress);\n    // } catch (e) {\n    //   console.error(`Error read-n-set isGuardian ${e}`);\n    // }\n    await this.readAndSetMSPContractAllowance(accountAddress).catch((e) => {\n      console.error(`Error read-n-set MSP contract allowance: ${e}`);\n    });\n  }\n\n  // **** Read and Set ****\n  private async readAndSetMSPContractAllowance(accountAddress: string) {\n    const balanceInWeiOrbs = await this.orbsTokenService.readAllowance(\n      accountAddress,\n      this.monthlySubscriptionPlanService.contractAddress\n    );\n    this.setMSPContractAllowance(\n      fullOrbsFromWeiOrbs(balanceInWeiOrbs.toString())\n    );\n  }\n\n  // ****  Subscriptions ****\n\n  private async refreshAccountListeners(accountAddress: string) {\n    this.cancelAllCurrentSubscriptions();\n  }\n\n  private cancelAllCurrentSubscriptions() {}\n\n  // ****  Complex setters ****\n  private failLoadingProcess(error: Error) {\n    this.setErrorLoading(true);\n    this.setDoneLoading(true);\n  }\n\n  private resetTxIndicators() {\n    this.setTxPending(false);\n    this.setTxHadError(false);\n    this.setTxCanceled(false);\n  }\n\n  // ****  Observables setter actions ****\n  @action(\"setContractParametersDoneLoading\")\n  private setContractParametersDoneLoading(\n    contractParametersDoneLoading: boolean\n  ) {\n    this.contractParametersDoneLoading = contractParametersDoneLoading;\n  }\n\n  @action(\"setContractParametersErrorLoading\")\n  private setContractParametersErrorLoading(\n    contractParametersErrorLoading: boolean\n  ) {\n    this.contractParametersErrorLoading = contractParametersErrorLoading;\n  }\n\n  @action(\"setDoneLoading\")\n  private setDoneLoading(doneLoading: boolean) {\n    this.doneLoading = doneLoading;\n  }\n\n  @action(\"setErrorLoading\")\n  private setErrorLoading(errorLoading: boolean) {\n    this.errorLoading = errorLoading;\n  }\n\n  @action(\"setTxPending\")\n  private setTxPending(txPending: boolean) {\n    this.txPending = txPending;\n  }\n\n  @action(\"setTxCanceled\")\n  private setTxCanceled(txCanceled: boolean) {\n    this.txCanceled = txCanceled;\n  }\n\n  @action(\"setTxHadError\")\n  private setTxHadError(txHadError: boolean) {\n    this.txHadError = txHadError;\n  }\n\n  @action(\"setMSPContractAllowance\")\n  private setMSPContractAllowance(contractAllowance: number) {\n    this.allowanceToMSPContract = contractAllowance;\n  }\n\n  @action(\"setMspContractParameters\")\n  private setMspContractParameters(\n    mspContractParameters: TMSPContractParameters\n  ) {\n    this.mspContractParameters = mspContractParameters;\n  }\n}\n","type TSupportedNets = \"local\" | \"ropsten\" | \"mainnet\";\n// @ts-ignore\nconst ethereumNetwork: TSupportedNets = process.env.REACT_APP_ETHEREUM_NETWORK;\nexport const IS_DEV = process.env.NODE_ENV !== \"production\";\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY;\n\nexport interface IConfig {\n  urlBase: string;\n  network: TSupportedNets;\n  minimalSubscriptionAmount: number;\n  decimals: number;\n  v2contractsAddressesOverride: Partial<{\n    subscriptionContract: string;\n    erc20Contract: string;\n    // DEV_NOTE: O.L : For now, we have only one deployed 'Monthly Subscription Plan' instance.\n    // When we will start supporting more, we will need to read their addresses, tier name and price from a registery contract.\n    monthlySubscriptionPlanDeployedInstance: string;\n  }>;\n  ETHEREUM_PROVIDER_WS: string;\n  termsOfUseUrl: string;\n  privacyPolicyUrl: string;\n}\n\n// export const MainnetConfig: IConfig = {\n//     erc20Address: \"0xff56cc6b1e6ded347aa0b7676c85ab0b3d08b0fa\",\n//     subscriptionAddress: \"0x6e79DFB79CD53A2b08bC8c2852DecA7D73cD24fC\",\n//     network: \"mainnet\",\n//     minimalSubscriptionAmount: 6200,\n//     decimals: 18,\n// }\n\n// export const RopstenConfig: IConfig = {\n//     erc20Address: \"0xeD0Aa9A4F9e5ae9092994f4B86F6AAa89944939b\",\n//     subscriptionAddress: \"0xe654ad79a93af035a60c66100aa95dfd2215cc51\",\n//     network: \"ropsten\",\n//     minimalSubscriptionAmount: 100,\n//     decimals: 0,\n// }\n\n// TODO : O.L : Move these to a better place + ensure values are correct. (Maybe read it from the contract)\nconst MAIN_NET_MINIMUM_SUBSCRIPTION_AMOUNT = 6200;\nconst MAIN_NET_DECIMALS = 18;\n\nconst configs: IConfig = {\n  urlBase: process.env.PUBLIC_BASE_PATH || \"\",\n  network: \"mainnet\",\n  minimalSubscriptionAmount: MAIN_NET_MINIMUM_SUBSCRIPTION_AMOUNT,\n  decimals: MAIN_NET_DECIMALS,\n  v2contractsAddressesOverride: {},\n  ETHEREUM_PROVIDER_WS: `wss://mainnet.infura.io/ws/v3/${INFURA_KEY}`,\n  termsOfUseUrl: \"https://www.orbs.com/vc-portal-terms-of-use/\",\n  privacyPolicyUrl: \"https://www.orbs.com/vc-portal-privacy-policy/\",\n};\n\n// Webpack will remove this section on production build //\nif (process.env.NODE_ENV !== \"production\") {\n  if (ethereumNetwork === \"local\") {\n    const addresses = require(\"./local/addresses.json\");\n\n    configs.network = \"local\";\n\n    // Override addresses\n    configs.v2contractsAddressesOverride.subscriptionContract =\n      addresses.subscriptions;\n    configs.v2contractsAddressesOverride.erc20Contract = addresses.erc20;\n    configs.v2contractsAddressesOverride.monthlySubscriptionPlanDeployedInstance =\n      addresses.monthlySubscriptionPlanDeployedInstance;\n  }\n}\n\nexport default configs;\n","import { blue } from \"@material-ui/core/colors\";\nimport responsiveFontSizes from \"@material-ui/core/styles/responsiveFontSizes\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\n\nconst COLOR1 = \"#0D0D0D\"; // dark gray\nconst COLOR2 = \"#6ec6d8\"; // bluish\nconst COLOR3 = \"#03FCF5\"; // bright bluish- Tetra\n\n// const PRIMARY_TEXT = '#dbdbdb';\nconst PRIMARY_TEXT = \"#dbdbdb\";\nconst SECONDARY_TEXT = \"#7B7B7B\";\n\nexport const HEADER_HEIGHT_REM = 6;\n\nexport const baseTheme = responsiveFontSizes(\n  createMuiTheme({\n    palette: {\n      // TODO : Adjust all styles after structure is done\n      type: \"dark\",\n      primary: { main: \"#09142c\" },\n      secondary: { main: \"#74f6fd\" },\n      background: {\n        default: \"#0a0f25\",\n        // paper: \"#192a45\",\n        paper: \"#09142c\",\n      },\n    },\n    typography: {\n      // fontFamily: 'Montserrat',\n    },\n    overrides: {\n      MuiPaper: {\n        root: {\n          // backgroundColor: COLOR1,\n        },\n      },\n      MuiTypography: {\n        colorPrimary: {\n          // color: PRIMARY_TEXT,\n        },\n      },\n      MuiLink: {\n        root: {\n          // color: blue[500],\n        },\n      },\n    },\n  })\n);\n\nexport const AppStyles = {};\n","import { configure } from \"mobx\";\nimport { IStores } from \"./stores\";\n\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\nimport { OrbsAccountStore } from \"./OrbsAccountStore\";\n\n// This import ensures mobx batching\nimport \"mobx-react-lite/batchingForReactDom\";\nimport {\n  ICryptoWalletConnectionService,\n  IMonthlySubscriptionPlanService,\n  IOrbsTokenService,\n  ISubscriptionsService,\n} from \"@orbs-network/contracts-js\";\n\n/**\n * Builds and initializes all of the stores\n */\nexport function getStores(\n  cryptoWalletConnectionService: ICryptoWalletConnectionService,\n  subscriptionService: ISubscriptionsService,\n  orbsTokenService: IOrbsTokenService,\n  monthlySubscriptionPlanService: IMonthlySubscriptionPlanService\n): IStores {\n  // Create stores instances + Hydrate the stores\n  const cryptoWalletIntegrationStore = new CryptoWalletConnectionStore(\n    cryptoWalletConnectionService\n  );\n  const orbsAccountStore = new OrbsAccountStore(\n    cryptoWalletIntegrationStore,\n    orbsTokenService,\n    monthlySubscriptionPlanService,\n    subscriptionService\n  );\n\n  const stores: IStores = {\n    cryptoWalletIntegrationStore,\n    orbsAccountStore,\n  };\n\n  return stores;\n}\n\n/**\n * Configures the mobx library. Should get called at App's initialization.\n */\nexport function configureMobx() {\n  configure({\n    enforceActions: \"observed\",\n  });\n}\n","import React from \"react\";\nimport { configureMobx, getStores } from \"./store/storesInitialization\";\nimport { buildServices } from \"./services/Services\";\nimport { Provider } from \"mobx-react\";\nimport {\n  makeStyles,\n  StylesProvider,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport { baseTheme } from \"./theme/Theme\";\nimport { SnackbarProvider } from \"notistack\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport configs from \"./configs\";\n\ninterface IProps {\n  appComponent: React.ReactNode;\n}\n\nconfigureMobx();\n\nconst useStyles = makeStyles((theme) => ({\n  snackbarInfo: {\n    backgroundColor: baseTheme.palette.primary.dark,\n    color: theme.palette.getContrastText(baseTheme.palette.primary.dark),\n  },\n}));\n\nconst ethereumProvider = (window as any).ethereum;\nconst services = buildServices(ethereumProvider);\nconst stores = getStores(\n  services.cryptoWalletIntegrationService,\n  services.subscriptionsService,\n  services.orbsTokenService,\n  services.monthlySubscriptionPlanService\n);\n\nexport const AppWrapper = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { children, appComponent } = props;\n  return (\n    <>\n      <Router>\n        <Provider {...stores} {...services}>\n          <StylesProvider injectFirst>\n            <ThemeProvider theme={baseTheme}>\n              <SnackbarProvider\n                maxSnack={3}\n                classes={{ variantInfo: classes.snackbarInfo }}\n              >\n                {appComponent}\n                <CssBaseline />\n              </SnackbarProvider>\n            </ThemeProvider>\n          </StylesProvider>\n        </Provider>\n      </Router>\n    </>\n  );\n});\n","import Web3 from \"web3\";\nimport configs from \"../configs\";\nimport {\n  CryptoWalletConnectionService,\n  ICryptoWalletConnectionService,\n  IEthereumProvider,\n  IMonthlySubscriptionPlanService,\n  IOrbsTokenService,\n  ISubscriptionsService,\n  MonthlySubscriptionPlanService,\n  OrbsTokenService,\n  SubscriptionsService,\n} from \"@orbs-network/contracts-js\";\n\nexport interface IServices {\n  cryptoWalletIntegrationService: ICryptoWalletConnectionService;\n  subscriptionsService: ISubscriptionsService;\n  orbsTokenService: IOrbsTokenService;\n  monthlySubscriptionPlanService: IMonthlySubscriptionPlanService;\n}\n\n// DEV_NOTE : For simplicity of early stage dev, we assume that we have ethereum provider, if not, we will not initialize the services.\nexport function buildServices(ethereumProvider: IEthereumProvider): IServices {\n  let web3: Web3;\n\n  if (ethereumProvider) {\n    web3 = new Web3(ethereumProvider as any);\n  } else {\n    web3 = new Web3(\n      new Web3.providers.WebsocketProvider(configs.ETHEREUM_PROVIDER_WS)\n    );\n  }\n\n  return {\n    cryptoWalletIntegrationService: new CryptoWalletConnectionService(\n      ethereumProvider\n    ),\n    subscriptionsService: new SubscriptionsService(\n      web3,\n      configs.v2contractsAddressesOverride.subscriptionContract\n    ),\n    orbsTokenService: new OrbsTokenService(\n      web3,\n      configs.v2contractsAddressesOverride.erc20Contract\n    ),\n    monthlySubscriptionPlanService: new MonthlySubscriptionPlanService(\n      web3,\n      configs.v2contractsAddressesOverride.monthlySubscriptionPlanDeployedInstance\n    ),\n  };\n}\n","import { useMemo } from \"react\";\n\nconst links = [\n  { translationKey: \"New Virtual Chain\", url: \"/new_vc\" },\n  { translationKey: \"Existing Virtual Chain\", url: \"/existing_vc\" },\n  // { translationKey: \"Recover Virtual Chain\", url: \"/recover_vc\" },\n];\n\nexport type TLinkDescriptor = {\n  label: string;\n  url: string;\n};\n\nexport const useLinkDescriptors = () => {\n  const linkDescriptors = useMemo<TLinkDescriptor[]>(() => {\n    return links.map((link) => ({\n      // TODO : O.L : Add translations\n      url: link.url,\n      label: link.translationKey,\n    }));\n  }, []);\n\n  return linkDescriptors;\n};\n","import React, { createRef, useCallback, useMemo, useRef } from \"react\";\nimport {\n  Button,\n  IconButton,\n  Menu,\n  MenuItem,\n  Popover,\n  Typography,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport { NavLink } from \"react-router-dom\";\nimport { HOVER_COLOR } from \"./Header\";\nimport { useLinkDescriptors } from \"./links\";\nimport { useBoolean } from \"react-hanger\";\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    // marginRight: theme.spacing(2),\n  },\n  typography: {\n    padding: theme.spacing(2),\n  },\n  link: {\n    width: \"100%\",\n    color: \"#ffffffb3\",\n    // marginLeft: 30,\n    transition: \"color 0.4s ease-in-out\",\n    \"&:hover\": {\n      color: HOVER_COLOR,\n    },\n  },\n}));\n\nexport const MenuPopup = React.memo((props) => {\n  const classes = useStyles();\n  const linkDescriptors = useLinkDescriptors();\n  console.log(\"Render menu\");\n\n  const { setFalse, setTrue, value } = useBoolean(false);\n\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setTrue();\n      setAnchorEl(event.currentTarget);\n    },\n    [setTrue]\n  );\n\n  const handleClose = useCallback(() => {\n    setFalse();\n    setAnchorEl(null);\n  }, [setFalse]);\n\n  const menuItemLinks = useMemo(() => {\n    return linkDescriptors.map(({ label, url }, idx) => (\n      <MenuItem onClick={() => undefined} key={label + url}>\n        <Link\n          onClick={setFalse}\n          // @ts-ignore\n          component={NavLink}\n          key={idx}\n          exact={true}\n          className={classes.link}\n          activeStyle={{ color: HOVER_COLOR }}\n          underline=\"none\"\n          to={url}\n          variant=\"h6\"\n          noWrap\n        >\n          {label}\n        </Link>\n      </MenuItem>\n    ));\n  }, [classes.link, linkDescriptors, setFalse]);\n\n  const id = value ? \"links-popover-menu\" : undefined;\n\n  return (\n    <div>\n      <IconButton\n        onClick={handleClick}\n        className={classes.menuButton}\n        color=\"inherit\"\n        aria-label=\"menu\"\n      >\n        <MenuIcon />\n      </IconButton>\n      {/* TODO : O.L : Think about using 'Menu' instead of 'Popover' */}\n      <Popover\n        id={id}\n        open={value}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        {menuItemLinks}\n      </Popover>\n    </div>\n  );\n});\n","/**\n * Copyright 2019 the orbs-ethereum-contracts authors\n * This file is part of the orbs-ethereum-contracts library in the Orbs project.\n *\n * This source code is licensed under the MIT license found in the LICENSE file in the root directory of this source tree.\n * The above notice should be included in all copies or substantial portions of the software.\n */\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport logo from \"./logo-white.svg\";\nimport {\n  Button,\n  IconButton,\n  Typography,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { MenuPopup } from \"./MenuPopup\";\nimport { useLinkDescriptors } from \"./links\";\nimport { HEADER_HEIGHT_REM } from \"../../../theme/Theme\";\nimport configs from \"../../../configs\";\n\nexport const HOVER_COLOR = \"#16faff\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    height: `${HEADER_HEIGHT_REM}rem`,\n    paddingTop: \"0.5rem\",\n    paddingBottom: \"0.5rem\",\n    boxSizing: \"border-box\",\n    // height: `${HEADER_HEIGHT_REM}rem`,\n    zIndex: theme.zIndex.drawer + 1,\n    // padding: `${theme.spacing(2)}px ${theme.spacing(8)}px`,\n    padding: theme.spacing(1),\n  },\n  logo: {\n    width: 70,\n  },\n  nav: {\n    display: \"inherit\",\n    flexWrap: \"wrap\",\n  },\n  toolbar: {\n    paddingRight: 0,\n    paddingLeft: 0,\n    // marginRight: 'auto',\n    // marginLeft: 'auto',\n    margin: \"auto\",\n    width: \"90%\",\n    maxWidth: \"90%\",\n    justifyContent: \"space-between\",\n  },\n  headerButtonsContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    margin: \"auto\",\n    width: \"90%\",\n    maxWidth: \"90%\",\n  },\n  displayInMetamaskButton: {\n    marginRight: `${theme.spacing(3)}px`,\n  },\n  movedDown: {\n    paddingTop: 48,\n  },\n  link: {\n    color: \"#ffffffb3\",\n    marginLeft: 30,\n    transition: \"color 0.4s ease-in-out\",\n    \"&:hover\": {\n      color: HOVER_COLOR,\n    },\n  },\n}));\n\n// TODO : O.L : Fix the snackbar hiding the header\nexport const Header = React.memo((props) => {\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const smallerThanSmall = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const linkDescriptors = useLinkDescriptors();\n\n  // C.F.H : add proper menu for smaller screens\n\n  const menuLinks = useMemo(() => {\n    return linkDescriptors.map(({ label, url }, idx) => (\n      <Link\n        // @ts-ignore\n        component={NavLink}\n        key={idx}\n        exact={true}\n        className={classes.link}\n        activeStyle={{ color: HOVER_COLOR }}\n        underline=\"none\"\n        to={url}\n        variant=\"h6\"\n        noWrap\n      >\n        {label}\n      </Link>\n    ));\n  }, [classes.link, linkDescriptors]);\n\n  const menu = useMemo(() => {\n    if (smallerThanSmall) {\n      return <MenuPopup />;\n    } else {\n      return <nav className={classes.nav}>{menuLinks}</nav>;\n    }\n  }, [classes.nav, menuLinks, smallerThanSmall]);\n\n  // TODO : Fix display with title\n  return (\n    <AppBar position=\"fixed\" data-testid=\"header\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <NavLink to=\"/\">\n          <img className={classes.logo} src={logo} alt=\"Orbs\" />\n        </NavLink>\n        {/*<Typography variant={\"h4\"}>VC Console</Typography>*/}\n        {menu}\n      </Toolbar>\n    </AppBar>\n  );\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    height: \"100%\",\n    width: \"fit-content\",\n    maxWidth: \"100%\",\n    boxSizing: \"border-box\",\n    paddingBottom: \"2em\",\n  },\n}));\n\nexport const Page = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { children } = props;\n  return <div className={classes.page}>{children}</div>;\n});\n","import React, { DetailedHTMLProps } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {}\nconst useStyles = makeStyles((theme) => ({\n  contentFitter: {\n    height: \"100%\",\n    width: \"fit-content\",\n    maxWidth: \"100%\",\n  },\n}));\n\nexport const ContentFitting = React.memo<\n  IProps &\n    DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\n>((props) => {\n  const classes = useStyles();\n  const { children, ...others } = props;\n  return (\n    <div className={classes.contentFitter} {...others}>\n      {children}\n    </div>\n  );\n});\n","import React, { useCallback, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  TextField,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSnackbar } from \"notistack\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport {\n  MONTHLY_SUBSCRIPTION_PLAN_SERVICE_CONSTANTS,\n  TVirtualChainSubscriptionPayload,\n} from \"@orbs-network/contracts-js\";\n\ninterface IProps {\n  // Form action\n  subscribeNewVC: (\n    virtualChainSubscriptionPayload: TVirtualChainSubscriptionPayload\n  ) => Promise<void>;\n  setMSPContractAllowance: (allowanceInFullOrbs: number) => void;\n\n  // Form parameters\n  monthlyRateInFullOrbs: number;\n\n  // Orbs account\n  allowanceToMSPContract: number;\n\n  // Activation flags\n  disableActionButtons?: boolean;\n}\n\ntype TFormData = {\n  name: string;\n  runOnlyOnCertifiedValidators: boolean;\n  runOnCanary: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    \"& label.Mui-focused\": {\n      color: \"#f5f5f5\",\n    },\n  },\n\n  phaseInstructionLabel: {\n    width: \"max-content\",\n    marginBottom: \"0.5rem\",\n    paddingBottom: \"0.1rem\",\n    // textDecoration: \"underline\",\n    // borderBottom: \"1px solid\",\n  },\n\n  // DEV_NOTE : O.L : For now, we give 100% to enusre united width labels with texts and icons,\n  //                  If this breaks, fix this.\n  forControlLabel: {\n    width: \"100%\",\n    \"& .MuiFormControlLabel-label\": {\n      width: \"100%\",\n    },\n  },\n\n  checkBoxes: {},\n\n  typographyAnimated: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: 0,\n    visibility: \"hidden\",\n  },\n\n  typographyAnimatedShow: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: \"100%\",\n    visibility: \"visible\",\n  },\n\n  actionButton: {\n    transition: \"background-color 0.4s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.getContrastText(theme.palette.secondary.light),\n    },\n  },\n}));\n\nexport const VirtualChainSubscriptionForm = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    subscribeNewVC,\n    disableActionButtons,\n    allowanceToMSPContract,\n    setMSPContractAllowance,\n  } = props;\n\n  const { monthlyRateInFullOrbs } = props;\n\n  // TODO : O.L : Move this and provide as prop.\n  const { enqueueSnackbar } = useSnackbar();\n  // DEV_NOTE : This flag is used to display a message about sufficient/insufficient allowance.\n  const [planOptionChanged, setPlanOptionChanged] = useState(false);\n  const [name, setName] = useState<string>(\"\");\n  const [monthsToPayForInAdvance, setMonthsToPayForInAdvance] = useState<\n    number\n  >(1);\n  const [runOnCertifiedOnly, setRunOnCertifiedOnly] = useState<boolean>(false);\n  const [runOnCanary, setRunOnCanary] = useState<boolean>(false);\n\n  const { register, handleSubmit, errors } = useForm<TFormData>();\n\n  const currentCostOfPlan = monthsToPayForInAdvance * monthlyRateInFullOrbs;\n  const hasEnoughAllowance = allowanceToMSPContract >= currentCostOfPlan;\n\n  const submit = useCallback(\n    (formData: TFormData) => {\n      if (!hasEnoughAllowance) {\n        enqueueSnackbar(\n          \"Before creating a new VC, please approve usage of your ORBS\",\n          { variant: \"info\", preventDuplicate: true }\n        );\n        return;\n      }\n\n      const { deploymentSubsets } = MONTHLY_SUBSCRIPTION_PLAN_SERVICE_CONSTANTS;\n\n      const virtualChainSubscriptionPayload: TVirtualChainSubscriptionPayload = {\n        name: formData.name,\n        amountInFullOrbs: currentCostOfPlan,\n\n        deploymentSubset: formData.runOnCanary\n          ? deploymentSubsets.canary\n          : deploymentSubsets.main,\n        isCertified: formData.runOnlyOnCertifiedValidators,\n      };\n\n      subscribeNewVC(virtualChainSubscriptionPayload);\n    },\n    [currentCostOfPlan, enqueueSnackbar, hasEnoughAllowance, subscribeNewVC]\n  );\n\n  const setAllowance = useCallback(() => {\n    setMSPContractAllowance(currentCostOfPlan);\n  }, [currentCostOfPlan, setMSPContractAllowance]);\n\n  return (\n    <form\n      onSubmit={handleSubmit((formData) => submit(formData))}\n      style={{\n        maxWidth: \"100%\",\n        // width: \"100%\",\n        width: \"60ch\",\n      }}\n    >\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        1) Fill in your VC details\n      </Typography>\n      {/* Name */}\n      <TextField\n        autoComplete={\"off\"}\n        InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n        name={\"name\"}\n        label={\"VC name\"}\n        title={\"\"}\n        variant={\"outlined\"}\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        required\n        inputRef={register}\n        fullWidth\n        className={classes.textField}\n      />\n      <br />\n      <br />\n      {/* Subscription length */}\n      <TextField\n        select\n        SelectProps={{ native: true }}\n        // InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n        name={\"subscriptionOption\"}\n        label={\"Initial Subscription\"}\n        title={\"\"}\n        variant={\"outlined\"}\n        value={monthsToPayForInAdvance}\n        onChange={(e) => {\n          setPlanOptionChanged(true);\n          setMonthsToPayForInAdvance(parseInt(e.target.value));\n        }}\n        required\n        inputRef={register}\n        fullWidth\n        className={classes.textField}\n      >\n        {/* TODO : Add proper dynamic values when dealing with the real contract */}\n        <option value={1}>1 month - {monthlyRateInFullOrbs * 1} ORBS</option>\n        <option value={3}>3 months - {monthlyRateInFullOrbs * 3} ORBS</option>\n        <option value={6}>6 months - {monthlyRateInFullOrbs * 6} ORBS</option>\n      </TextField>\n      <br />\n      <br />\n\n      {/* DEV_NOTE : O.L : For now we do not allow advanced configurations */}\n      {/*<FormControlLabel*/}\n      {/*  className={classes.forControlLabel}*/}\n      {/*  control={*/}\n      {/*    <>*/}\n      {/*      <Checkbox*/}\n      {/*        className={classes.checkBoxes}*/}\n      {/*        checked={runOnCertifiedOnly}*/}\n      {/*        onChange={(e) => setRunOnCertifiedOnly(e.target.checked)}*/}\n      {/*        name=\"runOnlyOnCertifiedValidators\"*/}\n      {/*        // color=\"primary\"*/}\n      {/*        inputRef={register}*/}\n      {/*      />*/}\n      {/*    </>*/}\n      {/*  }*/}\n      {/*  label={*/}\n      {/*    <LabelWithIconTooltip*/}\n      {/*      text={\"Run only on identified validators\"}*/}\n      {/*      tooltipText={\"Add content\"}*/}\n      {/*    />*/}\n      {/*  }*/}\n      {/*/>*/}\n      {/*<br />*/}\n\n      <FormControlLabel\n        className={classes.forControlLabel}\n        control={\n          <Checkbox\n            className={classes.checkBoxes}\n            checked={runOnCanary}\n            onChange={(e) => setRunOnCanary(e.target.checked)}\n            name=\"runOnCanary\"\n            // color=\"primary\"\n            inputRef={register}\n          />\n        }\n        label={\n          <LabelWithIconTooltip\n            text={\"Run unstable early releases\"}\n            tooltipText={\"\"}\n          />\n        }\n      />\n      <br />\n      <br />\n\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        2) Allow usage of your ORBS\n      </Typography>\n      <Typography variant={\"caption\"}>\n        Current allowance : {allowanceToMSPContract.toLocaleString()} ORBS |\n        Cost : {currentCostOfPlan.toLocaleString()} ORBS\n      </Typography>\n      <Button\n        className={classes.actionButton}\n        variant={\"outlined\"}\n        fullWidth\n        onClick={setAllowance}\n        disabled={disableActionButtons || hasEnoughAllowance}\n        startIcon={hasEnoughAllowance ? <CheckIcon /> : null}\n      >\n        {hasEnoughAllowance\n          ? \"Sufficient allowance\"\n          : \"Approve usage of your ORBS\"}\n      </Button>\n      <br />\n      <br />\n\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        3) Create your new Virtual chain\n      </Typography>\n      <Button\n        className={classes.actionButton}\n        variant={\"outlined\"}\n        fullWidth\n        type={\"submit\"}\n        disabled={disableActionButtons}\n      >\n        Create new VC\n      </Button>\n    </form>\n  );\n});\n\nconst LabelWithIconTooltip = React.memo(\n  (props: { text: String; tooltipText: string }) => {\n    const { text, tooltipText } = props;\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {text}\n        <Tooltip title={tooltipText}>\n          <HelpOutlineIcon style={{ marginInlineStart: \"0.5rem\" }} />\n        </Tooltip>\n      </div>\n    );\n  }\n);\n","import React from \"react\";\nimport { IServices } from \"./Services\";\nimport { MobXProviderContext } from \"mobx-react\";\nimport {\n  ICryptoWalletConnectionService,\n  IMonthlySubscriptionPlanService,\n  ISubscriptionsService,\n} from \"@orbs-network/contracts-js\";\n\nexport function useServices(): IServices {\n  const services = React.useContext(MobXProviderContext) as IServices;\n\n  if (!services) {\n    throw new Error(\"Tried to use services before initialising them\");\n  }\n\n  return services;\n}\n\nexport function useCryptoWalletConnectionService(): ICryptoWalletConnectionService {\n  return useServices().cryptoWalletIntegrationService;\n}\n\nexport function useSubscriptionsService(): ISubscriptionsService {\n  return useServices().subscriptionsService;\n}\n\nexport function useMonthlySubscriptionPlanService(): IMonthlySubscriptionPlanService {\n  return useServices().monthlySubscriptionPlanService;\n}\n","import React from \"react\";\nimport { MobXProviderContext } from \"mobx-react\";\nimport { IStores } from \"./stores\";\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\nimport { OrbsAccountStore } from \"./OrbsAccountStore\";\n\nexport function useStores(): IStores {\n  // @ts-ignore\n  return React.useContext(MobXProviderContext);\n}\n\nexport function useCryptoWalletIntegrationStore(): CryptoWalletConnectionStore {\n  return useStores().cryptoWalletIntegrationStore;\n}\n\nexport function useOrbsAccountStore(): OrbsAccountStore {\n  return useStores().orbsAccountStore;\n}\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\ninterface IProps {\n  // Dialog\n  open: boolean;\n  // handleClose: () => void;\n  onAccept: () => void;\n  onCancel: () => void;\n\n  // Content\n  title: string;\n  contentText: string;\n  acceptText?: string;\n  cancelText?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  dialogPaper: {\n    \"& .MuiDialog-paper\": {\n      border: `4px double ${theme.palette.secondary.main}`,\n      boxShadow: \"none\",\n    },\n  },\n}));\n\nexport const ActionConfirmationModal = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    open,\n    onAccept,\n    onCancel,\n    // handleClose,\n    title,\n    contentText,\n    acceptText,\n    cancelText,\n  } = props;\n  const theme = useTheme();\n  // const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const fullScreen = false;\n\n  return (\n    <Dialog\n      className={classes.dialogPaper}\n      fullScreen={fullScreen}\n      open={open}\n      onClose={onCancel}\n      aria-labelledby=\"action-confirmation-dialog\"\n      maxWidth={\"xs\"}\n      style={{}}\n    >\n      <DialogTitle id=\"action-confirmation-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{contentText}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          autoFocus\n          onClick={onCancel}\n          color=\"secondary\"\n          variant={\"contained\"}\n        >\n          {cancelText || \"Cancel\"}\n        </Button>\n        <Button\n          onClick={onAccept}\n          color=\"secondary\"\n          autoFocus\n          variant={\"contained\"}\n        >\n          {acceptText || \"Accept\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n});\n","export const ROUTES = {\n  newVc: \"/new_vc\",\n  existingVc: \"/existing_vc\",\n  recoverVc: \"/recover_vc\",\n  vcCreated: \"/vc_created\",\n  vcExtended: \"/vc_extended\",\n};\n","import React, { useCallback, useState } from \"react\";\nimport { Page } from \"../components/structure/Page\";\nimport { ContentFitting } from \"../components/structure/ContentFitting\";\nimport { VirtualChainSubscriptionForm } from \"../components/forms/VirtualChainSubscriptionForm\";\nimport { useMonthlySubscriptionPlanService } from \"../services/servicesHooks\";\nimport { useOrbsAccountStore } from \"../store/storeHooks\";\nimport { weiOrbsFromFullOrbs } from \"../cryptoUtils/unitConverter\";\nimport { ActionConfirmationModal } from \"../components/modals/ActionConfirmationModal\";\nimport { useSnackbar } from \"notistack\";\nimport { observer } from \"mobx-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ROUTES } from \"../constants/routes\";\nimport { TVirtualChainSubscriptionPayload } from \"@orbs-network/contracts-js\";\n\ninterface IProps {}\n\nexport const NewVCPage = observer<React.FunctionComponent<IProps>>((props) => {\n  const orbsAccountStore = useOrbsAccountStore();\n  const history = useHistory();\n  const [runningTx, setRunningTx] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [dialogTexts, setDialogTexts] = useState<{\n    title: string;\n    content: string;\n    acceptText?: string;\n    cancelText?: string;\n    onCancelMessage?: string;\n  }>({ title: \"\", content: \"\" });\n  const [onDialogAccept, setOnDialogAccept] = useState(() => () =>\n    console.log(\"Accepted\")\n  );\n\n  const monthlySubscriptionPlanService = useMonthlySubscriptionPlanService();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const setMSPContractAllowance = useCallback(\n    (allowanceInFullOrbs: number) => {\n      orbsAccountStore.setAllowanceForStakingContract(\n        weiOrbsFromFullOrbs(allowanceInFullOrbs)\n      );\n    },\n    [orbsAccountStore]\n  );\n\n  const createNewVc = useCallback(\n    async (\n      virtualChainSubscriptionPayload: TVirtualChainSubscriptionPayload\n    ) => {\n      try {\n        const vcId = await orbsAccountStore.createNewVc(\n          virtualChainSubscriptionPayload\n        );\n        enqueueSnackbar(\"VC Created !\", { variant: \"success\" });\n\n        history.push(`${ROUTES.vcCreated}/${vcId}`);\n      } catch (e) {\n        console.log(e);\n        enqueueSnackbar(`TX Error !`, { variant: \"error\" });\n      }\n    },\n    [enqueueSnackbar, history, orbsAccountStore]\n  );\n\n  const showCreateVcDialog = useCallback(\n    async (\n      virtualChainSubscriptionPayload: TVirtualChainSubscriptionPayload\n    ) => {\n      console.log(virtualChainSubscriptionPayload);\n      setDialogTexts({\n        title: `Create new virtual chain ${virtualChainSubscriptionPayload.name}`,\n        content: 'Please click \"Create\" and accept the transaction.',\n        acceptText: \"Create\",\n        onCancelMessage: \"VC creation canceled\",\n      });\n      setShowModal(true);\n      setOnDialogAccept(() => () =>\n        createNewVc(virtualChainSubscriptionPayload)\n      );\n\n      try {\n        // const res = await monthlySubscriptionPlanService.createANewVC(\n        //   virtualChainSubscriptionPayload\n        // );\n        // console.log(res);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [createNewVc]\n  );\n\n  const showSetMSPContractAllowanceDialog = useCallback(\n    (allowanceInFullOrbs: number) => {\n      setDialogTexts({\n        title: `Set allowance of ${allowanceInFullOrbs} ORBS`,\n        content: 'Please click \"Allow\" and accept the transaction.',\n        acceptText: \"Allow\",\n        onCancelMessage: \"Action canceled\",\n      });\n      setShowModal(true);\n      setOnDialogAccept(() => () =>\n        setMSPContractAllowance(allowanceInFullOrbs)\n      );\n    },\n    [setMSPContractAllowance]\n  );\n\n  return (\n    <Page>\n      <ContentFitting>\n        {/*<VirtualChainSubscription*/}\n        {/*  web3={{} as Web3}*/}\n        {/*  config={configs}*/}\n        {/*  virtualChainId=\"0x0000000000000000000000000000000000000000000000000000000000000001\"*/}\n        {/*  buttonLabel=\"Create\"*/}\n        {/*  subscriptionLabel=\"Initial subscription\"*/}\n        {/*/>*/}\n        <VirtualChainSubscriptionForm\n          subscribeNewVC={showCreateVcDialog}\n          allowanceToMSPContract={orbsAccountStore.allowanceToMSPContract}\n          setMSPContractAllowance={showSetMSPContractAllowanceDialog}\n          monthlyRateInFullOrbs={\n            orbsAccountStore.mspContractParameters.monthlyRateInFullOrbs\n          }\n        />\n        <ActionConfirmationModal\n          open={showModal}\n          onAccept={() => {\n            setShowModal(false);\n            onDialogAccept();\n          }}\n          onCancel={() => {\n            setShowModal(false);\n            if (dialogTexts.onCancelMessage) {\n              enqueueSnackbar(dialogTexts.onCancelMessage, {\n                variant: \"info\",\n                preventDuplicate: true,\n              });\n            }\n          }}\n          title={dialogTexts.title}\n          contentText={dialogTexts.content}\n        />\n      </ContentFitting>\n    </Page>\n  );\n});\n","import React, { useCallback, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\ninterface IProps {\n  // Form action\n  onActionClick: (vcId: string) => void;\n\n  // Texts\n  actionButtonText?: string;\n}\n\ntype TFormData = {\n  vcId: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    \"& label.Mui-focused\": {\n      color: \"#f5f5f5\",\n    },\n  },\n\n  phaseInstructionLabel: {\n    width: \"max-content\",\n    marginBottom: \"0.5rem\",\n    paddingBottom: \"0.1rem\",\n    // textDecoration: \"underline\",\n    // borderBottom: \"1px solid\",\n  },\n\n  // DEV_NOTE : O.L : For now, we give 100% to enusre united width labels with texts and icons,\n  //                  If this breaks, fix this.\n  forControlLabel: {\n    width: \"100%\",\n    \"& .MuiFormControlLabel-label\": {\n      width: \"100%\",\n    },\n  },\n\n  checkBoxes: {},\n\n  typographyAnimated: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: 0,\n    visibility: \"hidden\",\n  },\n\n  typographyAnimatedShow: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: \"100%\",\n    visibility: \"visible\",\n  },\n\n  actionButton: {\n    transition: \"background-color 0.4s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.getContrastText(theme.palette.secondary.light),\n    },\n  },\n}));\n\nexport const VcIdForm = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { actionButtonText, onActionClick } = props;\n\n  const [vcId, setVcId] = useState<string>(\"\");\n\n  const { register, handleSubmit, errors } = useForm<TFormData>();\n\n  const submit = useCallback(\n    (formData: TFormData) => {\n      onActionClick(formData.vcId);\n    },\n    [onActionClick]\n  );\n\n  return (\n    <form\n      onSubmit={handleSubmit((formData) => submit(formData))}\n      style={{\n        maxWidth: \"100%\",\n        // width: \"100%\",\n        width: \"60ch\",\n      }}\n    >\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        Please enter your VC Id\n      </Typography>\n      {/* Name */}\n      <TextField\n        autoComplete={\"off\"}\n        InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n        name={\"vcId\"}\n        label={\"Virtual chain ID\"}\n        title={\"\"}\n        variant={\"outlined\"}\n        value={vcId}\n        onChange={(e) => setVcId(e.target.value)}\n        required\n        inputRef={register}\n        fullWidth\n        className={classes.textField}\n      />\n      <br />\n      <br />\n\n      <Button\n        className={classes.actionButton}\n        variant={\"outlined\"}\n        fullWidth\n        type={\"submit\"}\n      >\n        {actionButtonText}\n      </Button>\n    </form>\n  );\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Moment from \"moment\";\n\ninterface IProps {\n  vcId: string;\n  vcName: string;\n  deploymentSubset: string;\n  paidUntil: number;\n}\n\ntype TFormData = {\n  name: string;\n  runOnlyOnCertifiedValidators: boolean;\n  runOnCanary: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    \"& label.Mui-focused\": {\n      color: \"#f5f5f5\",\n    },\n  },\n\n  phaseInstructionLabel: {\n    width: \"max-content\",\n    marginBottom: \"0.5rem\",\n    paddingBottom: \"0.1rem\",\n    // textDecoration: \"underline\",\n    // borderBottom: \"1px solid\",\n  },\n\n  // DEV_NOTE : O.L : For now, we give 100% to enusre united width labels with texts and icons,\n  //                  If this breaks, fix this.\n  forControlLabel: {\n    width: \"100%\",\n    \"& .MuiFormControlLabel-label\": {\n      width: \"100%\",\n    },\n  },\n\n  checkBoxes: {},\n\n  typographyAnimated: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: 0,\n    visibility: \"hidden\",\n  },\n\n  typographyAnimatedShow: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: \"100%\",\n    visibility: \"visible\",\n  },\n\n  actionButton: {\n    transition: \"background-color 0.4s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.getContrastText(theme.palette.secondary.light),\n    },\n  },\n}));\n\nexport const VirtualChainDetailsForm = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { paidUntil, vcId, vcName, deploymentSubset } = props;\n\n  console.log({ paidUntil });\n  return (\n    <form\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        maxWidth: \"100%\",\n        // width: \"100%\",\n        width: \"60ch\",\n        textAlign: \"center\",\n      }}\n    >\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"h5\"}\n        color={\"secondary\"}\n      >\n        Virtual chain ID\n      </Typography>\n      <Typography className={classes.phaseInstructionLabel} variant={\"h6\"}>\n        {vcId}\n      </Typography>\n\n      {/* Name */}\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"h5\"}\n        color={\"secondary\"}\n      >\n        Virtual chain Name\n      </Typography>\n      <Typography className={classes.phaseInstructionLabel} variant={\"h6\"}>\n        {vcName}\n      </Typography>\n\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"h5\"}\n        color={\"secondary\"}\n      >\n        Deployment Subset\n      </Typography>\n      <Typography className={classes.phaseInstructionLabel} variant={\"h6\"}>\n        {deploymentSubset}\n      </Typography>\n\n      {/* Payment */}\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"h5\"}\n        color={\"secondary\"}\n      >\n        Paid Until\n      </Typography>\n      <Typography className={classes.phaseInstructionLabel} variant={\"h6\"}>\n        {Moment.unix(paidUntil).format(\"MMM DD, YYYY\")}\n      </Typography>\n    </form>\n  );\n});\n","import React, { useCallback, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSnackbar } from \"notistack\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\ninterface IProps {\n  // Form action\n  extendVcSubscription: (amount: number) => Promise<void>;\n  setMSPContractAllowance: (allowanceInFullOrbs: number) => void;\n\n  // Form parameters\n  monthlyRateInFullOrbs: number;\n\n  // Orbs account\n  allowanceToMSPContract: number;\n\n  // Activation flags\n  disableActionButtons?: boolean;\n}\n\ntype TFormData = {\n  name: string;\n  runOnlyOnCertifiedValidators: boolean;\n  runOnCanary: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    \"& label.Mui-focused\": {\n      color: \"#f5f5f5\",\n    },\n  },\n\n  phaseInstructionLabel: {\n    width: \"max-content\",\n    marginBottom: \"0.5rem\",\n    paddingBottom: \"0.1rem\",\n    // textDecoration: \"underline\",\n    // borderBottom: \"1px solid\",\n  },\n\n  // DEV_NOTE : O.L : For now, we give 100% to enusre united width labels with texts and icons,\n  //                  If this breaks, fix this.\n  forControlLabel: {\n    width: \"100%\",\n    \"& .MuiFormControlLabel-label\": {\n      width: \"100%\",\n    },\n  },\n\n  checkBoxes: {},\n\n  typographyAnimated: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: 0,\n    visibility: \"hidden\",\n  },\n\n  typographyAnimatedShow: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: \"100%\",\n    visibility: \"visible\",\n  },\n\n  actionButton: {\n    transition: \"background-color 0.4s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.getContrastText(theme.palette.secondary.light),\n    },\n  },\n}));\n\nexport const VcSubscriptionExtensionForm = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    extendVcSubscription,\n    disableActionButtons,\n    allowanceToMSPContract,\n    setMSPContractAllowance,\n  } = props;\n\n  const { monthlyRateInFullOrbs } = props;\n\n  // TODO : O.L : Move this and provide as prop.\n  const { enqueueSnackbar } = useSnackbar();\n  // DEV_NOTE : This flag is used to display a message about sufficient/insufficient allowance.\n  const [planOptionChanged, setPlanOptionChanged] = useState(false);\n  const [name, setName] = useState<string>(\"\");\n  const [monthsToPayForInAdvance, setMonthsToPayForInAdvance] = useState<\n    number\n  >(1);\n  const [runOnCertifiedOnly, setRunOnCertifiedOnly] = useState<boolean>(false);\n  const [runOnCanary, setRunOnCanary] = useState<boolean>(false);\n\n  const { register, handleSubmit, errors } = useForm<TFormData>();\n\n  const currentCostOfPlan = monthsToPayForInAdvance * monthlyRateInFullOrbs;\n  const hasEnoughAllowance = allowanceToMSPContract >= currentCostOfPlan;\n\n  const submit = useCallback(\n    (formData: TFormData) => {\n      if (!hasEnoughAllowance) {\n        enqueueSnackbar(\n          \"Before extending your VC subscription, please approve usage of your ORBS\",\n          { variant: \"info\", preventDuplicate: true }\n        );\n        return;\n      }\n\n      extendVcSubscription(currentCostOfPlan);\n    },\n    [\n      hasEnoughAllowance,\n      currentCostOfPlan,\n      extendVcSubscription,\n      enqueueSnackbar,\n    ]\n  );\n\n  const setAllowance = useCallback(() => {\n    setMSPContractAllowance(currentCostOfPlan);\n  }, [currentCostOfPlan, setMSPContractAllowance]);\n\n  return (\n    <form\n      onSubmit={handleSubmit((formData) => submit(formData))}\n      style={{\n        maxWidth: \"100%\",\n        // width: \"100%\",\n        width: \"60ch\",\n      }}\n    >\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        1) Select how many months to extend by\n      </Typography>\n      {/* Subscription length */}\n      <TextField\n        select\n        SelectProps={{ native: true }}\n        // InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n        name={\"subscriptionOption\"}\n        label={\"Initial Subscription\"}\n        title={\"\"}\n        variant={\"outlined\"}\n        value={monthsToPayForInAdvance}\n        onChange={(e) => {\n          setPlanOptionChanged(true);\n          setMonthsToPayForInAdvance(parseInt(e.target.value));\n        }}\n        required\n        inputRef={register}\n        fullWidth\n        className={classes.textField}\n      >\n        {/* TODO : Add proper dynamic values when dealing with the real contract */}\n        <option value={1}>\n          1 month extension - {monthlyRateInFullOrbs * 1} ORBS\n        </option>\n        <option value={3}>\n          3 months extension - {monthlyRateInFullOrbs * 3} ORBS\n        </option>\n        <option value={6}>\n          6 months extension - {monthlyRateInFullOrbs * 6} ORBS\n        </option>\n      </TextField>\n\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        2) Allow usage of your ORBS\n      </Typography>\n      <Typography variant={\"caption\"}>\n        Current allowance : {allowanceToMSPContract}/{currentCostOfPlan}\n      </Typography>\n      <Button\n        className={classes.actionButton}\n        variant={\"outlined\"}\n        fullWidth\n        onClick={setAllowance}\n        disabled={disableActionButtons || hasEnoughAllowance}\n        startIcon={hasEnoughAllowance ? <CheckIcon /> : null}\n      >\n        {hasEnoughAllowance\n          ? \"Sufficient allowance\"\n          : \"Approve usage of your ORBS\"}\n      </Button>\n      <br />\n      <br />\n\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        3) Extend your subscription\n      </Typography>\n      <Button\n        className={classes.actionButton}\n        variant={\"outlined\"}\n        fullWidth\n        type={\"submit\"}\n        disabled={disableActionButtons}\n      >\n        Extend VC subscription\n      </Button>\n    </form>\n  );\n});\n\nconst LabelWithIconTooltip = React.memo(\n  (props: { text: String; tooltipText: string }) => {\n    const { text, tooltipText } = props;\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {text}\n        <Tooltip title={tooltipText}>\n          <HelpOutlineIcon style={{ marginInlineStart: \"0.5rem\" }} />\n        </Tooltip>\n      </div>\n    );\n  }\n);\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useSubscriptionsService } from \"./servicesHooks\";\n\ntype TVcData = {\n  id: string;\n  name: string;\n  deploymentSubset: string;\n  payedUntil: number;\n};\n\ntype TUseVcDataHookResponse = {\n  vcData: TVcData;\n  isLoading: boolean;\n  errorFindingVc: boolean;\n};\n\nexport function useVcDataHook(vcId: string): TUseVcDataHookResponse {\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorFindingVc, setErrorFindingVc] = useState(false);\n  const [vcData, setVcData] = useState<TVcData>({\n    id: \"\",\n    name: \"\",\n    deploymentSubset: \"\",\n    payedUntil: 0,\n  });\n  const subscriptionsService = useSubscriptionsService();\n\n  const readVcData = useCallback(\n    async (id) => {\n      const readVcDataResponse = await subscriptionsService.readVcData(id);\n      const vcData: TVcData = {\n        id,\n        name: readVcDataResponse.name,\n        payedUntil: parseInt(readVcDataResponse.expiresAt),\n        deploymentSubset: readVcDataResponse.deploymentSubset,\n      };\n\n      return vcData;\n    },\n    [subscriptionsService]\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n    setErrorFindingVc(false);\n    readVcData(vcId)\n      .then((vcData) => {\n        setIsLoading(false);\n        setVcData(vcData);\n      })\n      .catch(() => {\n        setIsLoading(false);\n        setErrorFindingVc(true);\n      });\n  }, [readVcData, vcId]);\n\n  return {\n    errorFindingVc,\n    isLoading,\n    vcData,\n  };\n}\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { Page } from \"../components/structure/Page\";\nimport { VcIdForm } from \"../components/forms/VcIdForm\";\nimport { Typography } from \"@material-ui/core\";\nimport { observer } from \"mobx-react\";\nimport { VirtualChainDetailsForm } from \"../components/forms/VirtualChainDetailsForm\";\nimport { useOrbsAccountStore } from \"../store/storeHooks\";\nimport { useSnackbar } from \"notistack\";\nimport { VcSubscriptionExtensionForm } from \"../components/forms/VcSubscriptionExtensionForm\";\nimport { ActionConfirmationModal } from \"../components/modals/ActionConfirmationModal\";\nimport { weiOrbsFromFullOrbs } from \"../cryptoUtils/unitConverter\";\nimport { ROUTES } from \"../constants/routes\";\nimport { useHistory } from \"react-router-dom\";\nimport { useVcDataHook } from \"../services/subscriptionsServiceHooks\";\nimport { TVirtualChainSubscriptionExtensionPayload } from \"@orbs-network/contracts-js\";\nimport { createVerify } from \"crypto\";\n\ninterface IProps {}\n\nexport const ExistingVCPage = observer<React.FunctionComponent<IProps>>(\n  (props) => {\n    const orbsAccountStore = useOrbsAccountStore();\n    const [vcId, setVcId] = useState(\"\");\n    const { enqueueSnackbar } = useSnackbar();\n    const { vcData, errorFindingVc, isLoading } = useVcDataHook(vcId);\n    // console.log({ errorFindingVc });\n    // console.log({ isLoading });\n    // console.log({ vcData });\n    const history = useHistory();\n\n    // TODO : ORL : The whole modal logic is duplicated from 'NewVcPage' - Unite them properly\n    const [showModal, setShowModal] = useState(false);\n    const [onDialogAccept, setOnDialogAccept] = useState(() => () =>\n      console.log(\"Accepted\")\n    );\n    const [dialogTexts, setDialogTexts] = useState<{\n      title: string;\n      content: string;\n      acceptText?: string;\n      cancelText?: string;\n      onCancelMessage?: string;\n    }>({ title: \"\", content: \"\" });\n\n    const onOpenVcClicked = useCallback((vcId: string) => {\n      setVcId(vcId);\n    }, []);\n\n    const setMSPContractAllowance = useCallback(\n      (allowanceInFullOrbs: number) => {\n        orbsAccountStore.setAllowanceForStakingContract(\n          weiOrbsFromFullOrbs(allowanceInFullOrbs)\n        );\n      },\n      [orbsAccountStore]\n    );\n\n    const showSetMSPContractAllowanceDialog = useCallback(\n      (allowanceInFullOrbs: number) => {\n        setDialogTexts({\n          title: `Set allowance of ${allowanceInFullOrbs} ORBS`,\n          content: 'Please click \"Allow\" and accept the transaction.',\n          acceptText: \"Allow\",\n          onCancelMessage: \"Action canceled\",\n        });\n        setShowModal(true);\n        setOnDialogAccept(() => () =>\n          setMSPContractAllowance(allowanceInFullOrbs)\n        );\n      },\n      [setMSPContractAllowance]\n    );\n\n    const extendVcSubscription = useCallback(\n      async (amountInFullOrbs: number) => {\n        const virtualChainSubscriptionExtensionPayload: TVirtualChainSubscriptionExtensionPayload = {\n          amountInFullOrbs,\n          vcId,\n        };\n\n        try {\n          await orbsAccountStore.extendExistingVcSubscription(\n            virtualChainSubscriptionExtensionPayload\n          );\n          enqueueSnackbar(\"Subscription extended !\", { variant: \"success\" });\n          history.push(`${ROUTES.vcExtended}/${vcId}`);\n        } catch (e) {\n          console.error(e);\n          enqueueSnackbar(`TX Error !`, { variant: \"error\" });\n        }\n      },\n      [enqueueSnackbar, history, orbsAccountStore, vcId]\n    );\n\n    const showSelectVcForm = vcId.length === 0;\n\n    const vcContent = useMemo(() => {\n      if (showSelectVcForm) {\n        return null;\n      } else if (isLoading) {\n        return <Typography>Loading...</Typography>;\n      } else if (errorFindingVc) {\n        return (\n          <Typography color={\"error\"}>\n            Error finding Virtual Chain {vcId}\n          </Typography>\n        );\n      } else {\n        return (\n          <>\n            <br />\n            <VirtualChainDetailsForm\n              paidUntil={vcData.payedUntil}\n              vcName={vcData.name}\n              vcId={vcData.id}\n              deploymentSubset={vcData.deploymentSubset}\n            />\n            <VcSubscriptionExtensionForm\n              monthlyRateInFullOrbs={\n                orbsAccountStore.mspContractParameters.monthlyRateInFullOrbs\n              }\n              setMSPContractAllowance={showSetMSPContractAllowanceDialog}\n              allowanceToMSPContract={orbsAccountStore.allowanceToMSPContract}\n              extendVcSubscription={extendVcSubscription}\n            />\n          </>\n        );\n      }\n    }, [\n      errorFindingVc,\n      extendVcSubscription,\n      isLoading,\n      orbsAccountStore.allowanceToMSPContract,\n      orbsAccountStore.mspContractParameters.monthlyRateInFullOrbs,\n      showSelectVcForm,\n      showSetMSPContractAllowanceDialog,\n      vcData.deploymentSubset,\n      vcData.id,\n      vcData.name,\n      vcData.payedUntil,\n      vcId,\n    ]);\n\n    return (\n      <Page>\n        {showSelectVcForm && (\n          <VcIdForm onActionClick={onOpenVcClicked} actionButtonText={\"Open\"} />\n        )}\n        {/*<ExistingVirtualChain web3={{} as Web3} config={configs} />*/}\n        {vcContent}\n        <ActionConfirmationModal\n          open={showModal}\n          onAccept={() => {\n            setShowModal(false);\n            onDialogAccept();\n          }}\n          onCancel={() => {\n            setShowModal(false);\n            if (dialogTexts.onCancelMessage) {\n              enqueueSnackbar(dialogTexts.onCancelMessage, {\n                variant: \"info\",\n                preventDuplicate: true,\n              });\n            }\n          }}\n          title={dialogTexts.title}\n          contentText={dialogTexts.content}\n        />\n      </Page>\n    );\n  }\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { AppWrapper } from \"./AppWrapper\";\nimport App from \"./App\";\nimport { NoEthereumProviderPage } from \"./pages/NoEthereumProviderPage\";\n\nconst hasEthereumProvider = !!(window as any).ethereum;\n\nlet AppComponent;\n\nif (hasEthereumProvider) {\n  AppComponent = <App />;\n} else {\n  AppComponent = <NoEthereumProviderPage />;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWrapper appComponent={AppComponent} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { Page } from \"../components/structure/Page\";\n\ninterface IProps {}\n\nexport const RecoverVCPage = React.memo<IProps>((props) => {\n  return <Page>Recover VC Page</Page>;\n});\n","import React from \"react\";\nimport { ContentFitting } from \"../components/structure/ContentFitting\";\nimport { Page } from \"../components/structure/Page\";\nimport { VirtualChainDetailsForm } from \"../components/forms/VirtualChainDetailsForm\";\nimport { Typography, useTheme } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport { useVcDataHook } from \"../services/subscriptionsServiceHooks\";\n\ninterface IProps {}\n\ntype TRouteParams = {\n  vcId: string;\n};\n\nexport const VcCreationSuccessPage = React.memo<IProps>((props) => {\n  const theme = useTheme();\n\n  const { vcId } = useParams<TRouteParams>();\n  const { vcData, errorFindingVc, isLoading } = useVcDataHook(vcId);\n\n  if (isLoading) {\n    return (\n      <Page>\n        <ContentFitting\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h3\"}\n            style={{ color: theme.palette.error.main }}\n          >\n            Loading...\n          </Typography>\n        </ContentFitting>\n      </Page>\n    );\n  } else if (errorFindingVc) {\n    return (\n      <Page>\n        <ContentFitting\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h3\"}\n            style={{ color: theme.palette.error.main }}\n          >\n            Error finding Virtual chain\n          </Typography>\n          <Typography variant={\"h3\"}>{vcId}</Typography>\n        </ContentFitting>\n      </Page>\n    );\n  }\n\n  // TODO : O.L : Fix the centering of the elements to be more elegant\n\n  return (\n    <Page>\n      <ContentFitting>\n        <div\n          style={{\n            padding: \"0.5rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            textAlign: \"center\",\n            marginRight: \"auto\",\n            marginLeft: \"auto\",\n          }}\n        >\n          <VirtualChainDetailsForm\n            vcId={vcId}\n            vcName={vcData.name}\n            paidUntil={vcData.payedUntil}\n            deploymentSubset={vcData.deploymentSubset}\n          />{\" \"}\n        </div>\n        <div\n          style={{\n            padding: \"0.5rem\",\n            width: \"fit-content\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            textAlign: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h4\"}\n            color={\"secondary\"}\n            style={{ fontWeight: \"bold\" }}\n          >\n            Important:\n          </Typography>\n          <Typography variant={\"h4\"}>\n            Please keep the virtual Chain ID for future use.\n          </Typography>\n        </div>\n      </ContentFitting>\n    </Page>\n  );\n});\n","import React from \"react\";\nimport { ContentFitting } from \"../components/structure/ContentFitting\";\nimport { Page } from \"../components/structure/Page\";\nimport { VirtualChainDetailsForm } from \"../components/forms/VirtualChainDetailsForm\";\nimport { Typography, useTheme } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport { useVcDataHook } from \"../services/subscriptionsServiceHooks\";\n\ninterface IProps {}\n\ntype TRouteParams = {\n  vcId: string;\n};\n\nexport const VcExtensionSuccessPage = React.memo<IProps>((props) => {\n  const theme = useTheme();\n\n  const { vcId } = useParams<TRouteParams>();\n  const { vcData, errorFindingVc, isLoading } = useVcDataHook(vcId);\n\n  if (isLoading) {\n    return (\n      <Page>\n        <ContentFitting\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h3\"}\n            style={{ color: theme.palette.error.main }}\n          >\n            Loading...\n          </Typography>\n        </ContentFitting>\n      </Page>\n    );\n  } else if (errorFindingVc) {\n    return (\n      <Page>\n        <ContentFitting\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h3\"}\n            style={{ color: theme.palette.error.main }}\n          >\n            Error finding Virtual chain\n          </Typography>\n          <Typography variant={\"h3\"}>{vcId}</Typography>\n        </ContentFitting>\n      </Page>\n    );\n  }\n\n  // TODO : O.L : Fix the centering of the elements to be more elegant\n\n  return (\n    <Page>\n      <ContentFitting>\n        <div\n          style={{\n            padding: \"0.5rem\",\n            width: \"fit-content\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            textAlign: \"center\",\n          }}\n        >\n          <Typography variant={\"h4\"}>\n            Vc subscription successfully extended !\n          </Typography>\n        </div>\n        <div\n          style={{\n            padding: \"0.5rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            textAlign: \"center\",\n            marginRight: \"auto\",\n            marginLeft: \"auto\",\n          }}\n        >\n          <VirtualChainDetailsForm\n            vcId={vcId}\n            vcName={vcData.name}\n            paidUntil={vcData.payedUntil}\n            deploymentSubset={vcData.deploymentSubset}\n          />\n        </div>\n      </ContentFitting>\n    </Page>\n  );\n});\n","import React, { DetailedHTMLProps } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {\n  text: string;\n  href?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    color: theme.palette.secondary.light,\n    \"&:hover\": {\n      color: theme.palette.secondary.main,\n    },\n  },\n}));\n\nexport const InTextLink = React.memo<\n  IProps &\n    DetailedHTMLProps<\n      React.AnchorHTMLAttributes<HTMLAnchorElement>,\n      HTMLAnchorElement\n    >\n>((props) => {\n  const classes = useStyles();\n  const { text, href, ...others } = props;\n  return (\n    <a\n      className={classes.link}\n      href={href || \"\"}\n      target={\"_blank\"}\n      rel={\"noopener noreferrer\"}\n      // style={{ display: \"inline\" }}\n      {...others}\n    >\n      {text}\n    </a>\n  );\n});\n","import React from \"react\";\nimport {\n  Button,\n  FormControlLabel,\n  Typography,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport { useBoolean } from \"react-hanger\";\nimport { renderToString } from \"react-dom/server\";\nimport configs from \"../configs\";\nimport { InTextLink } from \"../components/InTextLink\";\nimport { baseTheme } from \"../theme/Theme\";\n\ntype TWalletConnectionPhase = \"install\" | \"connect\";\n\ninterface IProps {\n  walletConnectionPhase: TWalletConnectionPhase;\n  actionFunction: () => void;\n  pressedOnInstall?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  noEthereumProviderSection: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    // justifyContent: \"space-between\",\n    padding: \"2em\",\n    backgroundColor: \"rgba(0,0,0, 0.2)\",\n    borderRadius: \"5%\",\n    // width: \"clamp(20%, 40em, 100%)\",\n    width: \"fit-content\",\n    maxWidth: \"100%\",\n    boxSizing: \"border-box\",\n    // height: \"clamp(max(25%, 200px), 8em, 50%)\",\n  },\n}));\n\nexport const NoEthereumProviderSection = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { walletConnectionPhase, actionFunction, pressedOnInstall } = props;\n\n  const tickerValue = useBoolean(false);\n\n  const shouldDisplayLegalTicker = walletConnectionPhase === \"connect\";\n  const buttonIsEnabled = !shouldDisplayLegalTicker || tickerValue.value;\n\n  const isInstall = walletConnectionPhase === \"install\";\n\n  const titleText = isInstall\n    ? \"No Ethereum provider detected\"\n    : \"Please connect\";\n  const subTitleText = isInstall\n    ? \"you should install MetaMask and refresh the page\"\n    : \"To begin, connect your wallet\";\n  const buttonText =\n    walletConnectionPhase === \"install\" ? \"Install\" : \"Connect\";\n\n  const innerHtmlForLegalAgreement = renderToString(\n    <ThemeProvider theme={baseTheme}>\n      <Typography>\n        I agree to the{\" \"}\n        <InTextLink href={configs.termsOfUseUrl} text={\"Terms of Use\"} /> and{\" \"}\n        <InTextLink href={configs.privacyPolicyUrl} text={\"Privacy Policy\"} />\n      </Typography>\n    </ThemeProvider>\n  );\n\n  return (\n    <div className={classes.noEthereumProviderSection}>\n      <Typography style={{ marginBottom: \"0.5rem\" }} variant={\"h4\"}>\n        {titleText}\n      </Typography>\n      <Typography style={{ marginBottom: \"1rem\" }}>{subTitleText}</Typography>\n      <Button\n        variant={\"outlined\"}\n        onClick={actionFunction}\n        disabled={!buttonIsEnabled}\n      >\n        {buttonText}\n      </Button>\n      {shouldDisplayLegalTicker && (\n        <FormControlLabel\n          style={{\n            marginTop: \"0.5rem\",\n          }}\n          control={\n            <Checkbox\n              checked={tickerValue.value}\n              onChange={(e) => tickerValue.setValue(e.target.checked)}\n              name={\"legalTicker\"}\n            />\n          }\n          label={\n            <Typography\n              // onClick={(e) => e.preventDefault()}\n              dangerouslySetInnerHTML={{ __html: innerHtmlForLegalAgreement }}\n            />\n          }\n        />\n      )}\n    </div>\n  );\n});\n","import React, { useMemo } from \"react\";\nimport \"./App.css\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Header } from \"./components/structure/header/Header\";\nimport { HEADER_HEIGHT_REM } from \"./theme/Theme\";\nimport { Route, RouteProps, Switch } from \"react-router-dom\";\nimport { NewVCPage } from \"./pages/NewVCPage\";\nimport { ExistingVCPage } from \"./pages/ExistingVCPage\";\nimport { RecoverVCPage } from \"./pages/RecoverVcPage\";\nimport { ROUTES } from \"./constants/routes\";\nimport { VcCreationSuccessPage } from \"./pages/VcCreationSuccessPage\";\nimport { VcExtensionSuccessPage } from \"./pages/VcExtensionSuccessPage\";\nimport { observer } from \"mobx-react\";\nimport { useCryptoWalletIntegrationStore } from \"./store/storeHooks\";\nimport { Page } from \"./components/structure/Page\";\nimport { ContentFitting } from \"./components/structure/ContentFitting\";\nimport { NoEthereumProviderSection } from \"./pages/NoEthereumProviderSection\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  appMain: {\n    height: \"100%\",\n    maxWidth: \"90%\",\n    boxSizing: \"border-box\",\n    padding: theme.spacing(2),\n  },\n\n  headerSeparator: {\n    height: `${HEADER_HEIGHT_REM}rem`,\n  },\n\n  mainWrapper: {\n    backgroundColor: \"#06142e\",\n    backgroundRepeat: \"repeat-y\",\n    backgroundImage:\n      \"url(https://www.orbs.com/wp-content/uploads/2019/02/technology-background1.png)\",\n    backgroundAttachment: \"scroll\",\n    backgroundPosition: \"top center\",\n    // minHeight: `calc(100% - ${HEADER_HEIGHT_REM}rem)`,\n    minHeight: `calc(100% - ${HEADER_HEIGHT_REM}rem)`,\n\n    // Center the content\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n}));\n\nconst App = observer(() => {\n  const classes = useStyles();\n\n  const theme = useTheme();\n  console.log(theme.palette.secondary);\n  const cryptoWalletIntegrationStore = useCryptoWalletIntegrationStore();\n\n  const isConnected = cryptoWalletIntegrationStore.isConnectedToWallet;\n  console.log({ isConnected });\n\n  const appContent = useMemo(() => {\n    if (!isConnected) {\n      return (\n        <Page>\n          <NoEthereumProviderSection\n            walletConnectionPhase={\"connect\"}\n            actionFunction={() => cryptoWalletIntegrationStore.askToConnect()}\n          />\n        </Page>\n      );\n    } else {\n      return (\n        <Switch>\n          <Route exact path={ROUTES.newVc} component={NewVCPage} />\n          <Route exact path={ROUTES.existingVc} component={ExistingVCPage} />\n          <Route exact path={ROUTES.recoverVc} component={RecoverVCPage} />\n          <Route\n            path={`${ROUTES.vcCreated}/:vcId`}\n            component={VcCreationSuccessPage}\n          />\n          <Route\n            path={`${ROUTES.vcExtended}/:vcId`}\n            component={VcExtensionSuccessPage}\n          />\n          <Route path=\"/\" component={NewVCPage} />\n        </Switch>\n      );\n    }\n  }, [cryptoWalletIntegrationStore, isConnected]);\n\n  return (\n    <>\n      <Header />\n      <div className={classes.headerSeparator} />\n      <div className={classes.mainWrapper}>\n        <main className={classes.appMain}>{appContent}</main>\n      </div>\n    </>\n  );\n});\n\nexport default App;\n","import React, { useCallback } from \"react\";\nimport { CssBaseline, useTheme } from \"@material-ui/core\";\nimport { useBoolean } from \"react-hanger\";\nimport { Page } from \"../components/structure/Page\";\nimport { NoEthereumProviderSection } from \"./NoEthereumProviderSection\";\nimport {\n  makeStyles,\n  StylesProvider,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport { baseTheme, HEADER_HEIGHT_REM } from \"../theme/Theme\";\nimport { Provider } from \"mobx-react\";\nimport { SnackbarProvider } from \"notistack\";\n\ntype TWalletConnectionPhase = \"install\" | \"connect\";\n\ninterface IProps {}\n\n// DEV_NOTE : The style to make this page looks good is copied from the 'App'\n// TODO : O.L : We should encapsulate it better.\n\nconst useStyles = makeStyles((theme) => ({\n  appMain: {\n    height: \"100%\",\n    maxWidth: \"90%\",\n    boxSizing: \"border-box\",\n    padding: theme.spacing(2),\n  },\n  mainWrapper: {\n    backgroundColor: \"#06142e\",\n    backgroundRepeat: \"repeat-y\",\n    backgroundImage:\n      \"url(https://www.orbs.com/wp-content/uploads/2019/02/technology-background1.png)\",\n    backgroundAttachment: \"scroll\",\n    backgroundPosition: \"top center\",\n    // minHeight: `calc(100% - ${HEADER_HEIGHT_REM}rem)`,\n    minHeight: `100%`,\n\n    // Center the content\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n}));\n\nexport const NoEthereumProviderPage = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const hasPressed = useBoolean(false);\n\n  const installMetaMask = useCallback(() => {\n    window.open(\"https://metamask.io/\", \"_blank\");\n    hasPressed.setTrue();\n  }, [hasPressed]);\n\n  return (\n    <div className={classes.mainWrapper}>\n      <main className={classes.appMain}>\n        <Page>\n          <NoEthereumProviderSection\n            actionFunction={installMetaMask}\n            pressedOnInstall={hasPressed.value}\n            walletConnectionPhase={\"install\"}\n          />\n        </Page>\n      </main>\n    </div>\n  );\n});\n"],"sourceRoot":""}