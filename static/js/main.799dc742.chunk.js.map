{"version":3,"sources":["components/structure/header/logo-white.svg","serviceWorker.ts","store/CryptoWalletConnectionStore.ts","constants/ethereumErrorCodes.ts","cryptoUtils/unitConverter.ts","store/OrbsAccountStore.ts","services/cryptoWalletConnectionService/CryptoWalletConnectionService.ts","configs.ts","services/subscriptionService/SubscriptionsService.ts","services/monthlySubscriptionPlanService/MonthlySubscriptionPlanService.ts","theme/Theme.tsx","store/storesInitialization.ts","AppWrapper.tsx","services/Services.ts","components/structure/header/links.ts","components/structure/header/MenuPopup.tsx","components/structure/header/Header.tsx","components/structure/Page.tsx","components/structure/ContentFitting.tsx","components/forms/VirtualChainSubscriptionForm.tsx","services/servicesHooks.ts","store/storeHooks.ts","components/modals/ActionConfirmationModal.tsx","constants/routes.ts","pages/NewVCPage.tsx","components/forms/VcIdForm.tsx","services/subscriptionService/subscriptionServiceHooks.ts","index.tsx","components/forms/VirtualChainDetailsForm.tsx","components/forms/VcSubscriptionExtensionForm.tsx","pages/ExistingVCPage.tsx","pages/RecoverVcPage.tsx","pages/VcCreationSuccessPage.tsx","pages/VcExtensionSuccessPage.tsx","components/InTextLink.tsx","pages/NoEthereumProviderSection.tsx","App.tsx","pages/NoEthereumProviderPage.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","CryptoWalletConnectionStore","action","cryptoWalletConnectionService","addressCheckingInterval","undefined","reactionToWalletConnection","this","hasEthereumProvider","hasEventsSupport","reaction","isConnectedToWallet","isConnected","a","readInformationFromConnectedWallet","fireImmediately","onMainAddressChange","address","setMainAddress","readMainAddress","then","setInterval","requestConnectionPermission","permissionGranted","setWalletConnectionRequestApproved","walletConnectionRequestApproved","walletAddress","requestApproved","mainAddress","didUserApproveDappInThePast","observable","computed","JSON_RPC_ERROR_CODES","userRejectedRequest","unauthorized","unsupportedMethod","fullOrbsFromWeiOrbs","weiOrbsString","parseInt","web3","utils","fromWei","weiOrbsFromFullOrbs","fullOrbs","BigInt","toWei","toString","OrbsAccountStore","cryptoWalletIntegrationStore","orbsTokenService","monthlySubscriptionPlanService","subscriptionsService","addressChangeReaction","readContractParameters","console","log","setDoneLoading","reactToConnectedAddressChanged","readMonthlyRateInFullOrbs","monthlyRate","readTier","tier","promievent","name","resetTxIndicators","setTxPending","res","code","setTxCanceled","allowanceForStakingContractInWeiOrbs","mspContractAddress","contractAddress","promivent","approve","handlePromievent","readAndSetMSPContractAllowance","virtualChainSubscriptionPayload","createANewVC","val","recipt","readVcIdFromHistory","blockNumber","vcId","manuallyReadAccountData","virtualChainSubscriptionExtensionPayload","extendSubscription","currentAddress","setDefaultAccountAddress","refreshAccountListeners","readDataForAccount","failLoadingProcess","error","accountAddress","setFromAccount","tierName","monthlyRateInFullOrbs","setMspContractParameters","setContractParametersErrorLoading","catch","e","readAllowance","balanceInWeiOrbs","setMSPContractAllowance","cancelAllCurrentSubscriptions","setErrorLoading","setTxHadError","contractParametersDoneLoading","contractParametersErrorLoading","doneLoading","errorLoading","txPending","txCanceled","txHadError","contractAllowance","allowanceToMSPContract","mspContractParameters","CryptoWalletConnectionService","ethereum","isMetamaskInstalled","isSemiCompliantEthereumProviderInstalled","isMetaMask","Web3","onFunction","on","enable","networkVersion","eth","getAccounts","accounts","getBlockNumber","onChange","Error","listener","off","selectedAddress","INFURA_KEY","process","REACT_APP_ETHEREUM_NETWORK","REACT_APP_INFURA_KEY","configs","urlBase","PUBLIC_BASE_PATH","network","minimalSubscriptionAmount","decimals","v2contractsAddressesOverride","ETHEREUM_PROVIDER_WS","termsOfUseUrl","privacyPolicyUrl","SubscriptionsService","subscriptionsContractAddress","subscriptionsContract","Contract","SubscriptionContractJson","abi","defaultAccountAddress","options","from","vcid","methods","getVcData","call","rawResponse","response","ownerId","getPastEvents","fromBlock","toBlock","events","event","returnValues","owner","MonthlySubscriptionPlanService","monthlySubscriptionPlanContractAddress","monthlySubscriptionContract","MonthlySubscriptionPlanContractJson","vcSubscriptionPayload","amountInFullOrbs","isCertified","deploymentSubset","amountInWeiOrbs","createVC","send","rateAsString","baseTheme","responsiveFontSizes","createMuiTheme","palette","type","primary","main","secondary","background","default","paper","typography","overrides","MuiPaper","root","MuiTypography","colorPrimary","MuiLink","configure","enforceActions","useStyles","makeStyles","theme","snackbarInfo","backgroundColor","dark","color","getContrastText","services","ethereumProvider","providers","WebsocketProvider","cryptoWalletIntegrationService","subscriptionContract","OrbsTokenService","erc20Contract","monthlySubscriptionPlanDeployedInstance","buildServices","stores","subscriptionService","orbsAccountStore","getStores","AppWrapper","React","memo","props","classes","appComponent","children","basename","StylesProvider","injectFirst","ThemeProvider","maxSnack","variantInfo","CssBaseline","links","translationKey","url","useLinkDescriptors","useMemo","map","link","label","menuButton","padding","spacing","width","transition","HOVER_COLOR","MenuPopup","linkDescriptors","useBoolean","setFalse","setTrue","value","useState","anchorEl","setAnchorEl","handleClick","useCallback","currentTarget","handleClose","menuItemLinks","idx","MenuItem","onClick","key","Link","component","NavLink","exact","className","activeStyle","underline","to","variant","noWrap","id","IconButton","aria-label","Popover","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","appBar","height","paddingTop","paddingBottom","boxSizing","zIndex","drawer","logo","nav","display","flexWrap","toolbar","paddingRight","paddingLeft","margin","maxWidth","justifyContent","headerButtonsContainer","alignItems","displayInMetamaskButton","marginRight","movedDown","marginLeft","Header","useTheme","smallerThanSmall","useMediaQuery","breakpoints","down","menuLinks","menu","AppBar","position","data-testid","Toolbar","src","alt","page","Page","contentFitter","ContentFitting","others","textField","phaseInstructionLabel","marginBottom","forControlLabel","checkBoxes","typographyAnimated","visibility","typographyAnimatedShow","actionButton","light","VirtualChainSubscriptionForm","subscribeNewVC","disableActionButtons","enqueueSnackbar","useSnackbar","setPlanOptionChanged","setName","monthsToPayForInAdvance","setMonthsToPayForInAdvance","useForm","register","handleSubmit","currentCostOfPlan","errors","hasEnoughAllowance","submit","formData","runOnCanary","runOnlyOnCertifiedValidators","preventDuplicate","setAllowance","onSubmit","style","Typography","TextField","autoComplete","InputLabelProps","pointerEvents","title","target","required","inputRef","fullWidth","select","SelectProps","native","Button","disabled","startIcon","text","tooltipText","Tooltip","marginInlineStart","useServices","useContext","MobXProviderContext","useStores","useOrbsAccountStore","dialogPaper","border","boxShadow","ActionConfirmationModal","onAccept","onCancel","contentText","acceptText","cancelText","Dialog","fullScreen","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","ROUTES","NewVCPage","observer","history","useHistory","showModal","setShowModal","content","dialogTexts","setDialogTexts","onDialogAccept","setOnDialogAccept","allowanceInFullOrbs","setAllowanceForStakingContract","createNewVc","push","showCreateVcDialog","onCancelMessage","showSetMSPContractAllowanceDialog","VcIdForm","actionButtonText","onActionClick","setVcId","useVcDataHook","isLoading","setIsLoading","errorFindingVc","setErrorFindingVc","payedUntil","vcData","setVcData","readVcData","readVcDataResponse","expiresAt","useEffect","AppComponent","paidUntil","vcName","flexDirection","textAlign","Moment","unix","format","VcSubscriptionExtensionForm","extendVcSubscription","ExistingVCPage","onOpenVcClicked","extendExistingVcSubscription","showSelectVcForm","length","vcContent","RecoverVCPage","VcCreationSuccessPage","useParams","fontWeight","VcExtensionSuccessPage","InTextLink","href","rel","noEthereumProviderSection","borderRadius","NoEthereumProviderSection","walletConnectionPhase","actionFunction","tickerValue","pressedOnInstall","shouldDisplayLegalTicker","buttonIsEnabled","isInstall","titleText","subTitleText","buttonText","innerHtmlForLegalAgreement","renderToString","FormControlLabel","marginTop","control","Checkbox","checked","setValue","dangerouslySetInnerHTML","__html","appMain","headerSeparator","mainWrapper","backgroundRepeat","backgroundImage","backgroundAttachment","backgroundPosition","minHeight","flexShrink","drawerPaper","drawerContainer","overflow","App","appContent","path","askToConnect","NoEthereumProviderPage","hasPressed","installMetaMask","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.799dc742.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-white.e59b3ac9.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { action, computed, observable, reaction } from \"mobx\";\nimport { ICryptoWalletConnectionService } from \"../services/cryptoWalletConnectionService/ICryptoWalletConnectionService\";\nimport { IReactionDisposer } from \"mobx/lib/core/reaction\";\n\nexport class CryptoWalletConnectionStore {\n  @observable private walletConnectionRequestApproved: boolean = false;\n\n  @observable public hasEthereumProvider: boolean;\n  @observable public hasEventsSupport: boolean;\n\n  @observable public mainAddress: string = \"\";\n\n  private addressCheckingInterval?: NodeJS.Timeout = undefined;\n  reactionToWalletConnection: IReactionDisposer;\n\n  constructor(\n    private cryptoWalletConnectionService: ICryptoWalletConnectionService\n  ) {\n    this.hasEthereumProvider =\n      cryptoWalletConnectionService.hasEthereumProvider;\n    this.hasEventsSupport = cryptoWalletConnectionService.hasEventsSupport;\n\n    this.reactionToWalletConnection = reaction(\n      () => this.isConnectedToWallet,\n      async (isConnected) => {\n        if (isConnected) {\n          this.readInformationFromConnectedWallet();\n        }\n      },\n      {\n        fireImmediately: true,\n      }\n    );\n\n    if (this.hasEthereumProvider) {\n      // We will only detect address change if the Ethereum provider can support it\n      if (this.cryptoWalletConnectionService.hasEventsSupport) {\n        this.cryptoWalletConnectionService.onMainAddressChange((address) =>\n          this.setMainAddress(address)\n        );\n      } else {\n        // Else, we will read it one time + set an interval\n        this.cryptoWalletConnectionService\n          .readMainAddress()\n          .then((address) => this.setMainAddress(address));\n\n        this.addressCheckingInterval = setInterval(\n          () =>\n            this.cryptoWalletConnectionService\n              .readMainAddress()\n              .then((address) => this.setMainAddress(address)),\n          1000\n        );\n      }\n    }\n  }\n\n  @computed\n  public get isConnectedToWallet(): boolean {\n    return (\n      this.hasEthereumProvider &&\n      (this.cryptoWalletConnectionService.didUserApproveDappInThePast ||\n        this.walletConnectionRequestApproved)\n    );\n  }\n\n  public async askToConnect(): Promise<boolean> {\n    if (this.isConnectedToWallet) {\n      return true;\n    } else {\n      const permissionGranted = await this.cryptoWalletConnectionService.requestConnectionPermission();\n      this.setWalletConnectionRequestApproved(permissionGranted);\n\n      return this.walletConnectionRequestApproved;\n    }\n  }\n\n  private async readInformationFromConnectedWallet() {\n    const walletAddress = await this.cryptoWalletConnectionService.readMainAddress();\n\n    this.setMainAddress(walletAddress);\n  }\n\n  @action(\"setWalletConnectionRequestApproved\")\n  private setWalletConnectionRequestApproved(requestApproved: boolean) {\n    this.walletConnectionRequestApproved = requestApproved;\n  }\n\n  @action(\"setMainAddress\")\n  private setMainAddress(mainAddress: string) {\n    this.mainAddress = mainAddress;\n  }\n}\n","// DEV_NOTE : Taken from typeless library 'eth-json-rpc-errors';\nexport const JSON_RPC_ERROR_CODES = {\n  rpc: {\n    invalidInput: -32000,\n    resourceNotFound: -32001,\n    resourceUnavailable: -32002,\n    transactionRejected: -32003,\n    methodNotSupported: -32004,\n    parse: -32700,\n    invalidRequest: -32600,\n    methodNotFound: -32601,\n    invalidParams: -32602,\n    internal: -32603,\n  },\n  provider: {\n    userRejectedRequest: 4001,\n    unauthorized: 4100,\n    unsupportedMethod: 4200,\n  },\n};\n","import web3 from \"web3\";\n\nexport function fullOrbsFromWeiOrbs(weiOrbsString: string): number {\n  return parseInt(web3.utils.fromWei(weiOrbsString, \"ether\"));\n}\n\nexport function weiOrbsFromFullOrbs(fullOrbs: number): bigint {\n  return BigInt(web3.utils.toWei(fullOrbs.toString(), \"ether\"));\n}\n","import {\n  action,\n  computed,\n  IReactionDisposer,\n  observable,\n  reaction,\n} from \"mobx\";\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\nimport { PromiEvent, TransactionReceipt } from \"web3-core\";\nimport { JSON_RPC_ERROR_CODES } from \"../constants/ethereumErrorCodes\";\nimport { IOrbsTokenService, OrbsTokenService } from \"orbs-pos-data\";\nimport { fullOrbsFromWeiOrbs } from \"../cryptoUtils/unitConverter\";\nimport {\n  IMonthlySubscriptionPlanService,\n  TVirtualChainSubscriptionExtensionPayload,\n  TVirtualChainSubscriptionPayload,\n} from \"../services/monthlySubscriptionPlanService/IMonthlySubscriptionPlanService\";\nimport { ISubscriptionsService } from \"../services/subscriptionService/ISubscriptionsService\";\n\ntype TMSPContractParameters = {\n  tierName: string;\n  monthlyRateInFullOrbs: number;\n};\n\nexport class OrbsAccountStore {\n  @observable public contractParametersDoneLoading = false;\n  @observable public contractParametersErrorLoading = false;\n  @observable public doneLoading = false;\n  @observable public errorLoading = false;\n  @observable public txPending = false;\n  @observable public txHadError = false;\n  @observable public txCanceled = false;\n  @observable public isGuardian = false;\n  @observable public mspContractParameters: TMSPContractParameters = {\n    monthlyRateInFullOrbs: 0,\n    tierName: \"\",\n  };\n\n  // TODO : O.L : Move all MSP related data to its own store when starting to work with more than 1.\n  @observable public allowanceToMSPContract = 0;\n\n  private addressChangeReaction: IReactionDisposer;\n\n  constructor(\n    private cryptoWalletIntegrationStore: CryptoWalletConnectionStore,\n    private orbsTokenService: IOrbsTokenService,\n    private monthlySubscriptionPlanService: IMonthlySubscriptionPlanService,\n    private subscriptionsService: ISubscriptionsService\n  ) {\n    this.readContractParameters().then(() =>\n      console.log(\"MSP contract parameters read success\")\n    );\n    this.addressChangeReaction = reaction(\n      () => this.cryptoWalletIntegrationStore.mainAddress,\n      async (address) => {\n        this.setDoneLoading(false);\n        await this.reactToConnectedAddressChanged(address);\n\n        this.monthlySubscriptionPlanService\n          .readMonthlyRateInFullOrbs()\n          .then((monthlyRate) => console.log({ monthlyRate }));\n\n        this.monthlySubscriptionPlanService\n          .readTier()\n          .then((tier) => console.log({ tier }));\n        this.setDoneLoading(true);\n      },\n      {\n        fireImmediately: true,\n      }\n    );\n  }\n\n  // **** Computed values ****\n\n  // **** Contract interactions ****\n  private async handlePromievent(\n    promievent: PromiEvent<TransactionReceipt>,\n    name = \"A promivent\"\n  ): Promise<TransactionReceipt | undefined> {\n    this.resetTxIndicators();\n\n    // Indicate tx is pending\n    this.setTxPending(true);\n    console.log(`Waiting for promievent of ${name}`);\n\n    try {\n      const res = await promievent;\n      console.log(`Got Results for promievent of ${name}`);\n      return res;\n    } catch (e) {\n      if (\n        (e as any).code === JSON_RPC_ERROR_CODES.provider.userRejectedRequest\n      ) {\n        this.setTxCanceled(true);\n      } else {\n        throw e;\n      }\n    } finally {\n      this.setTxPending(false);\n    }\n  }\n\n  public async setAllowanceForStakingContract(\n    allowanceForStakingContractInWeiOrbs: bigint\n  ): Promise<void> {\n    const mspContractAddress = this.monthlySubscriptionPlanService\n      .contractAddress;\n    const promivent = this.orbsTokenService.approve(\n      mspContractAddress,\n      allowanceForStakingContractInWeiOrbs\n    );\n\n    this.handlePromievent(\n      promivent,\n      \"setAllowanceForStakingContract\"\n    ).then(() =>\n      this.readAndSetMSPContractAllowance(\n        this.cryptoWalletIntegrationStore.mainAddress\n      )\n    );\n  }\n\n  // TODO : O.L : Move to proper store\n  public async createNewVc(\n    virtualChainSubscriptionPayload: TVirtualChainSubscriptionPayload\n  ): Promise<string> {\n    const mspContractAddress = this.monthlySubscriptionPlanService\n      .contractAddress;\n    const promivent = this.monthlySubscriptionPlanService.createANewVC(\n      virtualChainSubscriptionPayload\n    );\n\n    const recipt = await this.handlePromievent(promivent, \"createNewVc\").then(\n      (val) => {\n        console.log(\"Add handling of created vc\");\n        console.log({ val });\n        return val;\n      }\n    );\n\n    const { vcId } = await this.subscriptionsService.readVcIdFromHistory(\n      recipt!.blockNumber,\n      this.cryptoWalletIntegrationStore.mainAddress\n    );\n\n    // DEV_NOTE : O.L : Re-Reading all relevant data, no need to wait\n    this.manuallyReadAccountData();\n\n    return vcId;\n  }\n\n  public async extendExistingVcSubscription(\n    virtualChainSubscriptionExtensionPayload: TVirtualChainSubscriptionExtensionPayload\n  ): Promise<void> {\n    const mspContractAddress = this.monthlySubscriptionPlanService\n      .contractAddress;\n    const promivent = this.monthlySubscriptionPlanService.extendSubscription(\n      virtualChainSubscriptionExtensionPayload\n    );\n\n    const recipt = await this.handlePromievent(\n      promivent,\n      \"extendExistingVcSubscription\"\n    ).then((val) => {\n      console.log({ val });\n      return val;\n    });\n\n    // DEV_NOTE : O.L : Re-Reading all relevant data, no need to wait\n    this.manuallyReadAccountData();\n  }\n\n  // **** Current address changed ****\n\n  private async reactToConnectedAddressChanged(currentAddress: string) {\n    if (currentAddress) {\n      this.setDefaultAccountAddress(currentAddress);\n\n      if (this.cryptoWalletIntegrationStore.hasEventsSupport) {\n        this.refreshAccountListeners(currentAddress);\n      }\n\n      try {\n        await this.readDataForAccount(currentAddress);\n      } catch (e) {\n        this.failLoadingProcess(e);\n        console.error(\n          \"Error in reacting to address change in Orbs Account Store\",\n          e\n        );\n      }\n    }\n  }\n\n  private setDefaultAccountAddress(accountAddress: string) {\n    this.monthlySubscriptionPlanService.setFromAccount(accountAddress);\n    this.subscriptionsService.setFromAccount(accountAddress);\n    this.orbsTokenService.setFromAccount(accountAddress);\n  }\n\n  // **** Data reading and setting ****\n\n  private async readContractParameters() {\n    try {\n      const tierName = await this.monthlySubscriptionPlanService.readTier();\n      const monthlyRateInFullOrbs = await this.monthlySubscriptionPlanService.readMonthlyRateInFullOrbs();\n\n      this.setMspContractParameters({ tierName, monthlyRateInFullOrbs });\n    } catch (e) {\n      this.setContractParametersErrorLoading(true);\n      console.error(\"Error loading msp contract parameters\");\n      console.error(e);\n    }\n  }\n\n  public async manuallyReadAccountData() {\n    try {\n      await this.readDataForAccount(\n        this.cryptoWalletIntegrationStore.mainAddress\n      );\n    } catch (e) {\n      this.failLoadingProcess(e);\n      console.error(\n        \"Error in manually reading address data in Orbs Account Store\",\n        e\n      );\n    }\n  }\n\n  private async readDataForAccount(accountAddress: string) {\n    // try {\n    //   await this.readAndSetIsGuardian(accountAddress);\n    // } catch (e) {\n    //   console.error(`Error read-n-set isGuardian ${e}`);\n    // }\n    await this.readAndSetMSPContractAllowance(accountAddress).catch((e) => {\n      console.error(`Error read-n-set MSP contract allowance: ${e}`);\n    });\n  }\n\n  // **** Read and Set ****\n  private async readAndSetMSPContractAllowance(accountAddress: string) {\n    const balanceInWeiOrbs = await this.orbsTokenService.readAllowance(\n      accountAddress,\n      this.monthlySubscriptionPlanService.contractAddress\n    );\n    this.setMSPContractAllowance(\n      fullOrbsFromWeiOrbs(balanceInWeiOrbs.toString())\n    );\n  }\n\n  // ****  Subscriptions ****\n\n  private async refreshAccountListeners(accountAddress: string) {\n    this.cancelAllCurrentSubscriptions();\n  }\n\n  private cancelAllCurrentSubscriptions() {}\n\n  // ****  Complex setters ****\n  private failLoadingProcess(error: Error) {\n    this.setErrorLoading(true);\n    this.setDoneLoading(true);\n  }\n\n  private resetTxIndicators() {\n    this.setTxPending(false);\n    this.setTxHadError(false);\n    this.setTxCanceled(false);\n  }\n\n  // ****  Observables setter actions ****\n  @action(\"setContractParametersDoneLoading\")\n  private setContractParametersDoneLoading(\n    contractParametersDoneLoading: boolean\n  ) {\n    this.contractParametersDoneLoading = contractParametersDoneLoading;\n  }\n\n  @action(\"setContractParametersErrorLoading\")\n  private setContractParametersErrorLoading(\n    contractParametersErrorLoading: boolean\n  ) {\n    this.contractParametersErrorLoading = contractParametersErrorLoading;\n  }\n\n  @action(\"setDoneLoading\")\n  private setDoneLoading(doneLoading: boolean) {\n    this.doneLoading = doneLoading;\n  }\n\n  @action(\"setErrorLoading\")\n  private setErrorLoading(errorLoading: boolean) {\n    this.errorLoading = errorLoading;\n  }\n\n  @action(\"setTxPending\")\n  private setTxPending(txPending: boolean) {\n    this.txPending = txPending;\n  }\n\n  @action(\"setTxCanceled\")\n  private setTxCanceled(txCanceled: boolean) {\n    this.txCanceled = txCanceled;\n  }\n\n  @action(\"setTxHadError\")\n  private setTxHadError(txHadError: boolean) {\n    this.txHadError = txHadError;\n  }\n\n  @action(\"setMSPContractAllowance\")\n  private setMSPContractAllowance(contractAllowance: number) {\n    this.allowanceToMSPContract = contractAllowance;\n  }\n\n  @action(\"setMspContractParameters\")\n  private setMspContractParameters(\n    mspContractParameters: TMSPContractParameters\n  ) {\n    this.mspContractParameters = mspContractParameters;\n  }\n}\n","import Web3 from \"web3\";\nimport { ICryptoWalletConnectionService } from \"./ICryptoWalletConnectionService\";\nimport { IEthereumProvider } from \"./IEthereumProvider\";\n\n// TODO : FUTURE : O.L : IMPORTANT : Get this service and all other common services into a package\n//        To be used by all web-products.\n// TODO : FUTURE : O.L : Change all ethereum.<call> to the new standard events format.\nexport class CryptoWalletConnectionService\n  implements ICryptoWalletConnectionService {\n  private readonly web3?: Web3;\n  public readonly hasEthereumProvider: boolean;\n  public readonly hasEventsSupport: boolean;\n  public readonly isMetamaskInstalled: boolean;\n  public readonly isSemiCompliantEthereumProviderInstalled: boolean;\n\n  constructor(private ethereum: IEthereumProvider) {\n    this.hasEthereumProvider = this.ethereum !== undefined;\n\n    // Distinguishes between installed ethereum providers\n    this.isMetamaskInstalled =\n      this.hasEthereumProvider && !!this.ethereum.isMetaMask;\n    this.isSemiCompliantEthereumProviderInstalled =\n      this.hasEthereumProvider && !this.ethereum.isMetaMask;\n\n    if (this.hasEthereumProvider) {\n      this.web3 = new Web3(this.ethereum as any);\n    }\n\n    const onFunction = this.hasEthereumProvider ? this.ethereum.on : undefined;\n    this.hasEventsSupport = onFunction !== undefined && onFunction !== null;\n  }\n\n  public async requestConnectionPermission(): Promise<boolean> {\n    try {\n      await this.ethereum.enable();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  // Getters\n  public get didUserApproveDappInThePast(): boolean {\n    // DEV_NOTE : O.L : IMPORTANT ! : This currently works with the soon to be deprecated apis of metamask injected 'ethereum'\n    //                                and is not part of the properties in the official types of web3.\n    //                                We need to check and find a better way to detect if the user has already approved wallet access.\n    // @ts-ignore\n    return this.isMetamaskInstalled && !!this.ethereum.selectedAddress;\n  }\n\n  async getIsMainNetwork(): Promise<boolean> {\n    return this.isMetamaskInstalled && this.ethereum.networkVersion === \"1\";\n  }\n\n  // Data \"reading\"\n  async readMainAddress(): Promise<string> {\n    const accounts = (await this.web3?.eth.getAccounts()) || [];\n    return accounts[0];\n  }\n\n  async readCurrentBlockNumber(): Promise<number> {\n    return this.web3?.eth.getBlockNumber() || 0;\n  }\n\n  // Event listeners\n  onMainAddressChange(onChange: (mainAddress: string) => void): () => void {\n    if (!this.hasEventsSupport) {\n      throw new Error(\n        `Cannot subscribe to events with given Ethereum provider`\n      );\n    }\n\n    const listener = (accounts: string[]) => onChange(accounts[0]);\n\n    this.ethereum.on(\"accountsChanged\", listener);\n\n    return () => {\n      this.ethereum.off(\"accountsChanged\", listener);\n    };\n  }\n}\n","type TSupportedNets = \"local\" | \"ropsten\" | \"mainnet\";\n// @ts-ignore\nconst ethereumNetwork: TSupportedNets = process.env.REACT_APP_ETHEREUM_NETWORK;\nexport const IS_DEV = process.env.NODE_ENV !== \"production\";\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY;\n\nexport interface IConfig {\n  urlBase: string;\n  network: TSupportedNets;\n  minimalSubscriptionAmount: number;\n  decimals: number;\n  v2contractsAddressesOverride: Partial<{\n    subscriptionContract: string;\n    erc20Contract: string;\n    // DEV_NOTE: O.L : For now, we have only one deployed 'Monthly Subscription Plan' instance.\n    // When we will start supporting more, we will need to read their addresses, tier name and price from a registery contract.\n    monthlySubscriptionPlanDeployedInstance: string;\n  }>;\n  ETHEREUM_PROVIDER_WS: string;\n  termsOfUseUrl: string;\n  privacyPolicyUrl: string;\n}\n\n// export const MainnetConfig: IConfig = {\n//     erc20Address: \"0xff56cc6b1e6ded347aa0b7676c85ab0b3d08b0fa\",\n//     subscriptionAddress: \"0x6e79DFB79CD53A2b08bC8c2852DecA7D73cD24fC\",\n//     network: \"mainnet\",\n//     minimalSubscriptionAmount: 6200,\n//     decimals: 18,\n// }\n\n// export const RopstenConfig: IConfig = {\n//     erc20Address: \"0xeD0Aa9A4F9e5ae9092994f4B86F6AAa89944939b\",\n//     subscriptionAddress: \"0xe654ad79a93af035a60c66100aa95dfd2215cc51\",\n//     network: \"ropsten\",\n//     minimalSubscriptionAmount: 100,\n//     decimals: 0,\n// }\n\n// TODO : O.L : Move these to a better place + ensure values are correct. (Maybe read it from the contract)\nconst MAIN_NET_MINIMUM_SUBSCRIPTION_AMOUNT = 6200;\nconst MAIN_NET_DECIMALS = 18;\n\nconst configs: IConfig = {\n  urlBase: process.env.PUBLIC_BASE_PATH || \"\",\n  network: \"mainnet\",\n  minimalSubscriptionAmount: MAIN_NET_MINIMUM_SUBSCRIPTION_AMOUNT,\n  decimals: MAIN_NET_DECIMALS,\n  v2contractsAddressesOverride: {},\n  ETHEREUM_PROVIDER_WS: `wss://mainnet.infura.io/ws/v3/${INFURA_KEY}`,\n  termsOfUseUrl: \"https://www.orbs.com/vc-portal-terms-of-use/\",\n  privacyPolicyUrl: \"https://www.orbs.com/vc-portal-privacy-policy/\",\n};\n\n// Webpack will remove this section on production build //\nif (process.env.NODE_ENV !== \"production\") {\n  if (ethereumNetwork === \"local\") {\n    const addresses = require(\"./local/addresses.json\");\n\n    configs.network = \"local\";\n\n    // Override addresses\n    configs.v2contractsAddressesOverride.subscriptionContract =\n      addresses.subscriptions;\n    configs.v2contractsAddressesOverride.erc20Contract = addresses.erc20;\n    configs.v2contractsAddressesOverride.monthlySubscriptionPlanDeployedInstance =\n      addresses.monthlySubscriptionPlanDeployedInstance;\n  }\n}\n\nexport default configs;\n","import {\n  ISubscriptionsService,\n  TReadVcDataResponse,\n  TVcGist,\n} from \"./ISubscriptionsService\";\nimport Web3 from \"web3\";\nimport SubscriptionContractJson from \"@orbs-network/orbs-ethereum-contracts-v2/build/contracts/Subscriptions.json\";\nimport { AbiItem } from \"web3-utils\";\nimport { Subscriptions } from \"../../contracts/Subscriptions\";\nimport { EventData } from \"web3-eth-contract\";\n\nconst MAIN_NET_SUBSCRIPTION_CONTRACT_ADDRESS =\n  \"0x3b2c72d0d5fc8a7346091f449487cd0a7f0954d6\";\n\nexport class SubscriptionsService implements ISubscriptionsService {\n  private subscriptionsContract: Subscriptions;\n\n  constructor(\n    private web3: Web3,\n    subscriptionsContractAddress: string = MAIN_NET_SUBSCRIPTION_CONTRACT_ADDRESS\n  ) {\n    this.subscriptionsContract = (new this.web3.eth.Contract(\n      SubscriptionContractJson.abi as AbiItem[],\n      subscriptionsContractAddress\n    ) as any) as Subscriptions;\n  }\n\n  setFromAccount(defaultAccountAddress: string): void {\n    console.log(\"Setthing default address\", defaultAccountAddress);\n    this.subscriptionsContract.options.from = defaultAccountAddress;\n  }\n\n  public async readVcData(vcid: string): Promise<TReadVcDataResponse> {\n    const rawResponse = await this.subscriptionsContract.methods\n      .getVcData(vcid)\n      .call();\n\n    const response: TReadVcDataResponse = rawResponse;\n\n    return response;\n  }\n\n  public async readVcIdFromHistory(\n    blockNumber: number,\n    ownerId: string\n  ): Promise<TVcGist> {\n    const events = await this.subscriptionsContract.getPastEvents(\"VcCreated\", {\n      address: ownerId,\n      fromBlock: blockNumber,\n      toBlock: blockNumber,\n    });\n\n    // DEV_NOTE : O.L : There should be only one\n    const event = events[0];\n    const { owner, vcid } = event.returnValues;\n\n    return {\n      owner,\n      vcId: vcid,\n    };\n  }\n}\n","import {\n  IMonthlySubscriptionPlanService,\n  TVirtualChainSubscriptionExtensionPayload,\n  TVirtualChainSubscriptionPayload,\n} from \"./IMonthlySubscriptionPlanService\";\nimport Web3 from \"web3\";\nimport { MonthlySubscriptionPlan } from \"../../contracts/MonthlySubscriptionPlan\";\nimport MonthlySubscriptionPlanContractJson from \"@orbs-network/orbs-ethereum-contracts-v2/build/contracts/MonthlySubscriptionPlan.json\";\nimport { AbiItem } from \"web3-utils\";\nimport { PromiEvent, TransactionReceipt } from \"web3-core\";\nimport {\n  fullOrbsFromWeiOrbs,\n  weiOrbsFromFullOrbs,\n} from \"../../cryptoUtils/unitConverter\";\n\nconst MAIN_NET_MONTHLY_SUBSCRIPTION_PLAN_CONTRACT_ADDRESS =\n  \"0xb2e3e952ba99a3eab76eddf85a2d387e3d9d335b\";\n\nexport class MonthlySubscriptionPlanService\n  implements IMonthlySubscriptionPlanService {\n  private monthlySubscriptionContract: MonthlySubscriptionPlan;\n\n  constructor(\n    private web3: Web3,\n    private monthlySubscriptionPlanContractAddress: string = MAIN_NET_MONTHLY_SUBSCRIPTION_PLAN_CONTRACT_ADDRESS\n  ) {\n    this.monthlySubscriptionContract = (new this.web3.eth.Contract(\n      MonthlySubscriptionPlanContractJson.abi as AbiItem[],\n      monthlySubscriptionPlanContractAddress\n    ) as any) as MonthlySubscriptionPlan;\n  }\n\n  public get contractAddress(): string {\n    return this.monthlySubscriptionPlanContractAddress;\n  }\n\n  createANewVC(\n    vcSubscriptionPayload: TVirtualChainSubscriptionPayload\n  ): PromiEvent<TransactionReceipt> {\n    const {\n      name,\n      amountInFullOrbs,\n      isCertified,\n      deploymentSubset,\n    } = vcSubscriptionPayload;\n\n    const amountInWeiOrbs = weiOrbsFromFullOrbs(amountInFullOrbs);\n\n    return this.monthlySubscriptionContract.methods\n      .createVC(name, amountInWeiOrbs.toString(), isCertified, deploymentSubset)\n      .send();\n  }\n\n  extendSubscription(\n    virtualChainSubscriptionExtensionPayload: TVirtualChainSubscriptionExtensionPayload\n  ): PromiEvent<TransactionReceipt> {\n    const { amountInFullOrbs, vcId } = virtualChainSubscriptionExtensionPayload;\n    const amountInWeiOrbs = weiOrbsFromFullOrbs(amountInFullOrbs);\n    console.log(\"Extending by amount\", amountInWeiOrbs);\n    return this.monthlySubscriptionContract.methods\n      .extendSubscription(vcId, amountInWeiOrbs.toString())\n      .send();\n  }\n\n  setFromAccount(defaultAccountAddress: string): void {\n    this.monthlySubscriptionContract.options.from = defaultAccountAddress;\n  }\n\n  async readMonthlyRateInFullOrbs(): Promise<number> {\n    const rateAsString = await this.monthlySubscriptionContract.methods\n      .monthlyRate()\n      .call();\n\n    return fullOrbsFromWeiOrbs(rateAsString);\n  }\n\n  async readTier(): Promise<string> {\n    return this.monthlySubscriptionContract.methods.tier().call();\n  }\n}\n","import { blue } from \"@material-ui/core/colors\";\nimport responsiveFontSizes from \"@material-ui/core/styles/responsiveFontSizes\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\n\nconst COLOR1 = \"#0D0D0D\"; // dark gray\nconst COLOR2 = \"#6ec6d8\"; // bluish\nconst COLOR3 = \"#03FCF5\"; // bright bluish- Tetra\n\n// const PRIMARY_TEXT = '#dbdbdb';\nconst PRIMARY_TEXT = \"#dbdbdb\";\nconst SECONDARY_TEXT = \"#7B7B7B\";\n\nexport const HEADER_HEIGHT_REM = 6;\n\nexport const baseTheme = responsiveFontSizes(\n  createMuiTheme({\n    palette: {\n      // TODO : Adjust all styles after structure is done\n      type: \"dark\",\n      primary: { main: \"#09142c\" },\n      secondary: { main: \"#74f6fd\" },\n      background: {\n        default: \"#0a0f25\",\n        // paper: \"#192a45\",\n        paper: \"#09142c\",\n      },\n    },\n    typography: {\n      // fontFamily: 'Montserrat',\n    },\n    overrides: {\n      MuiPaper: {\n        root: {\n          // backgroundColor: COLOR1,\n        },\n      },\n      MuiTypography: {\n        colorPrimary: {\n          // color: PRIMARY_TEXT,\n        },\n      },\n      MuiLink: {\n        root: {\n          // color: blue[500],\n        },\n      },\n    },\n  })\n);\n\nexport const AppStyles = {};\n","import { configure } from \"mobx\";\nimport { IStores } from \"./stores\";\n\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\nimport { ICryptoWalletConnectionService } from \"../services/cryptoWalletConnectionService/ICryptoWalletConnectionService\";\nimport { OrbsAccountStore } from \"./OrbsAccountStore\";\n\n// This import ensures mobx batching\nimport \"mobx-react-lite/batchingForReactDom\";\nimport { ISubscriptionsService } from \"../services/subscriptionService/ISubscriptionsService\";\nimport { IOrbsTokenService } from \"orbs-pos-data\";\nimport { IMonthlySubscriptionPlanService } from \"../services/monthlySubscriptionPlanService/IMonthlySubscriptionPlanService\";\n\n/**\n * Builds and initializes all of the stores\n */\nexport function getStores(\n  cryptoWalletConnectionService: ICryptoWalletConnectionService,\n  subscriptionService: ISubscriptionsService,\n  orbsTokenService: IOrbsTokenService,\n  monthlySubscriptionPlanService: IMonthlySubscriptionPlanService\n): IStores {\n  // Create stores instances + Hydrate the stores\n  const cryptoWalletIntegrationStore = new CryptoWalletConnectionStore(\n    cryptoWalletConnectionService\n  );\n  const orbsAccountStore = new OrbsAccountStore(\n    cryptoWalletIntegrationStore,\n    orbsTokenService,\n    monthlySubscriptionPlanService,\n    subscriptionService\n  );\n\n  const stores: IStores = {\n    cryptoWalletIntegrationStore,\n    orbsAccountStore,\n  };\n\n  return stores;\n}\n\n/**\n * Configures the mobx library. Should get called at App's initialization.\n */\nexport function configureMobx() {\n  configure({\n    enforceActions: \"observed\",\n  });\n}\n","import React from \"react\";\nimport { configureMobx, getStores } from \"./store/storesInitialization\";\nimport { buildServices } from \"./services/Services\";\nimport { Provider } from \"mobx-react\";\nimport {\n  makeStyles,\n  StylesProvider,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport { baseTheme } from \"./theme/Theme\";\nimport { SnackbarProvider } from \"notistack\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport configs from \"./configs\";\n\ninterface IProps {\n  appComponent: React.ReactNode;\n}\n\nconfigureMobx();\n\nconst useStyles = makeStyles((theme) => ({\n  snackbarInfo: {\n    backgroundColor: baseTheme.palette.primary.dark,\n    color: theme.palette.getContrastText(baseTheme.palette.primary.dark),\n  },\n}));\n\nconst ethereumProvider = (window as any).ethereum;\nconst services = buildServices(ethereumProvider);\nconst stores = getStores(\n  services.cryptoWalletIntegrationService,\n  services.subscriptionsService,\n  services.orbsTokenService,\n  services.monthlySubscriptionPlanService\n);\n\nexport const AppWrapper = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { children, appComponent } = props;\n  return (\n    <>\n      <Router basename={configs.urlBase}>\n        <Provider {...stores} {...services}>\n          <StylesProvider injectFirst>\n            <ThemeProvider theme={baseTheme}>\n              <SnackbarProvider\n                maxSnack={3}\n                classes={{ variantInfo: classes.snackbarInfo }}\n              >\n                {appComponent}\n                <CssBaseline />\n              </SnackbarProvider>\n            </ThemeProvider>\n          </StylesProvider>\n        </Provider>\n      </Router>\n    </>\n  );\n});\n","import { IEthereumProvider } from \"./cryptoWalletConnectionService/IEthereumProvider\";\nimport { CryptoWalletConnectionService } from \"./cryptoWalletConnectionService/CryptoWalletConnectionService\";\nimport { ICryptoWalletConnectionService } from \"./cryptoWalletConnectionService/ICryptoWalletConnectionService\";\n// import {\n//   GuardiansService,\n//   IGuardiansService,\n//   IOrbsClientService,\n//   OrbsClientService,\n// } from \"orbs-pos-data\";\nimport Web3 from \"web3\";\nimport configs from \"../configs\";\n\n// import { BuildOrbsClient } from \"./OrbsClientFactory\";\nimport { ISubscriptionsService } from \"./subscriptionService/ISubscriptionsService\";\nimport { SubscriptionsService } from \"./subscriptionService/SubscriptionsService\";\nimport { IOrbsTokenService, OrbsTokenService } from \"orbs-pos-data\";\nimport { IMonthlySubscriptionPlanService } from \"./monthlySubscriptionPlanService/IMonthlySubscriptionPlanService\";\nimport { MonthlySubscriptionPlanService } from \"./monthlySubscriptionPlanService/MonthlySubscriptionPlanService\";\n\nexport interface IServices {\n  cryptoWalletIntegrationService: ICryptoWalletConnectionService;\n  subscriptionsService: ISubscriptionsService;\n  orbsTokenService: IOrbsTokenService;\n  monthlySubscriptionPlanService: IMonthlySubscriptionPlanService;\n}\n\n// DEV_NOTE : For simplicity of early stage dev, we assume that we have ethereum provider, if not, we will not initialize the services.\nexport function buildServices(ethereumProvider: IEthereumProvider): IServices {\n  let web3: Web3;\n\n  if (ethereumProvider) {\n    web3 = new Web3(ethereumProvider as any);\n  } else {\n    web3 = new Web3(\n      new Web3.providers.WebsocketProvider(configs.ETHEREUM_PROVIDER_WS)\n    );\n  }\n\n  return {\n    cryptoWalletIntegrationService: new CryptoWalletConnectionService(\n      ethereumProvider\n    ),\n    subscriptionsService: new SubscriptionsService(\n      web3,\n      configs.v2contractsAddressesOverride.subscriptionContract\n    ),\n    orbsTokenService: new OrbsTokenService(\n      web3,\n      configs.v2contractsAddressesOverride.erc20Contract\n    ),\n    monthlySubscriptionPlanService: new MonthlySubscriptionPlanService(\n      web3,\n      configs.v2contractsAddressesOverride.monthlySubscriptionPlanDeployedInstance\n    ),\n  };\n}\n","import { useMemo } from \"react\";\n\nconst links = [\n  { translationKey: \"New Virtual Chain\", url: \"/new_vc\" },\n  { translationKey: \"Existing Virtual Chain\", url: \"/existing_vc\" },\n  // { translationKey: \"Recover Virtual Chain\", url: \"/recover_vc\" },\n];\n\nexport type TLinkDescriptor = {\n  label: string;\n  url: string;\n};\n\nexport const useLinkDescriptors = () => {\n  const linkDescriptors = useMemo<TLinkDescriptor[]>(() => {\n    return links.map((link) => ({\n      // TODO : O.L : Add translations\n      url: link.url,\n      label: link.translationKey,\n    }));\n  }, []);\n\n  return linkDescriptors;\n};\n","import React, { createRef, useCallback, useMemo, useRef } from \"react\";\nimport {\n  Button,\n  IconButton,\n  Menu,\n  MenuItem,\n  Popover,\n  Typography,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport { NavLink } from \"react-router-dom\";\nimport { HOVER_COLOR } from \"./Header\";\nimport { useLinkDescriptors } from \"./links\";\nimport { useBoolean } from \"react-hanger\";\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    // marginRight: theme.spacing(2),\n  },\n  typography: {\n    padding: theme.spacing(2),\n  },\n  link: {\n    width: \"100%\",\n    color: \"#ffffffb3\",\n    // marginLeft: 30,\n    transition: \"color 0.4s ease-in-out\",\n    \"&:hover\": {\n      color: HOVER_COLOR,\n    },\n  },\n}));\n\nexport const MenuPopup = React.memo((props) => {\n  const classes = useStyles();\n  const linkDescriptors = useLinkDescriptors();\n  console.log(\"Render menu\");\n\n  const { setFalse, setTrue, value } = useBoolean(false);\n\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setTrue();\n      setAnchorEl(event.currentTarget);\n    },\n    [setTrue]\n  );\n\n  const handleClose = useCallback(() => {\n    setFalse();\n    setAnchorEl(null);\n  }, [setFalse]);\n\n  const menuItemLinks = useMemo(() => {\n    return linkDescriptors.map(({ label, url }, idx) => (\n      <MenuItem onClick={() => undefined} key={label + url}>\n        <Link\n          onClick={setFalse}\n          // @ts-ignore\n          component={NavLink}\n          key={idx}\n          exact={true}\n          className={classes.link}\n          activeStyle={{ color: HOVER_COLOR }}\n          underline=\"none\"\n          to={url}\n          variant=\"h6\"\n          noWrap\n        >\n          {label}\n        </Link>\n      </MenuItem>\n    ));\n  }, [classes.link, linkDescriptors, setFalse]);\n\n  const id = value ? \"links-popover-menu\" : undefined;\n\n  return (\n    <div>\n      <IconButton\n        onClick={handleClick}\n        className={classes.menuButton}\n        color=\"inherit\"\n        aria-label=\"menu\"\n      >\n        <MenuIcon />\n      </IconButton>\n      {/* TODO : O.L : Think about using 'Menu' instead of 'Popover' */}\n      <Popover\n        id={id}\n        open={value}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        {menuItemLinks}\n      </Popover>\n    </div>\n  );\n});\n","/**\n * Copyright 2019 the orbs-ethereum-contracts authors\n * This file is part of the orbs-ethereum-contracts library in the Orbs project.\n *\n * This source code is licensed under the MIT license found in the LICENSE file in the root directory of this source tree.\n * The above notice should be included in all copies or substantial portions of the software.\n */\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport logo from \"./logo-white.svg\";\nimport {\n  Button,\n  IconButton,\n  Typography,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { MenuPopup } from \"./MenuPopup\";\nimport { useLinkDescriptors } from \"./links\";\nimport { HEADER_HEIGHT_REM } from \"../../../theme/Theme\";\nimport configs from \"../../../configs\";\n\nexport const HOVER_COLOR = \"#16faff\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    height: `${HEADER_HEIGHT_REM}rem`,\n    paddingTop: \"0.5rem\",\n    paddingBottom: \"0.5rem\",\n    boxSizing: \"border-box\",\n    // height: `${HEADER_HEIGHT_REM}rem`,\n    zIndex: theme.zIndex.drawer + 1,\n    // padding: `${theme.spacing(2)}px ${theme.spacing(8)}px`,\n    padding: theme.spacing(1),\n  },\n  logo: {\n    width: 70,\n  },\n  nav: {\n    display: \"inherit\",\n    flexWrap: \"wrap\",\n  },\n  toolbar: {\n    paddingRight: 0,\n    paddingLeft: 0,\n    // marginRight: 'auto',\n    // marginLeft: 'auto',\n    margin: \"auto\",\n    width: \"90%\",\n    maxWidth: \"90%\",\n    justifyContent: \"space-between\",\n  },\n  headerButtonsContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    margin: \"auto\",\n    width: \"90%\",\n    maxWidth: \"90%\",\n  },\n  displayInMetamaskButton: {\n    marginRight: `${theme.spacing(3)}px`,\n  },\n  movedDown: {\n    paddingTop: 48,\n  },\n  link: {\n    color: \"#ffffffb3\",\n    marginLeft: 30,\n    transition: \"color 0.4s ease-in-out\",\n    \"&:hover\": {\n      color: HOVER_COLOR,\n    },\n  },\n}));\n\n// TODO : O.L : Fix the snackbar hiding the header\nexport const Header = React.memo((props) => {\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const smallerThanSmall = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const linkDescriptors = useLinkDescriptors();\n\n  // C.F.H : add proper menu for smaller screens\n\n  const menuLinks = useMemo(() => {\n    return linkDescriptors.map(({ label, url }, idx) => (\n      <Link\n        // @ts-ignore\n        component={NavLink}\n        key={idx}\n        exact={true}\n        className={classes.link}\n        activeStyle={{ color: HOVER_COLOR }}\n        underline=\"none\"\n        to={url}\n        variant=\"h6\"\n        noWrap\n      >\n        {label}\n      </Link>\n    ));\n  }, [classes.link, linkDescriptors]);\n\n  const menu = useMemo(() => {\n    if (smallerThanSmall) {\n      return <MenuPopup />;\n    } else {\n      return <nav className={classes.nav}>{menuLinks}</nav>;\n    }\n  }, [classes.nav, menuLinks, smallerThanSmall]);\n\n  // TODO : Fix display with title\n  return (\n    <AppBar position=\"fixed\" data-testid=\"header\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <NavLink to=\"/\">\n          <img className={classes.logo} src={logo} alt=\"Orbs\" />\n        </NavLink>\n        {/*<Typography variant={\"h4\"}>VC Console</Typography>*/}\n        {menu}\n      </Toolbar>\n    </AppBar>\n  );\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    height: \"100%\",\n    width: \"fit-content\",\n    maxWidth: \"100%\",\n    boxSizing: \"border-box\",\n    paddingBottom: \"2em\",\n  },\n}));\n\nexport const Page = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { children } = props;\n  return <div className={classes.page}>{children}</div>;\n});\n","import React, { DetailedHTMLProps } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {}\nconst useStyles = makeStyles((theme) => ({\n  contentFitter: {\n    height: \"100%\",\n    width: \"fit-content\",\n    maxWidth: \"100%\",\n  },\n}));\n\nexport const ContentFitting = React.memo<\n  IProps &\n    DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\n>((props) => {\n  const classes = useStyles();\n  const { children, ...others } = props;\n  return (\n    <div className={classes.contentFitter} {...others}>\n      {children}\n    </div>\n  );\n});\n","import React, { useCallback, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { TVirtualChainSubscriptionPayload } from \"../../services/monthlySubscriptionPlanService/IMonthlySubscriptionPlanService\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSnackbar } from \"notistack\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\ninterface IProps {\n  // Form action\n  subscribeNewVC: (\n    virtualChainSubscriptionPayload: TVirtualChainSubscriptionPayload\n  ) => Promise<void>;\n  setMSPContractAllowance: (allowanceInFullOrbs: number) => void;\n\n  // Form parameters\n  monthlyRateInFullOrbs: number;\n\n  // Orbs account\n  allowanceToMSPContract: number;\n\n  // Activation flags\n  disableActionButtons?: boolean;\n}\n\ntype TFormData = {\n  name: string;\n  runOnlyOnCertifiedValidators: boolean;\n  runOnCanary: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    \"& label.Mui-focused\": {\n      color: \"#f5f5f5\",\n    },\n  },\n\n  phaseInstructionLabel: {\n    width: \"max-content\",\n    marginBottom: \"0.5rem\",\n    paddingBottom: \"0.1rem\",\n    // textDecoration: \"underline\",\n    // borderBottom: \"1px solid\",\n  },\n\n  // DEV_NOTE : O.L : For now, we give 100% to enusre united width labels with texts and icons,\n  //                  If this breaks, fix this.\n  forControlLabel: {\n    width: \"100%\",\n    \"& .MuiFormControlLabel-label\": {\n      width: \"100%\",\n    },\n  },\n\n  checkBoxes: {},\n\n  typographyAnimated: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: 0,\n    visibility: \"hidden\",\n  },\n\n  typographyAnimatedShow: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: \"100%\",\n    visibility: \"visible\",\n  },\n\n  actionButton: {\n    transition: \"background-color 0.4s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.getContrastText(theme.palette.secondary.light),\n    },\n  },\n}));\n\nexport const VirtualChainSubscriptionForm = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    subscribeNewVC,\n    disableActionButtons,\n    allowanceToMSPContract,\n    setMSPContractAllowance,\n  } = props;\n\n  const { monthlyRateInFullOrbs } = props;\n\n  // TODO : O.L : Move this and provide as prop.\n  const { enqueueSnackbar } = useSnackbar();\n  // DEV_NOTE : This flag is used to display a message about sufficient/insufficient allowance.\n  const [planOptionChanged, setPlanOptionChanged] = useState(false);\n  const [name, setName] = useState<string>(\"\");\n  const [monthsToPayForInAdvance, setMonthsToPayForInAdvance] = useState<\n    number\n  >(1);\n  const [runOnCertifiedOnly, setRunOnCertifiedOnly] = useState<boolean>(false);\n  const [runOnCanary, setRunOnCanary] = useState<boolean>(false);\n\n  const { register, handleSubmit, errors } = useForm<TFormData>();\n\n  const currentCostOfPlan = monthsToPayForInAdvance * monthlyRateInFullOrbs;\n  const hasEnoughAllowance = allowanceToMSPContract >= currentCostOfPlan;\n\n  const submit = useCallback(\n    (formData: TFormData) => {\n      if (!hasEnoughAllowance) {\n        enqueueSnackbar(\n          \"Before creating a new VC, please approve usage of your ORBS\",\n          { variant: \"info\", preventDuplicate: true }\n        );\n        return;\n      }\n\n      const virtualChainSubscriptionPayload: TVirtualChainSubscriptionPayload = {\n        name: formData.name,\n        amountInFullOrbs: currentCostOfPlan,\n        // TODO : O.L : Change these texts to proper values once decided.\n        deploymentSubset: formData.runOnCanary ? \"canary\" : \"main\",\n        isCertified: formData.runOnlyOnCertifiedValidators,\n      };\n\n      subscribeNewVC(virtualChainSubscriptionPayload);\n    },\n    [currentCostOfPlan, enqueueSnackbar, hasEnoughAllowance, subscribeNewVC]\n  );\n\n  const setAllowance = useCallback(() => {\n    setMSPContractAllowance(currentCostOfPlan);\n  }, [currentCostOfPlan, setMSPContractAllowance]);\n\n  return (\n    <form\n      onSubmit={handleSubmit((formData) => submit(formData))}\n      style={{\n        maxWidth: \"100%\",\n        // width: \"100%\",\n        width: \"60ch\",\n      }}\n    >\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        1) Fill in your VC details\n      </Typography>\n      {/* Name */}\n      <TextField\n        autoComplete={\"off\"}\n        InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n        name={\"name\"}\n        label={\"VC name\"}\n        title={\"\"}\n        variant={\"outlined\"}\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        required\n        inputRef={register}\n        fullWidth\n        className={classes.textField}\n      />\n      <br />\n      <br />\n      {/* Subscription length */}\n      <TextField\n        select\n        SelectProps={{ native: true }}\n        // InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n        name={\"subscriptionOption\"}\n        label={\"Initial Subscription\"}\n        title={\"\"}\n        variant={\"outlined\"}\n        value={monthsToPayForInAdvance}\n        onChange={(e) => {\n          setPlanOptionChanged(true);\n          setMonthsToPayForInAdvance(parseInt(e.target.value));\n        }}\n        required\n        inputRef={register}\n        fullWidth\n        className={classes.textField}\n      >\n        {/* TODO : Add proper dynamic values when dealing with the real contract */}\n        <option value={1}>1 month - {monthlyRateInFullOrbs * 1} ORBS</option>\n        <option value={3}>3 months - {monthlyRateInFullOrbs * 3} ORBS</option>\n        <option value={6}>6 months - {monthlyRateInFullOrbs * 6} ORBS</option>\n      </TextField>\n      <br />\n      <br />\n\n      {/* DEV_NOTE : O.L : For now we do not allow advanced configurations */}\n      {/*<FormControlLabel*/}\n      {/*  className={classes.forControlLabel}*/}\n      {/*  control={*/}\n      {/*    <>*/}\n      {/*      <Checkbox*/}\n      {/*        className={classes.checkBoxes}*/}\n      {/*        checked={runOnCertifiedOnly}*/}\n      {/*        onChange={(e) => setRunOnCertifiedOnly(e.target.checked)}*/}\n      {/*        name=\"runOnlyOnCertifiedValidators\"*/}\n      {/*        // color=\"primary\"*/}\n      {/*        inputRef={register}*/}\n      {/*      />*/}\n      {/*    </>*/}\n      {/*  }*/}\n      {/*  label={*/}\n      {/*    <LabelWithIconTooltip*/}\n      {/*      text={\"Run only on identified validators\"}*/}\n      {/*      tooltipText={\"Add content\"}*/}\n      {/*    />*/}\n      {/*  }*/}\n      {/*/>*/}\n      {/*<br />*/}\n\n      {/*<FormControlLabel*/}\n      {/*  className={classes.forControlLabel}*/}\n      {/*  control={*/}\n      {/*    <Checkbox*/}\n      {/*      className={classes.checkBoxes}*/}\n      {/*      checked={runOnCanary}*/}\n      {/*      onChange={(e) => setRunOnCanary(e.target.checked)}*/}\n      {/*      name=\"runOnCanary\"*/}\n      {/*      // color=\"primary\"*/}\n      {/*      inputRef={register}*/}\n      {/*    />*/}\n      {/*  }*/}\n      {/*  label={*/}\n      {/*    <LabelWithIconTooltip*/}\n      {/*      text={\"Run unstable early releases\"}*/}\n      {/*      tooltipText={\"add here as well\"}*/}\n      {/*    />*/}\n      {/*  }*/}\n      {/*/>*/}\n      {/*<br />*/}\n      {/*<br />*/}\n\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        2) Allow usage of your ORBS\n      </Typography>\n      <Typography variant={\"caption\"}>\n        Current allowance : {allowanceToMSPContract}/{currentCostOfPlan}\n      </Typography>\n      <Button\n        className={classes.actionButton}\n        variant={\"outlined\"}\n        fullWidth\n        onClick={setAllowance}\n        disabled={disableActionButtons || hasEnoughAllowance}\n        startIcon={hasEnoughAllowance ? <CheckIcon /> : null}\n      >\n        {hasEnoughAllowance\n          ? \"Sufficient allowance\"\n          : \"Approve usage of your ORBS\"}\n      </Button>\n      <br />\n      <br />\n\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        3) Create your new Virtual chain\n      </Typography>\n      <Button\n        className={classes.actionButton}\n        variant={\"outlined\"}\n        fullWidth\n        type={\"submit\"}\n        disabled={disableActionButtons}\n      >\n        Create new VC\n      </Button>\n    </form>\n  );\n});\n\nconst LabelWithIconTooltip = React.memo(\n  (props: { text: String; tooltipText: string }) => {\n    const { text, tooltipText } = props;\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {text}\n        <Tooltip title={tooltipText}>\n          <HelpOutlineIcon style={{ marginInlineStart: \"0.5rem\" }} />\n        </Tooltip>\n      </div>\n    );\n  }\n);\n","import React from \"react\";\nimport { IServices } from \"./Services\";\nimport { ICryptoWalletConnectionService } from \"./cryptoWalletConnectionService/ICryptoWalletConnectionService\";\nimport { MobXProviderContext } from \"mobx-react\";\nimport { ISubscriptionsService } from \"./subscriptionService/ISubscriptionsService\";\nimport { IMonthlySubscriptionPlanService } from \"./monthlySubscriptionPlanService/IMonthlySubscriptionPlanService\";\n\nexport function useServices(): IServices {\n  const services = React.useContext(MobXProviderContext) as IServices;\n\n  if (!services) {\n    throw new Error(\"Tried to use services before initialising them\");\n  }\n\n  return services;\n}\n\nexport function useCryptoWalletConnectionService(): ICryptoWalletConnectionService {\n  return useServices().cryptoWalletIntegrationService;\n}\n\nexport function useSubscriptionsService(): ISubscriptionsService {\n  return useServices().subscriptionsService;\n}\n\nexport function useMonthlySubscriptionPlanService(): IMonthlySubscriptionPlanService {\n  return useServices().monthlySubscriptionPlanService;\n}\n","import React from \"react\";\nimport { MobXProviderContext } from \"mobx-react\";\nimport { IStores } from \"./stores\";\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\nimport { OrbsAccountStore } from \"./OrbsAccountStore\";\n\nexport function useStores(): IStores {\n  // @ts-ignore\n  return React.useContext(MobXProviderContext);\n}\n\nexport function useCryptoWalletIntegrationStore(): CryptoWalletConnectionStore {\n  return useStores().cryptoWalletIntegrationStore;\n}\n\nexport function useOrbsAccountStore(): OrbsAccountStore {\n  return useStores().orbsAccountStore;\n}\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\ninterface IProps {\n  // Dialog\n  open: boolean;\n  // handleClose: () => void;\n  onAccept: () => void;\n  onCancel: () => void;\n\n  // Content\n  title: string;\n  contentText: string;\n  acceptText?: string;\n  cancelText?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  dialogPaper: {\n    \"& .MuiDialog-paper\": {\n      border: `4px double ${theme.palette.secondary.main}`,\n      boxShadow: \"none\",\n    },\n  },\n}));\n\nexport const ActionConfirmationModal = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    open,\n    onAccept,\n    onCancel,\n    // handleClose,\n    title,\n    contentText,\n    acceptText,\n    cancelText,\n  } = props;\n  const theme = useTheme();\n  // const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const fullScreen = false;\n\n  return (\n    <Dialog\n      className={classes.dialogPaper}\n      fullScreen={fullScreen}\n      open={open}\n      onClose={onCancel}\n      aria-labelledby=\"action-confirmation-dialog\"\n      maxWidth={\"xs\"}\n      style={{}}\n    >\n      <DialogTitle id=\"action-confirmation-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{contentText}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          autoFocus\n          onClick={onCancel}\n          color=\"secondary\"\n          variant={\"contained\"}\n        >\n          {cancelText || \"Cancel\"}\n        </Button>\n        <Button\n          onClick={onAccept}\n          color=\"secondary\"\n          autoFocus\n          variant={\"contained\"}\n        >\n          {acceptText || \"Accept\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n});\n","export const ROUTES = {\n  newVc: \"/new_vc\",\n  existingVc: \"/existing_vc\",\n  recoverVc: \"/recover_vc\",\n  vcCreated: \"/vc_created\",\n  vcExtended: \"/vc_extended\",\n};\n","import React, { useCallback, useState } from \"react\";\nimport { Page } from \"../components/structure/Page\";\nimport configs from \"../configs\";\nimport VirtualChainSubscription from \"../VirtualChainSubscription\";\nimport Web3 from \"web3\";\nimport { ContentFitting } from \"../components/structure/ContentFitting\";\nimport { VirtualChainSubscriptionForm } from \"../components/forms/VirtualChainSubscriptionForm\";\nimport { TVirtualChainSubscriptionPayload } from \"../services/monthlySubscriptionPlanService/IMonthlySubscriptionPlanService\";\nimport { useMonthlySubscriptionPlanService } from \"../services/servicesHooks\";\nimport { Typography } from \"@material-ui/core\";\nimport { useOrbsAccountStore } from \"../store/storeHooks\";\nimport { weiOrbsFromFullOrbs } from \"../cryptoUtils/unitConverter\";\nimport { ActionConfirmationModal } from \"../components/modals/ActionConfirmationModal\";\nimport { useSnackbar } from \"notistack\";\nimport { observer } from \"mobx-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ROUTES } from \"../constants/routes\";\n\ninterface IProps {}\n\nexport const NewVCPage = observer<React.FunctionComponent<IProps>>((props) => {\n  const orbsAccountStore = useOrbsAccountStore();\n  const history = useHistory();\n  const [runningTx, setRunningTx] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [dialogTexts, setDialogTexts] = useState<{\n    title: string;\n    content: string;\n    acceptText?: string;\n    cancelText?: string;\n    onCancelMessage?: string;\n  }>({ title: \"\", content: \"\" });\n  const [onDialogAccept, setOnDialogAccept] = useState(() => () =>\n    console.log(\"Accepted\")\n  );\n\n  const monthlySubscriptionPlanService = useMonthlySubscriptionPlanService();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const setMSPContractAllowance = useCallback(\n    (allowanceInFullOrbs: number) => {\n      orbsAccountStore.setAllowanceForStakingContract(\n        weiOrbsFromFullOrbs(allowanceInFullOrbs)\n      );\n    },\n    [orbsAccountStore]\n  );\n\n  const createNewVc = useCallback(\n    async (\n      virtualChainSubscriptionPayload: TVirtualChainSubscriptionPayload\n    ) => {\n      try {\n        const vcId = await orbsAccountStore.createNewVc(\n          virtualChainSubscriptionPayload\n        );\n        enqueueSnackbar(\"VC Created !\", { variant: \"success\" });\n\n        history.push(`${ROUTES.vcCreated}/${vcId}`);\n      } catch (e) {\n        console.log(e);\n        enqueueSnackbar(`TX Error !`, { variant: \"error\" });\n      }\n    },\n    [enqueueSnackbar, history, orbsAccountStore]\n  );\n\n  const showCreateVcDialog = useCallback(\n    async (\n      virtualChainSubscriptionPayload: TVirtualChainSubscriptionPayload\n    ) => {\n      console.log(virtualChainSubscriptionPayload);\n      setDialogTexts({\n        title: `Create new virtual chain ${virtualChainSubscriptionPayload.name}`,\n        content: 'Please click \"Create\" and accept the transaction.',\n        acceptText: \"Create\",\n        onCancelMessage: \"VC creation canceled\",\n      });\n      setShowModal(true);\n      setOnDialogAccept(() => () =>\n        createNewVc(virtualChainSubscriptionPayload)\n      );\n\n      try {\n        // const res = await monthlySubscriptionPlanService.createANewVC(\n        //   virtualChainSubscriptionPayload\n        // );\n        // console.log(res);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [createNewVc]\n  );\n\n  const showSetMSPContractAllowanceDialog = useCallback(\n    (allowanceInFullOrbs: number) => {\n      setDialogTexts({\n        title: `Set allowance of ${allowanceInFullOrbs} ORBS`,\n        content: 'Please click \"Allow\" and accept the transaction.',\n        acceptText: \"Allow\",\n        onCancelMessage: \"Action canceled\",\n      });\n      setShowModal(true);\n      setOnDialogAccept(() => () =>\n        setMSPContractAllowance(allowanceInFullOrbs)\n      );\n    },\n    [setMSPContractAllowance]\n  );\n\n  return (\n    <Page>\n      <ContentFitting>\n        {/*<VirtualChainSubscription*/}\n        {/*  web3={{} as Web3}*/}\n        {/*  config={configs}*/}\n        {/*  virtualChainId=\"0x0000000000000000000000000000000000000000000000000000000000000001\"*/}\n        {/*  buttonLabel=\"Create\"*/}\n        {/*  subscriptionLabel=\"Initial subscription\"*/}\n        {/*/>*/}\n        <VirtualChainSubscriptionForm\n          subscribeNewVC={showCreateVcDialog}\n          allowanceToMSPContract={orbsAccountStore.allowanceToMSPContract}\n          setMSPContractAllowance={showSetMSPContractAllowanceDialog}\n          monthlyRateInFullOrbs={\n            orbsAccountStore.mspContractParameters.monthlyRateInFullOrbs\n          }\n        />\n        <ActionConfirmationModal\n          open={showModal}\n          onAccept={() => {\n            setShowModal(false);\n            onDialogAccept();\n          }}\n          onCancel={() => {\n            setShowModal(false);\n            if (dialogTexts.onCancelMessage) {\n              enqueueSnackbar(dialogTexts.onCancelMessage, {\n                variant: \"info\",\n                preventDuplicate: true,\n              });\n            }\n          }}\n          title={dialogTexts.title}\n          contentText={dialogTexts.content}\n        />\n      </ContentFitting>\n    </Page>\n  );\n});\n","import React, { useCallback, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { TVirtualChainSubscriptionPayload } from \"../../services/monthlySubscriptionPlanService/IMonthlySubscriptionPlanService\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSnackbar } from \"notistack\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\ninterface IProps {\n  // Form action\n  onActionClick: (vcId: string) => void;\n\n  // Texts\n  actionButtonText?: string;\n}\n\ntype TFormData = {\n  vcId: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    \"& label.Mui-focused\": {\n      color: \"#f5f5f5\",\n    },\n  },\n\n  phaseInstructionLabel: {\n    width: \"max-content\",\n    marginBottom: \"0.5rem\",\n    paddingBottom: \"0.1rem\",\n    // textDecoration: \"underline\",\n    // borderBottom: \"1px solid\",\n  },\n\n  // DEV_NOTE : O.L : For now, we give 100% to enusre united width labels with texts and icons,\n  //                  If this breaks, fix this.\n  forControlLabel: {\n    width: \"100%\",\n    \"& .MuiFormControlLabel-label\": {\n      width: \"100%\",\n    },\n  },\n\n  checkBoxes: {},\n\n  typographyAnimated: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: 0,\n    visibility: \"hidden\",\n  },\n\n  typographyAnimatedShow: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: \"100%\",\n    visibility: \"visible\",\n  },\n\n  actionButton: {\n    transition: \"background-color 0.4s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.getContrastText(theme.palette.secondary.light),\n    },\n  },\n}));\n\nexport const VcIdForm = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { actionButtonText, onActionClick } = props;\n\n  const [vcId, setVcId] = useState<string>(\"\");\n\n  const { register, handleSubmit, errors } = useForm<TFormData>();\n\n  const submit = useCallback(\n    (formData: TFormData) => {\n      onActionClick(formData.vcId);\n    },\n    [onActionClick]\n  );\n\n  return (\n    <form\n      onSubmit={handleSubmit((formData) => submit(formData))}\n      style={{\n        maxWidth: \"100%\",\n        // width: \"100%\",\n        width: \"60ch\",\n      }}\n    >\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        Please enter your VC Id\n      </Typography>\n      {/* Name */}\n      <TextField\n        autoComplete={\"off\"}\n        InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n        name={\"vcId\"}\n        label={\"Virtual chain ID\"}\n        title={\"\"}\n        variant={\"outlined\"}\n        value={vcId}\n        onChange={(e) => setVcId(e.target.value)}\n        required\n        inputRef={register}\n        fullWidth\n        className={classes.textField}\n      />\n      <br />\n      <br />\n\n      <Button\n        className={classes.actionButton}\n        variant={\"outlined\"}\n        fullWidth\n        type={\"submit\"}\n      >\n        {actionButtonText}\n      </Button>\n    </form>\n  );\n});\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useSubscriptionsService } from \"../servicesHooks\";\n\ntype TVcData = {\n  id: string;\n  name: string;\n  payedUntil: number;\n};\n\ntype TUseVcDataHookResponse = {\n  vcData: TVcData;\n  isLoading: boolean;\n  errorFindingVc: boolean;\n};\n\nexport function useVcDataHook(vcId: string): TUseVcDataHookResponse {\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorFindingVc, setErrorFindingVc] = useState(false);\n  const [vcData, setVcData] = useState<TVcData>({\n    id: \"\",\n    name: \"\",\n    payedUntil: 0,\n  });\n  const subscriptionsService = useSubscriptionsService();\n\n  const readVcData = useCallback(\n    async (id) => {\n      const readVcDataResponse = await subscriptionsService.readVcData(id);\n      const vcData: TVcData = {\n        id,\n        name: readVcDataResponse.name,\n        payedUntil: parseInt(readVcDataResponse.expiresAt),\n      };\n\n      return vcData;\n    },\n    [subscriptionsService]\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n    setErrorFindingVc(false);\n    readVcData(vcId)\n      .then((vcData) => {\n        setIsLoading(false);\n        setVcData(vcData);\n      })\n      .catch(() => {\n        setIsLoading(false);\n        setErrorFindingVc(true);\n      });\n  }, [readVcData, vcId]);\n\n  return {\n    errorFindingVc,\n    isLoading,\n    vcData,\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { AppWrapper } from \"./AppWrapper\";\nimport App from \"./App\";\nimport { NoEthereumProviderPage } from \"./pages/NoEthereumProviderPage\";\n\nconst hasEthereumProvider = !!(window as any).ethereum;\n\nlet AppComponent;\n\nif (hasEthereumProvider) {\n  AppComponent = <App />;\n} else {\n  AppComponent = <NoEthereumProviderPage />;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWrapper appComponent={AppComponent} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useCallback, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Moment from \"moment\";\n\ninterface IProps {\n  vcId: string;\n  vcName: string;\n  paidUntil: number;\n}\n\ntype TFormData = {\n  name: string;\n  runOnlyOnCertifiedValidators: boolean;\n  runOnCanary: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    \"& label.Mui-focused\": {\n      color: \"#f5f5f5\",\n    },\n  },\n\n  phaseInstructionLabel: {\n    width: \"max-content\",\n    marginBottom: \"0.5rem\",\n    paddingBottom: \"0.1rem\",\n    // textDecoration: \"underline\",\n    // borderBottom: \"1px solid\",\n  },\n\n  // DEV_NOTE : O.L : For now, we give 100% to enusre united width labels with texts and icons,\n  //                  If this breaks, fix this.\n  forControlLabel: {\n    width: \"100%\",\n    \"& .MuiFormControlLabel-label\": {\n      width: \"100%\",\n    },\n  },\n\n  checkBoxes: {},\n\n  typographyAnimated: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: 0,\n    visibility: \"hidden\",\n  },\n\n  typographyAnimatedShow: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: \"100%\",\n    visibility: \"visible\",\n  },\n\n  actionButton: {\n    transition: \"background-color 0.4s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.getContrastText(theme.palette.secondary.light),\n    },\n  },\n}));\n\nexport const VirtualChainSubscriptionForm = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { paidUntil, vcId, vcName } = props;\n\n  console.log({ paidUntil });\n  return (\n    <form\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        maxWidth: \"100%\",\n        // width: \"100%\",\n        width: \"60ch\",\n        textAlign: \"center\",\n      }}\n    >\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"h5\"}\n        color={\"secondary\"}\n      >\n        Virtual chain ID\n      </Typography>\n      <Typography className={classes.phaseInstructionLabel} variant={\"h6\"}>\n        {vcId}\n      </Typography>\n\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"h5\"}\n        color={\"secondary\"}\n      >\n        Virtual chain Name\n      </Typography>\n      <Typography className={classes.phaseInstructionLabel} variant={\"h6\"}>\n        {vcName}\n      </Typography>\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"h5\"}\n        color={\"secondary\"}\n      >\n        Paid Until\n      </Typography>\n      <Typography className={classes.phaseInstructionLabel} variant={\"h6\"}>\n        {Moment.unix(paidUntil).format(\"MMM DD, YYYY\")}\n      </Typography>\n    </form>\n  );\n});\n","import React, { useCallback, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSnackbar } from \"notistack\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\ninterface IProps {\n  // Form action\n  extendVcSubscription: (amount: number) => Promise<void>;\n  setMSPContractAllowance: (allowanceInFullOrbs: number) => void;\n\n  // Form parameters\n  monthlyRateInFullOrbs: number;\n\n  // Orbs account\n  allowanceToMSPContract: number;\n\n  // Activation flags\n  disableActionButtons?: boolean;\n}\n\ntype TFormData = {\n  name: string;\n  runOnlyOnCertifiedValidators: boolean;\n  runOnCanary: boolean;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    \"& label.Mui-focused\": {\n      color: \"#f5f5f5\",\n    },\n  },\n\n  phaseInstructionLabel: {\n    width: \"max-content\",\n    marginBottom: \"0.5rem\",\n    paddingBottom: \"0.1rem\",\n    // textDecoration: \"underline\",\n    // borderBottom: \"1px solid\",\n  },\n\n  // DEV_NOTE : O.L : For now, we give 100% to enusre united width labels with texts and icons,\n  //                  If this breaks, fix this.\n  forControlLabel: {\n    width: \"100%\",\n    \"& .MuiFormControlLabel-label\": {\n      width: \"100%\",\n    },\n  },\n\n  checkBoxes: {},\n\n  typographyAnimated: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: 0,\n    visibility: \"hidden\",\n  },\n\n  typographyAnimatedShow: {\n    transition: \"height 5s, visibility 5s linear, background-color 2s\",\n    height: \"100%\",\n    visibility: \"visible\",\n  },\n\n  actionButton: {\n    transition: \"background-color 0.4s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.getContrastText(theme.palette.secondary.light),\n    },\n  },\n}));\n\nexport const VcSubscriptionExtensionForm = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    extendVcSubscription,\n    disableActionButtons,\n    allowanceToMSPContract,\n    setMSPContractAllowance,\n  } = props;\n\n  const { monthlyRateInFullOrbs } = props;\n\n  // TODO : O.L : Move this and provide as prop.\n  const { enqueueSnackbar } = useSnackbar();\n  // DEV_NOTE : This flag is used to display a message about sufficient/insufficient allowance.\n  const [planOptionChanged, setPlanOptionChanged] = useState(false);\n  const [name, setName] = useState<string>(\"\");\n  const [monthsToPayForInAdvance, setMonthsToPayForInAdvance] = useState<\n    number\n  >(1);\n  const [runOnCertifiedOnly, setRunOnCertifiedOnly] = useState<boolean>(false);\n  const [runOnCanary, setRunOnCanary] = useState<boolean>(false);\n\n  const { register, handleSubmit, errors } = useForm<TFormData>();\n\n  const currentCostOfPlan = monthsToPayForInAdvance * monthlyRateInFullOrbs;\n  const hasEnoughAllowance = allowanceToMSPContract >= currentCostOfPlan;\n\n  const submit = useCallback(\n    (formData: TFormData) => {\n      if (!hasEnoughAllowance) {\n        enqueueSnackbar(\n          \"Before extending your VC subscription, please approve usage of your ORBS\",\n          { variant: \"info\", preventDuplicate: true }\n        );\n        return;\n      }\n\n      extendVcSubscription(currentCostOfPlan);\n    },\n    [\n      hasEnoughAllowance,\n      currentCostOfPlan,\n      extendVcSubscription,\n      enqueueSnackbar,\n    ]\n  );\n\n  const setAllowance = useCallback(() => {\n    setMSPContractAllowance(currentCostOfPlan);\n  }, [currentCostOfPlan, setMSPContractAllowance]);\n\n  return (\n    <form\n      onSubmit={handleSubmit((formData) => submit(formData))}\n      style={{\n        maxWidth: \"100%\",\n        // width: \"100%\",\n        width: \"60ch\",\n      }}\n    >\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        1) Select how many months to extend by\n      </Typography>\n      {/* Subscription length */}\n      <TextField\n        select\n        SelectProps={{ native: true }}\n        // InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n        name={\"subscriptionOption\"}\n        label={\"Initial Subscription\"}\n        title={\"\"}\n        variant={\"outlined\"}\n        value={monthsToPayForInAdvance}\n        onChange={(e) => {\n          setPlanOptionChanged(true);\n          setMonthsToPayForInAdvance(parseInt(e.target.value));\n        }}\n        required\n        inputRef={register}\n        fullWidth\n        className={classes.textField}\n      >\n        {/* TODO : Add proper dynamic values when dealing with the real contract */}\n        <option value={1}>\n          1 month extension - {monthlyRateInFullOrbs * 1} ORBS\n        </option>\n        <option value={3}>\n          3 months extension - {monthlyRateInFullOrbs * 3} ORBS\n        </option>\n        <option value={6}>\n          6 months extension - {monthlyRateInFullOrbs * 6} ORBS\n        </option>\n      </TextField>\n\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        2) Allow usage of your ORBS\n      </Typography>\n      <Typography variant={\"caption\"}>\n        Current allowance : {allowanceToMSPContract}/{currentCostOfPlan}\n      </Typography>\n      <Button\n        className={classes.actionButton}\n        variant={\"outlined\"}\n        fullWidth\n        onClick={setAllowance}\n        disabled={disableActionButtons || hasEnoughAllowance}\n        startIcon={hasEnoughAllowance ? <CheckIcon /> : null}\n      >\n        {hasEnoughAllowance\n          ? \"Sufficient allowance\"\n          : \"Approve usage of your ORBS\"}\n      </Button>\n      <br />\n      <br />\n\n      <Typography\n        className={classes.phaseInstructionLabel}\n        variant={\"body1\"}\n        color={\"secondary\"}\n      >\n        3) Extend your subscription\n      </Typography>\n      <Button\n        className={classes.actionButton}\n        variant={\"outlined\"}\n        fullWidth\n        type={\"submit\"}\n        disabled={disableActionButtons}\n      >\n        Extend VC subscription\n      </Button>\n    </form>\n  );\n});\n\nconst LabelWithIconTooltip = React.memo(\n  (props: { text: String; tooltipText: string }) => {\n    const { text, tooltipText } = props;\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {text}\n        <Tooltip title={tooltipText}>\n          <HelpOutlineIcon style={{ marginInlineStart: \"0.5rem\" }} />\n        </Tooltip>\n      </div>\n    );\n  }\n);\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { Page } from \"../components/structure/Page\";\nimport ExistingVirtualChain from \"../ExistingVirtualChain\";\nimport Web3 from \"web3\";\nimport configs from \"../configs\";\nimport { VcIdForm } from \"../components/forms/VcIdForm\";\nimport { useVcDataHook } from \"../services/subscriptionService/subscriptionServiceHooks\";\nimport { Typography } from \"@material-ui/core\";\nimport { observer } from \"mobx-react\";\nimport { VirtualChainSubscriptionForm } from \"../components/forms/VirtualChainDetailsForm\";\nimport { useOrbsAccountStore } from \"../store/storeHooks\";\nimport {\n  TVirtualChainSubscriptionExtensionPayload,\n  TVirtualChainSubscriptionPayload,\n} from \"../services/monthlySubscriptionPlanService/IMonthlySubscriptionPlanService\";\nimport { useSnackbar } from \"notistack\";\nimport { VcSubscriptionExtensionForm } from \"../components/forms/VcSubscriptionExtensionForm\";\nimport { ActionConfirmationModal } from \"../components/modals/ActionConfirmationModal\";\nimport { ContentFitting } from \"../components/structure/ContentFitting\";\nimport { weiOrbsFromFullOrbs } from \"../cryptoUtils/unitConverter\";\nimport { ROUTES } from \"../constants/routes\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface IProps {}\n\nexport const ExistingVCPage = observer<React.FunctionComponent<IProps>>(\n  (props) => {\n    const orbsAccountStore = useOrbsAccountStore();\n    const [vcId, setVcId] = useState(\"\");\n    const { enqueueSnackbar } = useSnackbar();\n    const { vcData, errorFindingVc, isLoading } = useVcDataHook(vcId);\n    const history = useHistory();\n\n    // TODO : ORL : The whole modal logic is duplicated from 'NewVcPage' - Unite them properly\n    const [showModal, setShowModal] = useState(false);\n    const [onDialogAccept, setOnDialogAccept] = useState(() => () =>\n      console.log(\"Accepted\")\n    );\n    const [dialogTexts, setDialogTexts] = useState<{\n      title: string;\n      content: string;\n      acceptText?: string;\n      cancelText?: string;\n      onCancelMessage?: string;\n    }>({ title: \"\", content: \"\" });\n\n    const onOpenVcClicked = useCallback((vcId: string) => {\n      setVcId(vcId);\n    }, []);\n\n    const setMSPContractAllowance = useCallback(\n      (allowanceInFullOrbs: number) => {\n        orbsAccountStore.setAllowanceForStakingContract(\n          weiOrbsFromFullOrbs(allowanceInFullOrbs)\n        );\n      },\n      [orbsAccountStore]\n    );\n\n    const showSetMSPContractAllowanceDialog = useCallback(\n      (allowanceInFullOrbs: number) => {\n        setDialogTexts({\n          title: `Set allowance of ${allowanceInFullOrbs} ORBS`,\n          content: 'Please click \"Allow\" and accept the transaction.',\n          acceptText: \"Allow\",\n          onCancelMessage: \"Action canceled\",\n        });\n        setShowModal(true);\n        setOnDialogAccept(() => () =>\n          setMSPContractAllowance(allowanceInFullOrbs)\n        );\n      },\n      [setMSPContractAllowance]\n    );\n\n    const extendVcSubscription = useCallback(\n      async (amountInFullOrbs: number) => {\n        const virtualChainSubscriptionExtensionPayload: TVirtualChainSubscriptionExtensionPayload = {\n          amountInFullOrbs,\n          vcId,\n        };\n\n        try {\n          await orbsAccountStore.extendExistingVcSubscription(\n            virtualChainSubscriptionExtensionPayload\n          );\n          enqueueSnackbar(\"Subscription extended !\", { variant: \"success\" });\n          history.push(`${ROUTES.vcExtended}/${vcId}`);\n        } catch (e) {\n          console.error(e);\n          enqueueSnackbar(`TX Error !`, { variant: \"error\" });\n        }\n      },\n      [enqueueSnackbar, history, orbsAccountStore, vcId]\n    );\n\n    const showSelectVcForm = vcId.length === 0;\n\n    const vcContent = useMemo(() => {\n      if (showSelectVcForm) {\n        return null;\n      } else if (isLoading) {\n        return <Typography>Loading...</Typography>;\n      } else if (errorFindingVc) {\n        return (\n          <Typography color={\"error\"}>\n            Error finding Virtual Chain {vcId}\n          </Typography>\n        );\n      } else {\n        return (\n          <>\n            <br />\n            <VirtualChainSubscriptionForm\n              paidUntil={vcData.payedUntil}\n              vcName={vcData.name}\n              vcId={vcData.id}\n            />\n            <VcSubscriptionExtensionForm\n              monthlyRateInFullOrbs={\n                orbsAccountStore.mspContractParameters.monthlyRateInFullOrbs\n              }\n              setMSPContractAllowance={showSetMSPContractAllowanceDialog}\n              allowanceToMSPContract={orbsAccountStore.allowanceToMSPContract}\n              extendVcSubscription={extendVcSubscription}\n            />\n          </>\n        );\n      }\n    }, [\n      errorFindingVc,\n      extendVcSubscription,\n      isLoading,\n      orbsAccountStore.allowanceToMSPContract,\n      orbsAccountStore.mspContractParameters.monthlyRateInFullOrbs,\n      showSelectVcForm,\n      showSetMSPContractAllowanceDialog,\n      vcData.id,\n      vcData.name,\n      vcData.payedUntil,\n      vcId,\n    ]);\n\n    return (\n      <Page>\n        {showSelectVcForm && (\n          <VcIdForm onActionClick={onOpenVcClicked} actionButtonText={\"Open\"} />\n        )}\n        {/*<ExistingVirtualChain web3={{} as Web3} config={configs} />*/}\n        {vcContent}\n        <ActionConfirmationModal\n          open={showModal}\n          onAccept={() => {\n            setShowModal(false);\n            onDialogAccept();\n          }}\n          onCancel={() => {\n            setShowModal(false);\n            if (dialogTexts.onCancelMessage) {\n              enqueueSnackbar(dialogTexts.onCancelMessage, {\n                variant: \"info\",\n                preventDuplicate: true,\n              });\n            }\n          }}\n          title={dialogTexts.title}\n          contentText={dialogTexts.content}\n        />\n      </Page>\n    );\n  }\n);\n","import React from \"react\";\nimport { Page } from \"../components/structure/Page\";\n\ninterface IProps {}\n\nexport const RecoverVCPage = React.memo<IProps>((props) => {\n  return <Page>Recover VC Page</Page>;\n});\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { ContentFitting } from \"../components/structure/ContentFitting\";\nimport { Page } from \"../components/structure/Page\";\nimport { VirtualChainSubscriptionForm } from \"../components/forms/VirtualChainDetailsForm\";\nimport { Typography, useTheme } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport { useSubscriptionsService } from \"../services/servicesHooks\";\nimport { useVcDataHook } from \"../services/subscriptionService/subscriptionServiceHooks\";\n\ninterface IProps {}\n\ntype TRouteParams = {\n  vcId: string;\n};\n\nexport const VcCreationSuccessPage = React.memo<IProps>((props) => {\n  const theme = useTheme();\n\n  const { vcId } = useParams<TRouteParams>();\n  const { vcData, errorFindingVc, isLoading } = useVcDataHook(vcId);\n\n  if (isLoading) {\n    return (\n      <Page>\n        <ContentFitting\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h3\"}\n            style={{ color: theme.palette.error.main }}\n          >\n            Loading...\n          </Typography>\n        </ContentFitting>\n      </Page>\n    );\n  } else if (errorFindingVc) {\n    return (\n      <Page>\n        <ContentFitting\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h3\"}\n            style={{ color: theme.palette.error.main }}\n          >\n            Error finding Virtual chain\n          </Typography>\n          <Typography variant={\"h3\"}>{vcId}</Typography>\n        </ContentFitting>\n      </Page>\n    );\n  }\n\n  // TODO : O.L : Fix the centering of the elements to be more elegant\n\n  return (\n    <Page>\n      <ContentFitting>\n        <div\n          style={{\n            padding: \"0.5rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            textAlign: \"center\",\n            marginRight: \"auto\",\n            marginLeft: \"auto\",\n          }}\n        >\n          <VirtualChainSubscriptionForm\n            vcId={vcId}\n            vcName={vcData.name}\n            paidUntil={vcData.payedUntil}\n          />{\" \"}\n        </div>\n        <div\n          style={{\n            padding: \"0.5rem\",\n            width: \"fit-content\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            textAlign: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h4\"}\n            color={\"secondary\"}\n            style={{ fontWeight: \"bold\" }}\n          >\n            Important:\n          </Typography>\n          <Typography variant={\"h4\"}>\n            Please keep the virtual Chain ID for future use.\n          </Typography>\n        </div>\n      </ContentFitting>\n    </Page>\n  );\n});\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { ContentFitting } from \"../components/structure/ContentFitting\";\nimport { Page } from \"../components/structure/Page\";\nimport { VirtualChainSubscriptionForm } from \"../components/forms/VirtualChainDetailsForm\";\nimport { Typography, useTheme } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport { useSubscriptionsService } from \"../services/servicesHooks\";\nimport { useVcDataHook } from \"../services/subscriptionService/subscriptionServiceHooks\";\n\ninterface IProps {}\n\ntype TRouteParams = {\n  vcId: string;\n};\n\nexport const VcExtensionSuccessPage = React.memo<IProps>((props) => {\n  const theme = useTheme();\n\n  const { vcId } = useParams<TRouteParams>();\n  const { vcData, errorFindingVc, isLoading } = useVcDataHook(vcId);\n\n  if (isLoading) {\n    return (\n      <Page>\n        <ContentFitting\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h3\"}\n            style={{ color: theme.palette.error.main }}\n          >\n            Loading...\n          </Typography>\n        </ContentFitting>\n      </Page>\n    );\n  } else if (errorFindingVc) {\n    return (\n      <Page>\n        <ContentFitting\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography\n            variant={\"h3\"}\n            style={{ color: theme.palette.error.main }}\n          >\n            Error finding Virtual chain\n          </Typography>\n          <Typography variant={\"h3\"}>{vcId}</Typography>\n        </ContentFitting>\n      </Page>\n    );\n  }\n\n  // TODO : O.L : Fix the centering of the elements to be more elegant\n\n  return (\n    <Page>\n      <ContentFitting>\n        <div\n          style={{\n            padding: \"0.5rem\",\n            width: \"fit-content\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            textAlign: \"center\",\n          }}\n        >\n          <Typography variant={\"h4\"}>\n            Vc subscription successfully extended !\n          </Typography>\n        </div>\n        <div\n          style={{\n            padding: \"0.5rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            textAlign: \"center\",\n            marginRight: \"auto\",\n            marginLeft: \"auto\",\n          }}\n        >\n          <VirtualChainSubscriptionForm\n            vcId={vcId}\n            vcName={vcData.name}\n            paidUntil={vcData.payedUntil}\n          />{\" \"}\n        </div>\n      </ContentFitting>\n    </Page>\n  );\n});\n","import React, { DetailedHTMLProps } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {\n  text: string;\n  href?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    color: theme.palette.secondary.light,\n    \"&:hover\": {\n      color: theme.palette.secondary.main,\n    },\n  },\n}));\n\nexport const InTextLink = React.memo<\n  IProps &\n    DetailedHTMLProps<\n      React.AnchorHTMLAttributes<HTMLAnchorElement>,\n      HTMLAnchorElement\n    >\n>((props) => {\n  const classes = useStyles();\n  const { text, href, ...others } = props;\n  return (\n    <a\n      className={classes.link}\n      href={href || \"\"}\n      target={\"_blank\"}\n      rel={\"noopener noreferrer\"}\n      // style={{ display: \"inline\" }}\n      {...others}\n    >\n      {text}\n    </a>\n  );\n});\n","import React from \"react\";\nimport {\n  Button,\n  FormControlLabel,\n  Typography,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport { useBoolean } from \"react-hanger\";\nimport { renderToString } from \"react-dom/server\";\nimport configs from \"../configs\";\nimport { InTextLink } from \"../components/InTextLink\";\nimport { baseTheme } from \"../theme/Theme\";\n\ntype TWalletConnectionPhase = \"install\" | \"connect\";\n\ninterface IProps {\n  walletConnectionPhase: TWalletConnectionPhase;\n  actionFunction: () => void;\n  pressedOnInstall?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  noEthereumProviderSection: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    // justifyContent: \"space-between\",\n    padding: \"2em\",\n    backgroundColor: \"rgba(0,0,0, 0.2)\",\n    borderRadius: \"5%\",\n    // width: \"clamp(20%, 40em, 100%)\",\n    width: \"fit-content\",\n    maxWidth: \"100%\",\n    boxSizing: \"border-box\",\n    // height: \"clamp(max(25%, 200px), 8em, 50%)\",\n  },\n}));\n\nexport const NoEthereumProviderSection = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { walletConnectionPhase, actionFunction, pressedOnInstall } = props;\n\n  const tickerValue = useBoolean(false);\n\n  const shouldDisplayLegalTicker = walletConnectionPhase === \"connect\";\n  const buttonIsEnabled = !shouldDisplayLegalTicker || tickerValue.value;\n\n  const isInstall = walletConnectionPhase === \"install\";\n\n  const titleText = isInstall\n    ? \"No Ethereum provider detected\"\n    : \"Please connect\";\n  const subTitleText = isInstall\n    ? \"you should install MetaMask and refresh the page\"\n    : \"To begin, connect your wallet\";\n  const buttonText =\n    walletConnectionPhase === \"install\" ? \"Install\" : \"Connect\";\n\n  const innerHtmlForLegalAgreement = renderToString(\n    <ThemeProvider theme={baseTheme}>\n      <Typography>\n        I agree to the{\" \"}\n        <InTextLink href={configs.termsOfUseUrl} text={\"Terms of Use\"} /> and{\" \"}\n        <InTextLink href={configs.privacyPolicyUrl} text={\"Privacy Policy\"} />\n      </Typography>\n    </ThemeProvider>\n  );\n\n  return (\n    <div className={classes.noEthereumProviderSection}>\n      <Typography style={{ marginBottom: \"0.5rem\" }} variant={\"h4\"}>\n        {titleText}\n      </Typography>\n      <Typography style={{ marginBottom: \"1rem\" }}>{subTitleText}</Typography>\n      <Button\n        variant={\"outlined\"}\n        onClick={actionFunction}\n        disabled={!buttonIsEnabled}\n      >\n        {buttonText}\n      </Button>\n      {shouldDisplayLegalTicker && (\n        <FormControlLabel\n          style={{\n            marginTop: \"0.5rem\",\n          }}\n          control={\n            <Checkbox\n              checked={tickerValue.value}\n              onChange={(e) => tickerValue.setValue(e.target.checked)}\n              name={\"legalTicker\"}\n            />\n          }\n          label={\n            <Typography\n              // onClick={(e) => e.preventDefault()}\n              dangerouslySetInnerHTML={{ __html: innerHtmlForLegalAgreement }}\n            />\n          }\n        />\n      )}\n    </div>\n  );\n});\n","import React, { useMemo } from \"react\";\nimport \"./App.css\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Header } from \"./components/structure/header/Header\";\nimport { HEADER_HEIGHT_REM } from \"./theme/Theme\";\nimport { Route, RouteProps, Switch } from \"react-router-dom\";\nimport { NewVCPage } from \"./pages/NewVCPage\";\nimport { ExistingVCPage } from \"./pages/ExistingVCPage\";\nimport { RecoverVCPage } from \"./pages/RecoverVcPage\";\nimport { ROUTES } from \"./constants/routes\";\nimport { VcCreationSuccessPage } from \"./pages/VcCreationSuccessPage\";\nimport { VcExtensionSuccessPage } from \"./pages/VcExtensionSuccessPage\";\nimport { observer } from \"mobx-react\";\nimport { useCryptoWalletIntegrationStore } from \"./store/storeHooks\";\nimport { Page } from \"./components/structure/Page\";\nimport { ContentFitting } from \"./components/structure/ContentFitting\";\nimport { NoEthereumProviderSection } from \"./pages/NoEthereumProviderSection\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  appMain: {\n    height: \"100%\",\n    maxWidth: \"90%\",\n    boxSizing: \"border-box\",\n    padding: theme.spacing(2),\n  },\n\n  headerSeparator: {\n    height: `${HEADER_HEIGHT_REM}rem`,\n  },\n\n  mainWrapper: {\n    backgroundColor: \"#06142e\",\n    backgroundRepeat: \"repeat-y\",\n    backgroundImage:\n      \"url(https://www.orbs.com/wp-content/uploads/2019/02/technology-background1.png)\",\n    backgroundAttachment: \"scroll\",\n    backgroundPosition: \"top center\",\n    // minHeight: `calc(100% - ${HEADER_HEIGHT_REM}rem)`,\n    minHeight: `calc(100% - ${HEADER_HEIGHT_REM}rem)`,\n\n    // Center the content\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n}));\n\nconst App = observer(() => {\n  const classes = useStyles();\n\n  const theme = useTheme();\n  console.log(theme.palette.secondary);\n  const cryptoWalletIntegrationStore = useCryptoWalletIntegrationStore();\n\n  const isConnected = cryptoWalletIntegrationStore.isConnectedToWallet;\n  console.log({ isConnected });\n\n  const appContent = useMemo(() => {\n    if (!isConnected) {\n      return (\n        <Page>\n          <NoEthereumProviderSection\n            walletConnectionPhase={\"connect\"}\n            actionFunction={() => cryptoWalletIntegrationStore.askToConnect()}\n          />\n        </Page>\n      );\n    } else {\n      return (\n        <Switch>\n          <Route exact path={ROUTES.newVc} component={NewVCPage} />\n          <Route exact path={ROUTES.existingVc} component={ExistingVCPage} />\n          <Route exact path={ROUTES.recoverVc} component={RecoverVCPage} />\n          <Route\n            path={`${ROUTES.vcCreated}/:vcId`}\n            component={VcCreationSuccessPage}\n          />\n          <Route\n            path={`${ROUTES.vcExtended}/:vcId`}\n            component={VcExtensionSuccessPage}\n          />\n          <Route path=\"/\" component={NewVCPage} />\n        </Switch>\n      );\n    }\n  }, [cryptoWalletIntegrationStore, isConnected]);\n\n  return (\n    <>\n      <Header />\n      <div className={classes.headerSeparator} />\n      <div className={classes.mainWrapper}>\n        <main className={classes.appMain}>{appContent}</main>\n      </div>\n    </>\n  );\n});\n\nexport default App;\n","import React, { useCallback } from \"react\";\nimport { CssBaseline, useTheme } from \"@material-ui/core\";\nimport { useBoolean } from \"react-hanger\";\nimport { Page } from \"../components/structure/Page\";\nimport { NoEthereumProviderSection } from \"./NoEthereumProviderSection\";\nimport {\n  makeStyles,\n  StylesProvider,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport { baseTheme, HEADER_HEIGHT_REM } from \"../theme/Theme\";\nimport { Provider } from \"mobx-react\";\nimport { SnackbarProvider } from \"notistack\";\n\ntype TWalletConnectionPhase = \"install\" | \"connect\";\n\ninterface IProps {}\n\n// DEV_NOTE : The style to make this page looks good is copied from the 'App'\n// TODO : O.L : We should encapsulate it better.\n\nconst useStyles = makeStyles((theme) => ({\n  appMain: {\n    height: \"100%\",\n    maxWidth: \"90%\",\n    boxSizing: \"border-box\",\n    padding: theme.spacing(2),\n  },\n  mainWrapper: {\n    backgroundColor: \"#06142e\",\n    backgroundRepeat: \"repeat-y\",\n    backgroundImage:\n      \"url(https://www.orbs.com/wp-content/uploads/2019/02/technology-background1.png)\",\n    backgroundAttachment: \"scroll\",\n    backgroundPosition: \"top center\",\n    // minHeight: `calc(100% - ${HEADER_HEIGHT_REM}rem)`,\n    minHeight: `100%`,\n\n    // Center the content\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n}));\n\nexport const NoEthereumProviderPage = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const hasPressed = useBoolean(false);\n\n  const installMetaMask = useCallback(() => {\n    window.open(\"https://metamask.io/\", \"_blank\");\n    hasPressed.setTrue();\n  }, [hasPressed]);\n\n  return (\n    <div className={classes.mainWrapper}>\n      <main className={classes.appMain}>\n        <Page>\n          <NoEthereumProviderSection\n            actionFunction={installMetaMask}\n            pressedOnInstall={hasPressed.value}\n            walletConnectionPhase={\"install\"}\n          />\n        </Page>\n      </main>\n    </div>\n  );\n});\n"],"sourceRoot":""}